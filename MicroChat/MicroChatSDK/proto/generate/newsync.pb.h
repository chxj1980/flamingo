// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: newsync.proto

#ifndef PROTOBUF_newsync_2eproto__INCLUDED
#define PROTOBUF_newsync_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace com {
namespace tencent {
namespace mars {
namespace microchat {
namespace proto {
class NewSyncMsg_;
class NewSyncMsg_DefaultTypeInternal;
extern NewSyncMsg_DefaultTypeInternal _NewSyncMsg__default_instance_;
class NewSyncMsg__NewMsg_;
class NewSyncMsg__NewMsg_DefaultTypeInternal;
extern NewSyncMsg__NewMsg_DefaultTypeInternal _NewSyncMsg__NewMsg__default_instance_;
class NewSyncRequest;
class NewSyncRequestDefaultTypeInternal;
extern NewSyncRequestDefaultTypeInternal _NewSyncRequest_default_instance_;
class NewSyncRequest_continueFlag_;
class NewSyncRequest_continueFlag_DefaultTypeInternal;
extern NewSyncRequest_continueFlag_DefaultTypeInternal _NewSyncRequest_continueFlag__default_instance_;
class NewSyncResp;
class NewSyncRespDefaultTypeInternal;
extern NewSyncRespDefaultTypeInternal _NewSyncResp_default_instance_;
class NewSyncRespMsg_;
class NewSyncRespMsg_DefaultTypeInternal;
extern NewSyncRespMsg_DefaultTypeInternal _NewSyncRespMsg__default_instance_;
class NewSyncRespMsg__NewMsgContent_;
class NewSyncRespMsg__NewMsgContent_DefaultTypeInternal;
extern NewSyncRespMsg__NewMsgContent_DefaultTypeInternal _NewSyncRespMsg__NewMsgContent__default_instance_;
class NewSyncRespMsg__NewMsgContent__rawContent_;
class NewSyncRespMsg__NewMsgContent__rawContent_DefaultTypeInternal;
extern NewSyncRespMsg__NewMsgContent__rawContent_DefaultTypeInternal _NewSyncRespMsg__NewMsgContent__rawContent__default_instance_;
class NewSyncRespMsg__NewMsgContent__wxid_;
class NewSyncRespMsg__NewMsgContent__wxid_DefaultTypeInternal;
extern NewSyncRespMsg__NewMsgContent__wxid_DefaultTypeInternal _NewSyncRespMsg__NewMsgContent__wxid__default_instance_;
class commonMsg;
class commonMsgDefaultTypeInternal;
extern commonMsgDefaultTypeInternal _commonMsg_default_instance_;
class syncMsgKey_;
class syncMsgKey_DefaultTypeInternal;
extern syncMsgKey_DefaultTypeInternal _syncMsgKey__default_instance_;
class syncMsgKey__MsgKey_;
class syncMsgKey__MsgKey_DefaultTypeInternal;
extern syncMsgKey__MsgKey_DefaultTypeInternal _syncMsgKey__MsgKey__default_instance_;
class syncMsgKey__MsgKey__Key_;
class syncMsgKey__MsgKey__Key_DefaultTypeInternal;
extern syncMsgKey__MsgKey__Key_DefaultTypeInternal _syncMsgKey__MsgKey__Key__default_instance_;
}  // namespace proto
}  // namespace microchat
}  // namespace mars
}  // namespace tencent
}  // namespace com

namespace com {
namespace tencent {
namespace mars {
namespace microchat {
namespace proto {

namespace protobuf_newsync_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_newsync_2eproto

// ===================================================================

class NewSyncRequest_continueFlag_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_) */ {
 public:
  NewSyncRequest_continueFlag_();
  virtual ~NewSyncRequest_continueFlag_();

  NewSyncRequest_continueFlag_(const NewSyncRequest_continueFlag_& from);

  inline NewSyncRequest_continueFlag_& operator=(const NewSyncRequest_continueFlag_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncRequest_continueFlag_& default_instance();

  static inline const NewSyncRequest_continueFlag_* internal_default_instance() {
    return reinterpret_cast<const NewSyncRequest_continueFlag_*>(
               &_NewSyncRequest_continueFlag__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(NewSyncRequest_continueFlag_* other);

  // implements Message ----------------------------------------------

  inline NewSyncRequest_continueFlag_* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncRequest_continueFlag_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncRequest_continueFlag_& from);
  void MergeFrom(const NewSyncRequest_continueFlag_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncRequest_continueFlag_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 flag = 1;
  bool has_flag() const;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
 private:
  void set_has_flag();
  void clear_has_flag();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 flag_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncRequest) */ {
 public:
  NewSyncRequest();
  virtual ~NewSyncRequest();

  NewSyncRequest(const NewSyncRequest& from);

  inline NewSyncRequest& operator=(const NewSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncRequest& default_instance();

  static inline const NewSyncRequest* internal_default_instance() {
    return reinterpret_cast<const NewSyncRequest*>(
               &_NewSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(NewSyncRequest* other);

  // implements Message ----------------------------------------------

  inline NewSyncRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncRequest& from);
  void MergeFrom(const NewSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NewSyncRequest_continueFlag_ continueFlag_;

  // accessors -------------------------------------------------------

  // optional string tagMsgKey = 3;
  bool has_tagmsgkey() const;
  void clear_tagmsgkey();
  static const int kTagMsgKeyFieldNumber = 3;
  const ::std::string& tagmsgkey() const;
  void set_tagmsgkey(const ::std::string& value);
  #if LANG_CXX11
  void set_tagmsgkey(::std::string&& value);
  #endif
  void set_tagmsgkey(const char* value);
  void set_tagmsgkey(const char* value, size_t size);
  ::std::string* mutable_tagmsgkey();
  ::std::string* release_tagmsgkey();
  void set_allocated_tagmsgkey(::std::string* tagmsgkey);

  // optional string device = 5;
  bool has_device() const;
  void clear_device();
  static const int kDeviceFieldNumber = 5;
  const ::std::string& device() const;
  void set_device(const ::std::string& value);
  #if LANG_CXX11
  void set_device(::std::string&& value);
  #endif
  void set_device(const char* value);
  void set_device(const char* value, size_t size);
  ::std::string* mutable_device();
  ::std::string* release_device();
  void set_allocated_device(::std::string* device);

  // optional .com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_ continueFlag = 1;
  bool has_continueflag() const;
  void clear_continueflag();
  static const int kContinueFlagFieldNumber = 1;
  const ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_& continueflag() const;
  ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* mutable_continueflag();
  ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* release_continueflag();
  void set_allocated_continueflag(::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* continueflag);

  // optional int32 Selector = 2;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 2;
  ::google::protobuf::int32 selector() const;
  void set_selector(::google::protobuf::int32 value);

  // optional int32 Scene = 4;
  bool has_scene() const;
  void clear_scene();
  static const int kSceneFieldNumber = 4;
  ::google::protobuf::int32 scene() const;
  void set_scene(::google::protobuf::int32 value);

  // optional int32 SyncMsgDigest = 6;
  bool has_syncmsgdigest() const;
  void clear_syncmsgdigest();
  static const int kSyncMsgDigestFieldNumber = 6;
  ::google::protobuf::int32 syncmsgdigest() const;
  void set_syncmsgdigest(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncRequest)
 private:
  void set_has_continueflag();
  void clear_has_continueflag();
  void set_has_selector();
  void clear_has_selector();
  void set_has_tagmsgkey();
  void clear_has_tagmsgkey();
  void set_has_scene();
  void clear_has_scene();
  void set_has_device();
  void clear_has_device();
  void set_has_syncmsgdigest();
  void clear_has_syncmsgdigest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tagmsgkey_;
  ::google::protobuf::internal::ArenaStringPtr device_;
  ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* continueflag_;
  ::google::protobuf::int32 selector_;
  ::google::protobuf::int32 scene_;
  ::google::protobuf::int32 syncmsgdigest_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class syncMsgKey__MsgKey__Key_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_) */ {
 public:
  syncMsgKey__MsgKey__Key_();
  virtual ~syncMsgKey__MsgKey__Key_();

  syncMsgKey__MsgKey__Key_(const syncMsgKey__MsgKey__Key_& from);

  inline syncMsgKey__MsgKey__Key_& operator=(const syncMsgKey__MsgKey__Key_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const syncMsgKey__MsgKey__Key_& default_instance();

  static inline const syncMsgKey__MsgKey__Key_* internal_default_instance() {
    return reinterpret_cast<const syncMsgKey__MsgKey__Key_*>(
               &_syncMsgKey__MsgKey__Key__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(syncMsgKey__MsgKey__Key_* other);

  // implements Message ----------------------------------------------

  inline syncMsgKey__MsgKey__Key_* New() const PROTOBUF_FINAL { return New(NULL); }

  syncMsgKey__MsgKey__Key_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const syncMsgKey__MsgKey__Key_& from);
  void MergeFrom(const syncMsgKey__MsgKey__Key_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(syncMsgKey__MsgKey__Key_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 synckey = 2;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSynckeyFieldNumber = 2;
  ::google::protobuf::int64 synckey() const;
  void set_synckey(::google::protobuf::int64 value);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_synckey();
  void clear_has_synckey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 synckey_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class syncMsgKey__MsgKey_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_) */ {
 public:
  syncMsgKey__MsgKey_();
  virtual ~syncMsgKey__MsgKey_();

  syncMsgKey__MsgKey_(const syncMsgKey__MsgKey_& from);

  inline syncMsgKey__MsgKey_& operator=(const syncMsgKey__MsgKey_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const syncMsgKey__MsgKey_& default_instance();

  static inline const syncMsgKey__MsgKey_* internal_default_instance() {
    return reinterpret_cast<const syncMsgKey__MsgKey_*>(
               &_syncMsgKey__MsgKey__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(syncMsgKey__MsgKey_* other);

  // implements Message ----------------------------------------------

  inline syncMsgKey__MsgKey_* New() const PROTOBUF_FINAL { return New(NULL); }

  syncMsgKey__MsgKey_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const syncMsgKey__MsgKey_& from);
  void MergeFrom(const syncMsgKey__MsgKey_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(syncMsgKey__MsgKey_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef syncMsgKey__MsgKey__Key_ Key_;

  // accessors -------------------------------------------------------

  // repeated .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_ key = 2;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_& key(int index) const;
  ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_* mutable_key(int index);
  ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_* add_key();
  ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_ >*
      mutable_key();
  const ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_ >&
      key() const;

  // optional int32 size = 1;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
 private:
  void set_has_size();
  void clear_has_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_ > key_;
  ::google::protobuf::int32 size_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class syncMsgKey_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.syncMsgKey_) */ {
 public:
  syncMsgKey_();
  virtual ~syncMsgKey_();

  syncMsgKey_(const syncMsgKey_& from);

  inline syncMsgKey_& operator=(const syncMsgKey_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const syncMsgKey_& default_instance();

  static inline const syncMsgKey_* internal_default_instance() {
    return reinterpret_cast<const syncMsgKey_*>(
               &_syncMsgKey__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(syncMsgKey_* other);

  // implements Message ----------------------------------------------

  inline syncMsgKey_* New() const PROTOBUF_FINAL { return New(NULL); }

  syncMsgKey_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const syncMsgKey_& from);
  void MergeFrom(const syncMsgKey_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(syncMsgKey_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef syncMsgKey__MsgKey_ MsgKey_;

  // accessors -------------------------------------------------------

  // optional .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_ msgkey = 2;
  bool has_msgkey() const;
  void clear_msgkey();
  static const int kMsgkeyFieldNumber = 2;
  const ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_& msgkey() const;
  ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* mutable_msgkey();
  ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* release_msgkey();
  void set_allocated_msgkey(::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* msgkey);

  // optional int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.syncMsgKey_)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_msgkey();
  void clear_has_msgkey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* msgkey_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncRespMsg__NewMsgContent__wxid_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_) */ {
 public:
  NewSyncRespMsg__NewMsgContent__wxid_();
  virtual ~NewSyncRespMsg__NewMsgContent__wxid_();

  NewSyncRespMsg__NewMsgContent__wxid_(const NewSyncRespMsg__NewMsgContent__wxid_& from);

  inline NewSyncRespMsg__NewMsgContent__wxid_& operator=(const NewSyncRespMsg__NewMsgContent__wxid_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncRespMsg__NewMsgContent__wxid_& default_instance();

  static inline const NewSyncRespMsg__NewMsgContent__wxid_* internal_default_instance() {
    return reinterpret_cast<const NewSyncRespMsg__NewMsgContent__wxid_*>(
               &_NewSyncRespMsg__NewMsgContent__wxid__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(NewSyncRespMsg__NewMsgContent__wxid_* other);

  // implements Message ----------------------------------------------

  inline NewSyncRespMsg__NewMsgContent__wxid_* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncRespMsg__NewMsgContent__wxid_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncRespMsg__NewMsgContent__wxid_& from);
  void MergeFrom(const NewSyncRespMsg__NewMsgContent__wxid_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncRespMsg__NewMsgContent__wxid_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
 private:
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncRespMsg__NewMsgContent__rawContent_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_) */ {
 public:
  NewSyncRespMsg__NewMsgContent__rawContent_();
  virtual ~NewSyncRespMsg__NewMsgContent__rawContent_();

  NewSyncRespMsg__NewMsgContent__rawContent_(const NewSyncRespMsg__NewMsgContent__rawContent_& from);

  inline NewSyncRespMsg__NewMsgContent__rawContent_& operator=(const NewSyncRespMsg__NewMsgContent__rawContent_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncRespMsg__NewMsgContent__rawContent_& default_instance();

  static inline const NewSyncRespMsg__NewMsgContent__rawContent_* internal_default_instance() {
    return reinterpret_cast<const NewSyncRespMsg__NewMsgContent__rawContent_*>(
               &_NewSyncRespMsg__NewMsgContent__rawContent__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(NewSyncRespMsg__NewMsgContent__rawContent_* other);

  // implements Message ----------------------------------------------

  inline NewSyncRespMsg__NewMsgContent__rawContent_* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncRespMsg__NewMsgContent__rawContent_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncRespMsg__NewMsgContent__rawContent_& from);
  void MergeFrom(const NewSyncRespMsg__NewMsgContent__rawContent_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncRespMsg__NewMsgContent__rawContent_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string content = 1;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
 private:
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncRespMsg__NewMsgContent_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_) */ {
 public:
  NewSyncRespMsg__NewMsgContent_();
  virtual ~NewSyncRespMsg__NewMsgContent_();

  NewSyncRespMsg__NewMsgContent_(const NewSyncRespMsg__NewMsgContent_& from);

  inline NewSyncRespMsg__NewMsgContent_& operator=(const NewSyncRespMsg__NewMsgContent_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncRespMsg__NewMsgContent_& default_instance();

  static inline const NewSyncRespMsg__NewMsgContent_* internal_default_instance() {
    return reinterpret_cast<const NewSyncRespMsg__NewMsgContent_*>(
               &_NewSyncRespMsg__NewMsgContent__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(NewSyncRespMsg__NewMsgContent_* other);

  // implements Message ----------------------------------------------

  inline NewSyncRespMsg__NewMsgContent_* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncRespMsg__NewMsgContent_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncRespMsg__NewMsgContent_& from);
  void MergeFrom(const NewSyncRespMsg__NewMsgContent_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncRespMsg__NewMsgContent_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NewSyncRespMsg__NewMsgContent__wxid_ wxid_;
  typedef NewSyncRespMsg__NewMsgContent__rawContent_ rawContent_;

  // accessors -------------------------------------------------------

  // optional string tag8 = 8;
  bool has_tag8() const;
  void clear_tag8();
  static const int kTag8FieldNumber = 8;
  const ::std::string& tag8() const;
  void set_tag8(const ::std::string& value);
  #if LANG_CXX11
  void set_tag8(::std::string&& value);
  #endif
  void set_tag8(const char* value);
  void set_tag8(const char* value, size_t size);
  ::std::string* mutable_tag8();
  ::std::string* release_tag8();
  void set_allocated_tag8(::std::string* tag8);

  // optional string anticlient = 10;
  bool has_anticlient() const;
  void clear_anticlient();
  static const int kAnticlientFieldNumber = 10;
  const ::std::string& anticlient() const;
  void set_anticlient(const ::std::string& value);
  #if LANG_CXX11
  void set_anticlient(::std::string&& value);
  #endif
  void set_anticlient(const char* value);
  void set_anticlient(const char* value, size_t size);
  ::std::string* mutable_anticlient();
  ::std::string* release_anticlient();
  void set_allocated_anticlient(::std::string* anticlient);

  // optional string xmlContent = 11;
  bool has_xmlcontent() const;
  void clear_xmlcontent();
  static const int kXmlContentFieldNumber = 11;
  const ::std::string& xmlcontent() const;
  void set_xmlcontent(const ::std::string& value);
  #if LANG_CXX11
  void set_xmlcontent(::std::string&& value);
  #endif
  void set_xmlcontent(const char* value);
  void set_xmlcontent(const char* value, size_t size);
  ::std::string* mutable_xmlcontent();
  ::std::string* release_xmlcontent();
  void set_allocated_xmlcontent(::std::string* xmlcontent);

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ from = 2;
  bool has_from() const;
  void clear_from();
  static const int kFromFieldNumber = 2;
  const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_& from() const;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* mutable_from();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* release_from();
  void set_allocated_from(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* from);

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ to = 3;
  bool has_to() const;
  void clear_to();
  static const int kToFieldNumber = 3;
  const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_& to() const;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* mutable_to();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* release_to();
  void set_allocated_to(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* to);

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_ rawcontent = 5;
  bool has_rawcontent() const;
  void clear_rawcontent();
  static const int kRawcontentFieldNumber = 5;
  const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_& rawcontent() const;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* mutable_rawcontent();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* release_rawcontent();
  void set_allocated_rawcontent(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* rawcontent);

  // optional int64 serverid = 1;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::int64 serverid() const;
  void set_serverid(::google::protobuf::int64 value);

  // optional int32 type = 4;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 status = 6;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional int32 tag7 = 7;
  bool has_tag7() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  ::google::protobuf::int32 tag7() const;
  void set_tag7(::google::protobuf::int32 value);

  // optional int32 createTime = 9;
  bool has_createtime() const;
  void clear_createtime();
  static const int kCreateTimeFieldNumber = 9;
  ::google::protobuf::int32 createtime() const;
  void set_createtime(::google::protobuf::int32 value);

  // optional int64 svrId = 12;
  bool has_svrid() const;
  void clear_svrid();
  static const int kSvrIdFieldNumber = 12;
  ::google::protobuf::int64 svrid() const;
  void set_svrid(::google::protobuf::int64 value);

  // optional int32 msgKey = 13;
  bool has_msgkey() const;
  void clear_msgkey();
  static const int kMsgKeyFieldNumber = 13;
  ::google::protobuf::int32 msgkey() const;
  void set_msgkey(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
 private:
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_from();
  void clear_has_from();
  void set_has_to();
  void clear_has_to();
  void set_has_type();
  void clear_has_type();
  void set_has_rawcontent();
  void clear_has_rawcontent();
  void set_has_status();
  void clear_has_status();
  void set_has_tag7();
  void clear_has_tag7();
  void set_has_tag8();
  void clear_has_tag8();
  void set_has_createtime();
  void clear_has_createtime();
  void set_has_anticlient();
  void clear_has_anticlient();
  void set_has_xmlcontent();
  void clear_has_xmlcontent();
  void set_has_svrid();
  void clear_has_svrid();
  void set_has_msgkey();
  void clear_has_msgkey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag8_;
  ::google::protobuf::internal::ArenaStringPtr anticlient_;
  ::google::protobuf::internal::ArenaStringPtr xmlcontent_;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* from_;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* to_;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* rawcontent_;
  ::google::protobuf::int64 serverid_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 tag7_;
  ::google::protobuf::int32 createtime_;
  ::google::protobuf::int64 svrid_;
  ::google::protobuf::int32 msgkey_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncRespMsg_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncRespMsg_) */ {
 public:
  NewSyncRespMsg_();
  virtual ~NewSyncRespMsg_();

  NewSyncRespMsg_(const NewSyncRespMsg_& from);

  inline NewSyncRespMsg_& operator=(const NewSyncRespMsg_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncRespMsg_& default_instance();

  static inline const NewSyncRespMsg_* internal_default_instance() {
    return reinterpret_cast<const NewSyncRespMsg_*>(
               &_NewSyncRespMsg__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(NewSyncRespMsg_* other);

  // implements Message ----------------------------------------------

  inline NewSyncRespMsg_* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncRespMsg_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncRespMsg_& from);
  void MergeFrom(const NewSyncRespMsg_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncRespMsg_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NewSyncRespMsg__NewMsgContent_ NewMsgContent_;

  // accessors -------------------------------------------------------

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_ content = 2;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_& content() const;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* mutable_content();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* release_content();
  void set_allocated_content(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* content);

  // optional int32 size = 1;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 1;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
 private:
  void set_has_size();
  void clear_has_size();
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* content_;
  ::google::protobuf::int32 size_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncMsg__NewMsg_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_) */ {
 public:
  NewSyncMsg__NewMsg_();
  virtual ~NewSyncMsg__NewMsg_();

  NewSyncMsg__NewMsg_(const NewSyncMsg__NewMsg_& from);

  inline NewSyncMsg__NewMsg_& operator=(const NewSyncMsg__NewMsg_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncMsg__NewMsg_& default_instance();

  static inline const NewSyncMsg__NewMsg_* internal_default_instance() {
    return reinterpret_cast<const NewSyncMsg__NewMsg_*>(
               &_NewSyncMsg__NewMsg__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(NewSyncMsg__NewMsg_* other);

  // implements Message ----------------------------------------------

  inline NewSyncMsg__NewMsg_* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncMsg__NewMsg_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncMsg__NewMsg_& from);
  void MergeFrom(const NewSyncMsg__NewMsg_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncMsg__NewMsg_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 type = 1;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 type_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncMsg_ : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncMsg_) */ {
 public:
  NewSyncMsg_();
  virtual ~NewSyncMsg_();

  NewSyncMsg_(const NewSyncMsg_& from);

  inline NewSyncMsg_& operator=(const NewSyncMsg_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncMsg_& default_instance();

  static inline const NewSyncMsg_* internal_default_instance() {
    return reinterpret_cast<const NewSyncMsg_*>(
               &_NewSyncMsg__default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(NewSyncMsg_* other);

  // implements Message ----------------------------------------------

  inline NewSyncMsg_* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncMsg_* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncMsg_& from);
  void MergeFrom(const NewSyncMsg_& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncMsg_* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef NewSyncMsg__NewMsg_ NewMsg_;

  // accessors -------------------------------------------------------

  // repeated .com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_ msg = 2;
  int msg_size() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_& msg(int index) const;
  ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_* mutable_msg(int index);
  ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_* add_msg();
  ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_ >*
      mutable_msg();
  const ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_ >&
      msg() const;

  // optional int32 cnt = 1;
  bool has_cnt() const;
  void clear_cnt();
  static const int kCntFieldNumber = 1;
  ::google::protobuf::int32 cnt() const;
  void set_cnt(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncMsg_)
 private:
  void set_has_cnt();
  void clear_has_cnt();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_ > msg_;
  ::google::protobuf::int32 cnt_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewSyncResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.NewSyncResp) */ {
 public:
  NewSyncResp();
  virtual ~NewSyncResp();

  NewSyncResp(const NewSyncResp& from);

  inline NewSyncResp& operator=(const NewSyncResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewSyncResp& default_instance();

  static inline const NewSyncResp* internal_default_instance() {
    return reinterpret_cast<const NewSyncResp*>(
               &_NewSyncResp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(NewSyncResp* other);

  // implements Message ----------------------------------------------

  inline NewSyncResp* New() const PROTOBUF_FINAL { return New(NULL); }

  NewSyncResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewSyncResp& from);
  void MergeFrom(const NewSyncResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewSyncResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strSyncKey = 4;
  bool has_strsynckey() const;
  void clear_strsynckey();
  static const int kStrSyncKeyFieldNumber = 4;
  const ::std::string& strsynckey() const;
  void set_strsynckey(const ::std::string& value);
  #if LANG_CXX11
  void set_strsynckey(::std::string&& value);
  #endif
  void set_strsynckey(const char* value);
  void set_strsynckey(const char* value, size_t size);
  ::std::string* mutable_strsynckey();
  ::std::string* release_strsynckey();
  void set_allocated_strsynckey(::std::string* strsynckey);

  // optional .com.tencent.mars.microchat.proto.NewSyncMsg_ newmsg = 2;
  bool has_newmsg() const;
  void clear_newmsg();
  static const int kNewmsgFieldNumber = 2;
  const ::com::tencent::mars::microchat::proto::NewSyncMsg_& newmsg() const;
  ::com::tencent::mars::microchat::proto::NewSyncMsg_* mutable_newmsg();
  ::com::tencent::mars::microchat::proto::NewSyncMsg_* release_newmsg();
  void set_allocated_newmsg(::com::tencent::mars::microchat::proto::NewSyncMsg_* newmsg);

  // optional int32 tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  ::google::protobuf::int32 tag1() const;
  void set_tag1(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  ::google::protobuf::int32 tag5() const;
  void set_tag5(::google::protobuf::int32 value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // optional int32 Utc = 7;
  bool has_utc() const;
  void clear_utc();
  static const int kUtcFieldNumber = 7;
  ::google::protobuf::int32 utc() const;
  void set_utc(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.NewSyncResp)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_newmsg();
  void clear_has_newmsg();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_strsynckey();
  void clear_has_strsynckey();
  void set_has_tag5();
  void clear_has_tag5();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_utc();
  void clear_has_utc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strsynckey_;
  ::com::tencent::mars::microchat::proto::NewSyncMsg_* newmsg_;
  ::google::protobuf::int32 tag1_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 tag5_;
  ::google::protobuf::int32 tag6_;
  ::google::protobuf::int32 utc_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class commonMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.commonMsg) */ {
 public:
  commonMsg();
  virtual ~commonMsg();

  commonMsg(const commonMsg& from);

  inline commonMsg& operator=(const commonMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const commonMsg& default_instance();

  static inline const commonMsg* internal_default_instance() {
    return reinterpret_cast<const commonMsg*>(
               &_commonMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(commonMsg* other);

  // implements Message ----------------------------------------------

  inline commonMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  commonMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const commonMsg& from);
  void MergeFrom(const commonMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(commonMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string msg = 2;
  bool has_msg() const;
  void clear_msg();
  static const int kMsgFieldNumber = 2;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // optional int32 len = 1;
  bool has_len() const;
  void clear_len();
  static const int kLenFieldNumber = 1;
  ::google::protobuf::int32 len() const;
  void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.commonMsg)
 private:
  void set_has_len();
  void clear_has_len();
  void set_has_msg();
  void clear_has_msg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int32 len_;
  friend struct protobuf_newsync_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncRequest_continueFlag_

// optional int32 flag = 1;
inline bool NewSyncRequest_continueFlag_::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncRequest_continueFlag_::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncRequest_continueFlag_::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncRequest_continueFlag_::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
inline ::google::protobuf::int32 NewSyncRequest_continueFlag_::flag() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_.flag)
  return flag_;
}
inline void NewSyncRequest_continueFlag_::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_.flag)
}

// -------------------------------------------------------------------

// NewSyncRequest

// optional .com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_ continueFlag = 1;
inline bool NewSyncRequest::has_continueflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewSyncRequest::set_has_continueflag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewSyncRequest::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewSyncRequest::clear_continueflag() {
  if (continueflag_ != NULL) continueflag_->::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_::Clear();
  clear_has_continueflag();
}
inline const ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_& NewSyncRequest::continueflag() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
  return continueflag_ != NULL ? *continueflag_
                         : *::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* NewSyncRequest::mutable_continueflag() {
  set_has_continueflag();
  if (continueflag_ == NULL) {
    continueflag_ = new ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
  return continueflag_;
}
inline ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* NewSyncRequest::release_continueflag() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
  clear_has_continueflag();
  ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* temp = continueflag_;
  continueflag_ = NULL;
  return temp;
}
inline void NewSyncRequest::set_allocated_continueflag(::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* continueflag) {
  delete continueflag_;
  continueflag_ = continueflag;
  if (continueflag) {
    set_has_continueflag();
  } else {
    clear_has_continueflag();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
}

// optional int32 Selector = 2;
inline bool NewSyncRequest::has_selector() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewSyncRequest::set_has_selector() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewSyncRequest::clear_has_selector() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewSyncRequest::clear_selector() {
  selector_ = 0;
  clear_has_selector();
}
inline ::google::protobuf::int32 NewSyncRequest::selector() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.Selector)
  return selector_;
}
inline void NewSyncRequest::set_selector(::google::protobuf::int32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.Selector)
}

// optional string tagMsgKey = 3;
inline bool NewSyncRequest::has_tagmsgkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncRequest::set_has_tagmsgkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncRequest::clear_has_tagmsgkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncRequest::clear_tagmsgkey() {
  tagmsgkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagmsgkey();
}
inline const ::std::string& NewSyncRequest::tagmsgkey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
  return tagmsgkey_.GetNoArena();
}
inline void NewSyncRequest::set_tagmsgkey(const ::std::string& value) {
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
#if LANG_CXX11
inline void NewSyncRequest::set_tagmsgkey(::std::string&& value) {
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
#endif
inline void NewSyncRequest::set_tagmsgkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
inline void NewSyncRequest::set_tagmsgkey(const char* value, size_t size) {
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
inline ::std::string* NewSyncRequest::mutable_tagmsgkey() {
  set_has_tagmsgkey();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
  return tagmsgkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRequest::release_tagmsgkey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
  clear_has_tagmsgkey();
  return tagmsgkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRequest::set_allocated_tagmsgkey(::std::string* tagmsgkey) {
  if (tagmsgkey != NULL) {
    set_has_tagmsgkey();
  } else {
    clear_has_tagmsgkey();
  }
  tagmsgkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagmsgkey);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}

// optional int32 Scene = 4;
inline bool NewSyncRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewSyncRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewSyncRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewSyncRequest::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
inline ::google::protobuf::int32 NewSyncRequest::scene() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.Scene)
  return scene_;
}
inline void NewSyncRequest::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.Scene)
}

// optional string device = 5;
inline bool NewSyncRequest::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewSyncRequest::set_has_device() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewSyncRequest::clear_has_device() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewSyncRequest::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
inline const ::std::string& NewSyncRequest::device() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.device)
  return device_.GetNoArena();
}
inline void NewSyncRequest::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
#if LANG_CXX11
inline void NewSyncRequest::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
#endif
inline void NewSyncRequest::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
inline void NewSyncRequest::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
inline ::std::string* NewSyncRequest::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRequest.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRequest::release_device() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRequest.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRequest::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}

// optional int32 SyncMsgDigest = 6;
inline bool NewSyncRequest::has_syncmsgdigest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NewSyncRequest::set_has_syncmsgdigest() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NewSyncRequest::clear_has_syncmsgdigest() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NewSyncRequest::clear_syncmsgdigest() {
  syncmsgdigest_ = 0;
  clear_has_syncmsgdigest();
}
inline ::google::protobuf::int32 NewSyncRequest::syncmsgdigest() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.SyncMsgDigest)
  return syncmsgdigest_;
}
inline void NewSyncRequest::set_syncmsgdigest(::google::protobuf::int32 value) {
  set_has_syncmsgdigest();
  syncmsgdigest_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.SyncMsgDigest)
}

// -------------------------------------------------------------------

// syncMsgKey__MsgKey__Key_

// optional int32 type = 1;
inline bool syncMsgKey__MsgKey__Key_::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void syncMsgKey__MsgKey__Key_::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void syncMsgKey__MsgKey__Key_::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void syncMsgKey__MsgKey__Key_::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 syncMsgKey__MsgKey__Key_::type() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.type)
  return type_;
}
inline void syncMsgKey__MsgKey__Key_::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.type)
}

// optional int64 synckey = 2;
inline bool syncMsgKey__MsgKey__Key_::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void syncMsgKey__MsgKey__Key_::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void syncMsgKey__MsgKey__Key_::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void syncMsgKey__MsgKey__Key_::clear_synckey() {
  synckey_ = GOOGLE_LONGLONG(0);
  clear_has_synckey();
}
inline ::google::protobuf::int64 syncMsgKey__MsgKey__Key_::synckey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.synckey)
  return synckey_;
}
inline void syncMsgKey__MsgKey__Key_::set_synckey(::google::protobuf::int64 value) {
  set_has_synckey();
  synckey_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.synckey)
}

// -------------------------------------------------------------------

// syncMsgKey__MsgKey_

// optional int32 size = 1;
inline bool syncMsgKey__MsgKey_::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void syncMsgKey__MsgKey_::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
inline void syncMsgKey__MsgKey_::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void syncMsgKey__MsgKey_::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 syncMsgKey__MsgKey_::size() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.size)
  return size_;
}
inline void syncMsgKey__MsgKey_::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.size)
}

// repeated .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_ key = 2;
inline int syncMsgKey__MsgKey_::key_size() const {
  return key_.size();
}
inline void syncMsgKey__MsgKey_::clear_key() {
  key_.Clear();
}
inline const ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_& syncMsgKey__MsgKey_::key(int index) const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_.Get(index);
}
inline ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_* syncMsgKey__MsgKey_::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_.Mutable(index);
}
inline ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_* syncMsgKey__MsgKey_::add_key() {
  // @@protoc_insertion_point(field_add:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_ >*
syncMsgKey__MsgKey_::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return &key_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_ >&
syncMsgKey__MsgKey_::key() const {
  // @@protoc_insertion_point(field_list:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_;
}

// -------------------------------------------------------------------

// syncMsgKey_

// optional int32 len = 1;
inline bool syncMsgKey_::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void syncMsgKey_::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void syncMsgKey_::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void syncMsgKey_::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 syncMsgKey_::len() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.len)
  return len_;
}
inline void syncMsgKey_::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.len)
}

// optional .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_ msgkey = 2;
inline bool syncMsgKey_::has_msgkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void syncMsgKey_::set_has_msgkey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void syncMsgKey_::clear_has_msgkey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void syncMsgKey_::clear_msgkey() {
  if (msgkey_ != NULL) msgkey_->::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_::Clear();
  clear_has_msgkey();
}
inline const ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_& syncMsgKey_::msgkey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
  return msgkey_ != NULL ? *msgkey_
                         : *::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* syncMsgKey_::mutable_msgkey() {
  set_has_msgkey();
  if (msgkey_ == NULL) {
    msgkey_ = new ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
  return msgkey_;
}
inline ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* syncMsgKey_::release_msgkey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
  clear_has_msgkey();
  ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* temp = msgkey_;
  msgkey_ = NULL;
  return temp;
}
inline void syncMsgKey_::set_allocated_msgkey(::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* msgkey) {
  delete msgkey_;
  msgkey_ = msgkey;
  if (msgkey) {
    set_has_msgkey();
  } else {
    clear_has_msgkey();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
}

// -------------------------------------------------------------------

// NewSyncRespMsg__NewMsgContent__wxid_

// optional string id = 1;
inline bool NewSyncRespMsg__NewMsgContent__wxid_::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent__wxid_::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncRespMsg__NewMsgContent__wxid_::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncRespMsg__NewMsgContent__wxid_::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
inline const ::std::string& NewSyncRespMsg__NewMsgContent__wxid_::id() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
  return id_.GetNoArena();
}
inline void NewSyncRespMsg__NewMsgContent__wxid_::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
#if LANG_CXX11
inline void NewSyncRespMsg__NewMsgContent__wxid_::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
#endif
inline void NewSyncRespMsg__NewMsgContent__wxid_::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
inline void NewSyncRespMsg__NewMsgContent__wxid_::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
inline ::std::string* NewSyncRespMsg__NewMsgContent__wxid_::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRespMsg__NewMsgContent__wxid_::release_id() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRespMsg__NewMsgContent__wxid_::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}

// -------------------------------------------------------------------

// NewSyncRespMsg__NewMsgContent__rawContent_

// optional string content = 1;
inline bool NewSyncRespMsg__NewMsgContent__rawContent_::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent__rawContent_::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncRespMsg__NewMsgContent__rawContent_::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncRespMsg__NewMsgContent__rawContent_::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& NewSyncRespMsg__NewMsgContent__rawContent_::content() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
  return content_.GetNoArena();
}
inline void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
#if LANG_CXX11
inline void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
#endif
inline void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
inline void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
inline ::std::string* NewSyncRespMsg__NewMsgContent__rawContent_::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRespMsg__NewMsgContent__rawContent_::release_content() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRespMsg__NewMsgContent__rawContent_::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}

// -------------------------------------------------------------------

// NewSyncRespMsg__NewMsgContent_

// optional int64 serverid = 1;
inline bool NewSyncRespMsg__NewMsgContent_::has_serverid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_serverid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 NewSyncRespMsg__NewMsgContent_::serverid() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.serverid)
  return serverid_;
}
inline void NewSyncRespMsg__NewMsgContent_::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.serverid)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ from = 2;
inline bool NewSyncRespMsg__NewMsgContent_::has_from() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_from() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_from() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_from() {
  if (from_ != NULL) from_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::Clear();
  clear_has_from();
}
inline const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_& NewSyncRespMsg__NewMsgContent_::from() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
  return from_ != NULL ? *from_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::mutable_from() {
  set_has_from();
  if (from_ == NULL) {
    from_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
  return from_;
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::release_from() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
  clear_has_from();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* temp = from_;
  from_ = NULL;
  return temp;
}
inline void NewSyncRespMsg__NewMsgContent_::set_allocated_from(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* from) {
  delete from_;
  from_ = from;
  if (from) {
    set_has_from();
  } else {
    clear_has_from();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ to = 3;
inline bool NewSyncRespMsg__NewMsgContent_::has_to() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_to() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_to() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_to() {
  if (to_ != NULL) to_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::Clear();
  clear_has_to();
}
inline const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_& NewSyncRespMsg__NewMsgContent_::to() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
  return to_ != NULL ? *to_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::mutable_to() {
  set_has_to();
  if (to_ == NULL) {
    to_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
  return to_;
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::release_to() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
  clear_has_to();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* temp = to_;
  to_ = NULL;
  return temp;
}
inline void NewSyncRespMsg__NewMsgContent_::set_allocated_to(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* to) {
  delete to_;
  to_ = to;
  if (to) {
    set_has_to();
  } else {
    clear_has_to();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
}

// optional int32 type = 4;
inline bool NewSyncRespMsg__NewMsgContent_::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::type() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.type)
  return type_;
}
inline void NewSyncRespMsg__NewMsgContent_::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.type)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_ rawcontent = 5;
inline bool NewSyncRespMsg__NewMsgContent_::has_rawcontent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_rawcontent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_rawcontent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_rawcontent() {
  if (rawcontent_ != NULL) rawcontent_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_::Clear();
  clear_has_rawcontent();
}
inline const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_& NewSyncRespMsg__NewMsgContent_::rawcontent() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
  return rawcontent_ != NULL ? *rawcontent_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* NewSyncRespMsg__NewMsgContent_::mutable_rawcontent() {
  set_has_rawcontent();
  if (rawcontent_ == NULL) {
    rawcontent_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
  return rawcontent_;
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* NewSyncRespMsg__NewMsgContent_::release_rawcontent() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
  clear_has_rawcontent();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* temp = rawcontent_;
  rawcontent_ = NULL;
  return temp;
}
inline void NewSyncRespMsg__NewMsgContent_::set_allocated_rawcontent(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* rawcontent) {
  delete rawcontent_;
  rawcontent_ = rawcontent;
  if (rawcontent) {
    set_has_rawcontent();
  } else {
    clear_has_rawcontent();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
}

// optional int32 status = 6;
inline bool NewSyncRespMsg__NewMsgContent_::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::status() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.status)
  return status_;
}
inline void NewSyncRespMsg__NewMsgContent_::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.status)
}

// optional int32 tag7 = 7;
inline bool NewSyncRespMsg__NewMsgContent_::has_tag7() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_tag7() {
  _has_bits_[0] |= 0x00000200u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_tag7() {
  tag7_ = 0;
  clear_has_tag7();
}
inline ::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::tag7() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag7)
  return tag7_;
}
inline void NewSyncRespMsg__NewMsgContent_::set_tag7(::google::protobuf::int32 value) {
  set_has_tag7();
  tag7_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag7)
}

// optional string tag8 = 8;
inline bool NewSyncRespMsg__NewMsgContent_::has_tag8() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_tag8() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_tag8() {
  tag8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag8();
}
inline const ::std::string& NewSyncRespMsg__NewMsgContent_::tag8() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
  return tag8_.GetNoArena();
}
inline void NewSyncRespMsg__NewMsgContent_::set_tag8(const ::std::string& value) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
#if LANG_CXX11
inline void NewSyncRespMsg__NewMsgContent_::set_tag8(::std::string&& value) {
  set_has_tag8();
  tag8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
#endif
inline void NewSyncRespMsg__NewMsgContent_::set_tag8(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
inline void NewSyncRespMsg__NewMsgContent_::set_tag8(const char* value, size_t size) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
inline ::std::string* NewSyncRespMsg__NewMsgContent_::mutable_tag8() {
  set_has_tag8();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
  return tag8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRespMsg__NewMsgContent_::release_tag8() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
  clear_has_tag8();
  return tag8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRespMsg__NewMsgContent_::set_allocated_tag8(::std::string* tag8) {
  if (tag8 != NULL) {
    set_has_tag8();
  } else {
    clear_has_tag8();
  }
  tag8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag8);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}

// optional int32 createTime = 9;
inline bool NewSyncRespMsg__NewMsgContent_::has_createtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_createtime() {
  _has_bits_[0] |= 0x00000400u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
inline ::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::createtime() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.createTime)
  return createtime_;
}
inline void NewSyncRespMsg__NewMsgContent_::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.createTime)
}

// optional string anticlient = 10;
inline bool NewSyncRespMsg__NewMsgContent_::has_anticlient() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_anticlient() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_anticlient() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_anticlient() {
  anticlient_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anticlient();
}
inline const ::std::string& NewSyncRespMsg__NewMsgContent_::anticlient() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
  return anticlient_.GetNoArena();
}
inline void NewSyncRespMsg__NewMsgContent_::set_anticlient(const ::std::string& value) {
  set_has_anticlient();
  anticlient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
#if LANG_CXX11
inline void NewSyncRespMsg__NewMsgContent_::set_anticlient(::std::string&& value) {
  set_has_anticlient();
  anticlient_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
#endif
inline void NewSyncRespMsg__NewMsgContent_::set_anticlient(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_anticlient();
  anticlient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
inline void NewSyncRespMsg__NewMsgContent_::set_anticlient(const char* value, size_t size) {
  set_has_anticlient();
  anticlient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
inline ::std::string* NewSyncRespMsg__NewMsgContent_::mutable_anticlient() {
  set_has_anticlient();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
  return anticlient_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRespMsg__NewMsgContent_::release_anticlient() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
  clear_has_anticlient();
  return anticlient_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRespMsg__NewMsgContent_::set_allocated_anticlient(::std::string* anticlient) {
  if (anticlient != NULL) {
    set_has_anticlient();
  } else {
    clear_has_anticlient();
  }
  anticlient_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anticlient);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}

// optional string xmlContent = 11;
inline bool NewSyncRespMsg__NewMsgContent_::has_xmlcontent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_xmlcontent() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_xmlcontent() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_xmlcontent() {
  xmlcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_xmlcontent();
}
inline const ::std::string& NewSyncRespMsg__NewMsgContent_::xmlcontent() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
  return xmlcontent_.GetNoArena();
}
inline void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(const ::std::string& value) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
#if LANG_CXX11
inline void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(::std::string&& value) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
#endif
inline void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
inline void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(const char* value, size_t size) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
inline ::std::string* NewSyncRespMsg__NewMsgContent_::mutable_xmlcontent() {
  set_has_xmlcontent();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
  return xmlcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncRespMsg__NewMsgContent_::release_xmlcontent() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
  clear_has_xmlcontent();
  return xmlcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncRespMsg__NewMsgContent_::set_allocated_xmlcontent(::std::string* xmlcontent) {
  if (xmlcontent != NULL) {
    set_has_xmlcontent();
  } else {
    clear_has_xmlcontent();
  }
  xmlcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xmlcontent);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}

// optional int64 svrId = 12;
inline bool NewSyncRespMsg__NewMsgContent_::has_svrid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_svrid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_svrid() {
  svrid_ = GOOGLE_LONGLONG(0);
  clear_has_svrid();
}
inline ::google::protobuf::int64 NewSyncRespMsg__NewMsgContent_::svrid() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.svrId)
  return svrid_;
}
inline void NewSyncRespMsg__NewMsgContent_::set_svrid(::google::protobuf::int64 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.svrId)
}

// optional int32 msgKey = 13;
inline bool NewSyncRespMsg__NewMsgContent_::has_msgkey() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void NewSyncRespMsg__NewMsgContent_::set_has_msgkey() {
  _has_bits_[0] |= 0x00001000u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_has_msgkey() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void NewSyncRespMsg__NewMsgContent_::clear_msgkey() {
  msgkey_ = 0;
  clear_has_msgkey();
}
inline ::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::msgkey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.msgKey)
  return msgkey_;
}
inline void NewSyncRespMsg__NewMsgContent_::set_msgkey(::google::protobuf::int32 value) {
  set_has_msgkey();
  msgkey_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.msgKey)
}

// -------------------------------------------------------------------

// NewSyncRespMsg_

// optional int32 size = 1;
inline bool NewSyncRespMsg_::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewSyncRespMsg_::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewSyncRespMsg_::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewSyncRespMsg_::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 NewSyncRespMsg_::size() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.size)
  return size_;
}
inline void NewSyncRespMsg_::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.size)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_ content = 2;
inline bool NewSyncRespMsg_::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncRespMsg_::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncRespMsg_::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncRespMsg_::clear_content() {
  if (content_ != NULL) content_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_::Clear();
  clear_has_content();
}
inline const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_& NewSyncRespMsg_::content() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
  return content_ != NULL ? *content_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* NewSyncRespMsg_::mutable_content() {
  set_has_content();
  if (content_ == NULL) {
    content_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
  return content_;
}
inline ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* NewSyncRespMsg_::release_content() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
  clear_has_content();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* temp = content_;
  content_ = NULL;
  return temp;
}
inline void NewSyncRespMsg_::set_allocated_content(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
}

// -------------------------------------------------------------------

// NewSyncMsg__NewMsg_

// optional int32 type = 1;
inline bool NewSyncMsg__NewMsg_::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewSyncMsg__NewMsg_::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewSyncMsg__NewMsg_::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewSyncMsg__NewMsg_::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 NewSyncMsg__NewMsg_::type() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.type)
  return type_;
}
inline void NewSyncMsg__NewMsg_::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.type)
}

// optional string msg = 2;
inline bool NewSyncMsg__NewMsg_::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncMsg__NewMsg_::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncMsg__NewMsg_::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncMsg__NewMsg_::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& NewSyncMsg__NewMsg_::msg() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
  return msg_.GetNoArena();
}
inline void NewSyncMsg__NewMsg_::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
#if LANG_CXX11
inline void NewSyncMsg__NewMsg_::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
#endif
inline void NewSyncMsg__NewMsg_::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
inline void NewSyncMsg__NewMsg_::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
inline ::std::string* NewSyncMsg__NewMsg_::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncMsg__NewMsg_::release_msg() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncMsg__NewMsg_::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}

// -------------------------------------------------------------------

// NewSyncMsg_

// optional int32 cnt = 1;
inline bool NewSyncMsg_::has_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncMsg_::set_has_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncMsg_::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncMsg_::clear_cnt() {
  cnt_ = 0;
  clear_has_cnt();
}
inline ::google::protobuf::int32 NewSyncMsg_::cnt() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.cnt)
  return cnt_;
}
inline void NewSyncMsg_::set_cnt(::google::protobuf::int32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncMsg_.cnt)
}

// repeated .com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_ msg = 2;
inline int NewSyncMsg_::msg_size() const {
  return msg_.size();
}
inline void NewSyncMsg_::clear_msg() {
  msg_.Clear();
}
inline const ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_& NewSyncMsg_::msg(int index) const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_.Get(index);
}
inline ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_* NewSyncMsg_::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_.Mutable(index);
}
inline ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_* NewSyncMsg_::add_msg() {
  // @@protoc_insertion_point(field_add:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_ >*
NewSyncMsg_::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return &msg_;
}
inline const ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_ >&
NewSyncMsg_::msg() const {
  // @@protoc_insertion_point(field_list:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_;
}

// -------------------------------------------------------------------

// NewSyncResp

// optional int32 tag1 = 1;
inline bool NewSyncResp::has_tag1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NewSyncResp::set_has_tag1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NewSyncResp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NewSyncResp::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
inline ::google::protobuf::int32 NewSyncResp::tag1() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag1)
  return tag1_;
}
inline void NewSyncResp::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag1)
}

// optional .com.tencent.mars.microchat.proto.NewSyncMsg_ newmsg = 2;
inline bool NewSyncResp::has_newmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewSyncResp::set_has_newmsg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewSyncResp::clear_has_newmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewSyncResp::clear_newmsg() {
  if (newmsg_ != NULL) newmsg_->::com::tencent::mars::microchat::proto::NewSyncMsg_::Clear();
  clear_has_newmsg();
}
inline const ::com::tencent::mars::microchat::proto::NewSyncMsg_& NewSyncResp::newmsg() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
  return newmsg_ != NULL ? *newmsg_
                         : *::com::tencent::mars::microchat::proto::NewSyncMsg_::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::NewSyncMsg_* NewSyncResp::mutable_newmsg() {
  set_has_newmsg();
  if (newmsg_ == NULL) {
    newmsg_ = new ::com::tencent::mars::microchat::proto::NewSyncMsg_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
  return newmsg_;
}
inline ::com::tencent::mars::microchat::proto::NewSyncMsg_* NewSyncResp::release_newmsg() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
  clear_has_newmsg();
  ::com::tencent::mars::microchat::proto::NewSyncMsg_* temp = newmsg_;
  newmsg_ = NULL;
  return temp;
}
inline void NewSyncResp::set_allocated_newmsg(::com::tencent::mars::microchat::proto::NewSyncMsg_* newmsg) {
  delete newmsg_;
  newmsg_ = newmsg;
  if (newmsg) {
    set_has_newmsg();
  } else {
    clear_has_newmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
}

// optional int32 tag3 = 3;
inline bool NewSyncResp::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NewSyncResp::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NewSyncResp::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NewSyncResp::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 NewSyncResp::tag3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag3)
  return tag3_;
}
inline void NewSyncResp::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag3)
}

// optional string strSyncKey = 4;
inline bool NewSyncResp::has_strsynckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewSyncResp::set_has_strsynckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewSyncResp::clear_has_strsynckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewSyncResp::clear_strsynckey() {
  strsynckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strsynckey();
}
inline const ::std::string& NewSyncResp::strsynckey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
  return strsynckey_.GetNoArena();
}
inline void NewSyncResp::set_strsynckey(const ::std::string& value) {
  set_has_strsynckey();
  strsynckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
#if LANG_CXX11
inline void NewSyncResp::set_strsynckey(::std::string&& value) {
  set_has_strsynckey();
  strsynckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
#endif
inline void NewSyncResp::set_strsynckey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strsynckey();
  strsynckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
inline void NewSyncResp::set_strsynckey(const char* value, size_t size) {
  set_has_strsynckey();
  strsynckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
inline ::std::string* NewSyncResp::mutable_strsynckey() {
  set_has_strsynckey();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
  return strsynckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewSyncResp::release_strsynckey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
  clear_has_strsynckey();
  return strsynckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewSyncResp::set_allocated_strsynckey(::std::string* strsynckey) {
  if (strsynckey != NULL) {
    set_has_strsynckey();
  } else {
    clear_has_strsynckey();
  }
  strsynckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsynckey);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}

// optional int32 tag5 = 5;
inline bool NewSyncResp::has_tag5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void NewSyncResp::set_has_tag5() {
  _has_bits_[0] |= 0x00000010u;
}
inline void NewSyncResp::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void NewSyncResp::clear_tag5() {
  tag5_ = 0;
  clear_has_tag5();
}
inline ::google::protobuf::int32 NewSyncResp::tag5() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag5)
  return tag5_;
}
inline void NewSyncResp::set_tag5(::google::protobuf::int32 value) {
  set_has_tag5();
  tag5_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag5)
}

// optional int32 tag6 = 6;
inline bool NewSyncResp::has_tag6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NewSyncResp::set_has_tag6() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NewSyncResp::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NewSyncResp::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 NewSyncResp::tag6() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag6)
  return tag6_;
}
inline void NewSyncResp::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag6)
}

// optional int32 Utc = 7;
inline bool NewSyncResp::has_utc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void NewSyncResp::set_has_utc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void NewSyncResp::clear_has_utc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void NewSyncResp::clear_utc() {
  utc_ = 0;
  clear_has_utc();
}
inline ::google::protobuf::int32 NewSyncResp::utc() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.Utc)
  return utc_;
}
inline void NewSyncResp::set_utc(::google::protobuf::int32 value) {
  set_has_utc();
  utc_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.Utc)
}

// -------------------------------------------------------------------

// commonMsg

// optional int32 len = 1;
inline bool commonMsg::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void commonMsg::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void commonMsg::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void commonMsg::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 commonMsg::len() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.commonMsg.len)
  return len_;
}
inline void commonMsg::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.commonMsg.len)
}

// optional string msg = 2;
inline bool commonMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void commonMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void commonMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void commonMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
inline const ::std::string& commonMsg::msg() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.commonMsg.msg)
  return msg_.GetNoArena();
}
inline void commonMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.commonMsg.msg)
}
#if LANG_CXX11
inline void commonMsg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.commonMsg.msg)
}
#endif
inline void commonMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.commonMsg.msg)
}
inline void commonMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.commonMsg.msg)
}
inline ::std::string* commonMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.commonMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* commonMsg::release_msg() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.commonMsg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void commonMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.commonMsg.msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace microchat
}  // namespace mars
}  // namespace tencent
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_newsync_2eproto__INCLUDED
