// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: newsync.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "newsync.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace tencent {
namespace mars {
namespace microchat {
namespace proto {
class NewSyncRequest_continueFlag_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncRequest_continueFlag_> {
} _NewSyncRequest_continueFlag__default_instance_;
class NewSyncRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncRequest> {
} _NewSyncRequest_default_instance_;
class syncMsgKey__MsgKey__Key_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<syncMsgKey__MsgKey__Key_> {
} _syncMsgKey__MsgKey__Key__default_instance_;
class syncMsgKey__MsgKey_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<syncMsgKey__MsgKey_> {
} _syncMsgKey__MsgKey__default_instance_;
class syncMsgKey_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<syncMsgKey_> {
} _syncMsgKey__default_instance_;
class NewSyncRespMsg__NewMsgContent__wxid_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncRespMsg__NewMsgContent__wxid_> {
} _NewSyncRespMsg__NewMsgContent__wxid__default_instance_;
class NewSyncRespMsg__NewMsgContent__rawContent_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncRespMsg__NewMsgContent__rawContent_> {
} _NewSyncRespMsg__NewMsgContent__rawContent__default_instance_;
class NewSyncRespMsg__NewMsgContent_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncRespMsg__NewMsgContent_> {
} _NewSyncRespMsg__NewMsgContent__default_instance_;
class NewSyncRespMsg_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncRespMsg_> {
} _NewSyncRespMsg__default_instance_;
class NewSyncMsg__NewMsg_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncMsg__NewMsg_> {
} _NewSyncMsg__NewMsg__default_instance_;
class NewSyncMsg_DefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncMsg_> {
} _NewSyncMsg__default_instance_;
class NewSyncRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewSyncResp> {
} _NewSyncResp_default_instance_;
class commonMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<commonMsg> {
} _commonMsg_default_instance_;

namespace protobuf_newsync_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest_continueFlag_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest_continueFlag_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest_continueFlag_, flag_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, continueflag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, selector_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, tagmsgkey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, device_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRequest, syncmsgdigest_),
  2,
  3,
  0,
  4,
  1,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey__Key_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey__Key_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey__Key_, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey__Key_, synckey_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey_, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey__MsgKey_, key_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey_, len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(syncMsgKey_, msgkey_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent__wxid_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent__wxid_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent__wxid_, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent__rawContent_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent__rawContent_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent__rawContent_, content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, rawcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, tag7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, tag8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, createtime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, anticlient_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, xmlcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, svrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg__NewMsgContent_, msgkey_),
  6,
  3,
  4,
  7,
  5,
  8,
  9,
  0,
  10,
  1,
  2,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg_, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncRespMsg_, content_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg__NewMsg_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg__NewMsg_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg__NewMsg_, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg__NewMsg_, msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg_, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg_, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg_, cnt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncMsg_, msg_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, tag1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, newmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, tag3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, strsynckey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, tag5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, tag6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewSyncResp, utc_),
  2,
  1,
  3,
  0,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(commonMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(commonMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(commonMsg, len_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(commonMsg, msg_),
  1,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 6, sizeof(NewSyncRequest_continueFlag_)},
  { 7, 18, sizeof(NewSyncRequest)},
  { 24, 31, sizeof(syncMsgKey__MsgKey__Key_)},
  { 33, 40, sizeof(syncMsgKey__MsgKey_)},
  { 42, 49, sizeof(syncMsgKey_)},
  { 51, 57, sizeof(NewSyncRespMsg__NewMsgContent__wxid_)},
  { 58, 64, sizeof(NewSyncRespMsg__NewMsgContent__rawContent_)},
  { 65, 83, sizeof(NewSyncRespMsg__NewMsgContent_)},
  { 96, 103, sizeof(NewSyncRespMsg_)},
  { 105, 112, sizeof(NewSyncMsg__NewMsg_)},
  { 114, 121, sizeof(NewSyncMsg_)},
  { 123, 135, sizeof(NewSyncResp)},
  { 142, 149, sizeof(commonMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncRequest_continueFlag__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_syncMsgKey__MsgKey__Key__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_syncMsgKey__MsgKey__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_syncMsgKey__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncRespMsg__NewMsgContent__wxid__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncRespMsg__NewMsgContent__rawContent__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncRespMsg__NewMsgContent__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncRespMsg__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncMsg__NewMsg__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncMsg__default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewSyncResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_commonMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "newsync.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace

void TableStruct::Shutdown() {
  _NewSyncRequest_continueFlag__default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _NewSyncRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _syncMsgKey__MsgKey__Key__default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _syncMsgKey__MsgKey__default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _syncMsgKey__default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _NewSyncRespMsg__NewMsgContent__wxid__default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _NewSyncRespMsg__NewMsgContent__rawContent__default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _NewSyncRespMsg__NewMsgContent__default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _NewSyncRespMsg__default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _NewSyncMsg__NewMsg__default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _NewSyncMsg__default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _NewSyncResp_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _commonMsg_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _NewSyncRequest_continueFlag__default_instance_.DefaultConstruct();
  _NewSyncRequest_default_instance_.DefaultConstruct();
  _syncMsgKey__MsgKey__Key__default_instance_.DefaultConstruct();
  _syncMsgKey__MsgKey__default_instance_.DefaultConstruct();
  _syncMsgKey__default_instance_.DefaultConstruct();
  _NewSyncRespMsg__NewMsgContent__wxid__default_instance_.DefaultConstruct();
  _NewSyncRespMsg__NewMsgContent__rawContent__default_instance_.DefaultConstruct();
  _NewSyncRespMsg__NewMsgContent__default_instance_.DefaultConstruct();
  _NewSyncRespMsg__default_instance_.DefaultConstruct();
  _NewSyncMsg__NewMsg__default_instance_.DefaultConstruct();
  _NewSyncMsg__default_instance_.DefaultConstruct();
  _NewSyncResp_default_instance_.DefaultConstruct();
  _commonMsg_default_instance_.DefaultConstruct();
  _NewSyncRequest_default_instance_.get_mutable()->continueflag_ = const_cast< ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_*>(
      ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_::internal_default_instance());
  _syncMsgKey__default_instance_.get_mutable()->msgkey_ = const_cast< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_*>(
      ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_::internal_default_instance());
  _NewSyncRespMsg__NewMsgContent__default_instance_.get_mutable()->from_ = const_cast< ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_*>(
      ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::internal_default_instance());
  _NewSyncRespMsg__NewMsgContent__default_instance_.get_mutable()->to_ = const_cast< ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_*>(
      ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::internal_default_instance());
  _NewSyncRespMsg__NewMsgContent__default_instance_.get_mutable()->rawcontent_ = const_cast< ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_*>(
      ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_::internal_default_instance());
  _NewSyncRespMsg__default_instance_.get_mutable()->content_ = const_cast< ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_*>(
      ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_::internal_default_instance());
  _NewSyncResp_default_instance_.get_mutable()->newmsg_ = const_cast< ::com::tencent::mars::microchat::proto::NewSyncMsg_*>(
      ::com::tencent::mars::microchat::proto::NewSyncMsg_::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rnewsync.proto\022 com.tencent.mars.microc"
      "hat.proto\"\340\001\n\016NewSyncRequest\022T\n\014continue"
      "Flag\030\001 \001(\0132>.com.tencent.mars.microchat."
      "proto.NewSyncRequest.continueFlag_\022\020\n\010Se"
      "lector\030\002 \001(\005\022\021\n\ttagMsgKey\030\003 \001(\t\022\r\n\005Scene"
      "\030\004 \001(\005\022\016\n\006device\030\005 \001(\t\022\025\n\rSyncMsgDigest\030"
      "\006 \001(\005\032\035\n\rcontinueFlag_\022\014\n\004flag\030\001 \001(\005\"\353\001\n"
      "\013syncMsgKey_\022\013\n\003len\030\001 \001(\005\022E\n\006msgkey\030\002 \001("
      "\01325.com.tencent.mars.microchat.proto.syn"
      "cMsgKey_.MsgKey_\032\207\001\n\007MsgKey_\022\014\n\004size\030\001 \001"
      "(\005\022G\n\003key\030\002 \003(\0132:.com.tencent.mars.micro"
      "chat.proto.syncMsgKey_.MsgKey_.Key_\032%\n\004K"
      "ey_\022\014\n\004type\030\001 \001(\005\022\017\n\007synckey\030\002 \001(\003\"\355\004\n\017N"
      "ewSyncRespMsg_\022\014\n\004size\030\001 \001(\005\022Q\n\007content\030"
      "\002 \001(\0132@.com.tencent.mars.microchat.proto"
      ".NewSyncRespMsg_.NewMsgContent_\032\370\003\n\016NewM"
      "sgContent_\022\020\n\010serverid\030\001 \001(\003\022T\n\004from\030\002 \001"
      "(\0132F.com.tencent.mars.microchat.proto.Ne"
      "wSyncRespMsg_.NewMsgContent_.wxid_\022R\n\002to"
      "\030\003 \001(\0132F.com.tencent.mars.microchat.prot"
      "o.NewSyncRespMsg_.NewMsgContent_.wxid_\022\014"
      "\n\004type\030\004 \001(\005\022`\n\nrawcontent\030\005 \001(\0132L.com.t"
      "encent.mars.microchat.proto.NewSyncRespM"
      "sg_.NewMsgContent_.rawContent_\022\016\n\006status"
      "\030\006 \001(\005\022\014\n\004tag7\030\007 \001(\005\022\014\n\004tag8\030\010 \001(\t\022\022\n\ncr"
      "eateTime\030\t \001(\005\022\022\n\nanticlient\030\n \001(\t\022\022\n\nxm"
      "lContent\030\013 \001(\t\022\r\n\005svrId\030\014 \001(\003\022\016\n\006msgKey\030"
      "\r \001(\005\032\023\n\005wxid_\022\n\n\002id\030\001 \001(\t\032\036\n\013rawContent"
      "_\022\017\n\007content\030\001 \001(\t\"\204\001\n\013NewSyncMsg_\022\013\n\003cn"
      "t\030\001 \001(\005\022B\n\003msg\030\002 \003(\01325.com.tencent.mars."
      "microchat.proto.NewSyncMsg_.NewMsg_\032$\n\007N"
      "ewMsg_\022\014\n\004type\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t\"\245\001\n\013Ne"
      "wSyncResp\022\014\n\004tag1\030\001 \001(\005\022=\n\006newmsg\030\002 \001(\0132"
      "-.com.tencent.mars.microchat.proto.NewSy"
      "ncMsg_\022\014\n\004tag3\030\003 \001(\005\022\022\n\nstrSyncKey\030\004 \001(\t"
      "\022\014\n\004tag5\030\005 \001(\005\022\014\n\004tag6\030\006 \001(\005\022\013\n\003Utc\030\007 \001("
      "\005\"%\n\tcommonMsg\022\013\n\003len\030\001 \001(\005\022\013\n\003msg\030\002 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1480);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "newsync.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_newsync_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncRequest_continueFlag_::kFlagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncRequest_continueFlag_::NewSyncRequest_continueFlag_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
}
NewSyncRequest_continueFlag_::NewSyncRequest_continueFlag_(const NewSyncRequest_continueFlag_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  flag_ = from.flag_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
}

void NewSyncRequest_continueFlag_::SharedCtor() {
  _cached_size_ = 0;
  flag_ = 0;
}

NewSyncRequest_continueFlag_::~NewSyncRequest_continueFlag_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  SharedDtor();
}

void NewSyncRequest_continueFlag_::SharedDtor() {
}

void NewSyncRequest_continueFlag_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncRequest_continueFlag_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncRequest_continueFlag_& NewSyncRequest_continueFlag_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncRequest_continueFlag_* NewSyncRequest_continueFlag_::New(::google::protobuf::Arena* arena) const {
  NewSyncRequest_continueFlag_* n = new NewSyncRequest_continueFlag_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncRequest_continueFlag_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  flag_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncRequest_continueFlag_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 flag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_flag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  return false;
#undef DO_
}

void NewSyncRequest_continueFlag_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flag = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->flag(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
}

::google::protobuf::uint8* NewSyncRequest_continueFlag_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 flag = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->flag(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  return target;
}

size_t NewSyncRequest_continueFlag_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 flag = 1;
  if (has_flag()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncRequest_continueFlag_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncRequest_continueFlag_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncRequest_continueFlag_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
    MergeFrom(*source);
  }
}

void NewSyncRequest_continueFlag_::MergeFrom(const NewSyncRequest_continueFlag_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_flag()) {
    set_flag(from.flag());
  }
}

void NewSyncRequest_continueFlag_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncRequest_continueFlag_::CopyFrom(const NewSyncRequest_continueFlag_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncRequest_continueFlag_::IsInitialized() const {
  return true;
}

void NewSyncRequest_continueFlag_::Swap(NewSyncRequest_continueFlag_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncRequest_continueFlag_::InternalSwap(NewSyncRequest_continueFlag_* other) {
  std::swap(flag_, other->flag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncRequest_continueFlag_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncRequest_continueFlag_

// optional int32 flag = 1;
bool NewSyncRequest_continueFlag_::has_flag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncRequest_continueFlag_::set_has_flag() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncRequest_continueFlag_::clear_has_flag() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncRequest_continueFlag_::clear_flag() {
  flag_ = 0;
  clear_has_flag();
}
::google::protobuf::int32 NewSyncRequest_continueFlag_::flag() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_.flag)
  return flag_;
}
void NewSyncRequest_continueFlag_::set_flag(::google::protobuf::int32 value) {
  set_has_flag();
  flag_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_.flag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncRequest::kContinueFlagFieldNumber;
const int NewSyncRequest::kSelectorFieldNumber;
const int NewSyncRequest::kTagMsgKeyFieldNumber;
const int NewSyncRequest::kSceneFieldNumber;
const int NewSyncRequest::kDeviceFieldNumber;
const int NewSyncRequest::kSyncMsgDigestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncRequest::NewSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncRequest)
}
NewSyncRequest::NewSyncRequest(const NewSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tagmsgkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tagmsgkey()) {
    tagmsgkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tagmsgkey_);
  }
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device()) {
    device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
  }
  if (from.has_continueflag()) {
    continueflag_ = new ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_(*from.continueflag_);
  } else {
    continueflag_ = NULL;
  }
  ::memcpy(&selector_, &from.selector_,
    reinterpret_cast<char*>(&syncmsgdigest_) -
    reinterpret_cast<char*>(&selector_) + sizeof(syncmsgdigest_));
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncRequest)
}

void NewSyncRequest::SharedCtor() {
  _cached_size_ = 0;
  tagmsgkey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&continueflag_, 0, reinterpret_cast<char*>(&syncmsgdigest_) -
    reinterpret_cast<char*>(&continueflag_) + sizeof(syncmsgdigest_));
}

NewSyncRequest::~NewSyncRequest() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncRequest)
  SharedDtor();
}

void NewSyncRequest::SharedDtor() {
  tagmsgkey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete continueflag_;
  }
}

void NewSyncRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncRequest::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncRequest& NewSyncRequest::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncRequest* NewSyncRequest::New(::google::protobuf::Arena* arena) const {
  NewSyncRequest* n = new NewSyncRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_tagmsgkey()) {
      GOOGLE_DCHECK(!tagmsgkey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tagmsgkey_.UnsafeRawStringPointer())->clear();
    }
    if (has_device()) {
      GOOGLE_DCHECK(!device_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*device_.UnsafeRawStringPointer())->clear();
    }
    if (has_continueflag()) {
      GOOGLE_DCHECK(continueflag_ != NULL);
      continueflag_->::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&selector_, 0, reinterpret_cast<char*>(&syncmsgdigest_) -
      reinterpret_cast<char*>(&selector_) + sizeof(syncmsgdigest_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_ continueFlag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_continueflag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Selector = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_selector();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &selector_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tagMsgKey = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tagmsgkey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tagmsgkey().data(), this->tagmsgkey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Scene = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_scene();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &scene_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device().data(), this->device().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncRequest.device");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 SyncMsgDigest = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_syncmsgdigest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &syncmsgdigest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncRequest)
  return false;
#undef DO_
}

void NewSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_ continueFlag = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->continueflag_, output);
  }

  // optional int32 Selector = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->selector(), output);
  }

  // optional string tagMsgKey = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tagmsgkey().data(), this->tagmsgkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tagmsgkey(), output);
  }

  // optional int32 Scene = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->scene(), output);
  }

  // optional string device = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRequest.device");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->device(), output);
  }

  // optional int32 SyncMsgDigest = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->syncmsgdigest(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncRequest)
}

::google::protobuf::uint8* NewSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_ continueFlag = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->continueflag_, deterministic, target);
  }

  // optional int32 Selector = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->selector(), target);
  }

  // optional string tagMsgKey = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tagmsgkey().data(), this->tagmsgkey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tagmsgkey(), target);
  }

  // optional int32 Scene = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->scene(), target);
  }

  // optional string device = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device().data(), this->device().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRequest.device");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->device(), target);
  }

  // optional int32 SyncMsgDigest = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->syncmsgdigest(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncRequest)
  return target;
}

size_t NewSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string tagMsgKey = 3;
    if (has_tagmsgkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tagmsgkey());
    }

    // optional string device = 5;
    if (has_device()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device());
    }

    // optional .com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_ continueFlag = 1;
    if (has_continueflag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->continueflag_);
    }

    // optional int32 Selector = 2;
    if (has_selector()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->selector());
    }

    // optional int32 Scene = 4;
    if (has_scene()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->scene());
    }

    // optional int32 SyncMsgDigest = 6;
    if (has_syncmsgdigest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->syncmsgdigest());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncRequest)
    MergeFrom(*source);
  }
}

void NewSyncRequest::MergeFrom(const NewSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tagmsgkey();
      tagmsgkey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tagmsgkey_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_device();
      device_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_continueflag()->::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_::MergeFrom(from.continueflag());
    }
    if (cached_has_bits & 0x00000008u) {
      selector_ = from.selector_;
    }
    if (cached_has_bits & 0x00000010u) {
      scene_ = from.scene_;
    }
    if (cached_has_bits & 0x00000020u) {
      syncmsgdigest_ = from.syncmsgdigest_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncRequest::CopyFrom(const NewSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncRequest::IsInitialized() const {
  return true;
}

void NewSyncRequest::Swap(NewSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncRequest::InternalSwap(NewSyncRequest* other) {
  tagmsgkey_.Swap(&other->tagmsgkey_);
  device_.Swap(&other->device_);
  std::swap(continueflag_, other->continueflag_);
  std::swap(selector_, other->selector_);
  std::swap(scene_, other->scene_);
  std::swap(syncmsgdigest_, other->syncmsgdigest_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncRequest::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncRequest

// optional .com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag_ continueFlag = 1;
bool NewSyncRequest::has_continueflag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NewSyncRequest::set_has_continueflag() {
  _has_bits_[0] |= 0x00000004u;
}
void NewSyncRequest::clear_has_continueflag() {
  _has_bits_[0] &= ~0x00000004u;
}
void NewSyncRequest::clear_continueflag() {
  if (continueflag_ != NULL) continueflag_->::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_::Clear();
  clear_has_continueflag();
}
const ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_& NewSyncRequest::continueflag() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
  return continueflag_ != NULL ? *continueflag_
                         : *::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_::internal_default_instance();
}
::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* NewSyncRequest::mutable_continueflag() {
  set_has_continueflag();
  if (continueflag_ == NULL) {
    continueflag_ = new ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
  return continueflag_;
}
::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* NewSyncRequest::release_continueflag() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
  clear_has_continueflag();
  ::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* temp = continueflag_;
  continueflag_ = NULL;
  return temp;
}
void NewSyncRequest::set_allocated_continueflag(::com::tencent::mars::microchat::proto::NewSyncRequest_continueFlag_* continueflag) {
  delete continueflag_;
  continueflag_ = continueflag;
  if (continueflag) {
    set_has_continueflag();
  } else {
    clear_has_continueflag();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRequest.continueFlag)
}

// optional int32 Selector = 2;
bool NewSyncRequest::has_selector() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NewSyncRequest::set_has_selector() {
  _has_bits_[0] |= 0x00000008u;
}
void NewSyncRequest::clear_has_selector() {
  _has_bits_[0] &= ~0x00000008u;
}
void NewSyncRequest::clear_selector() {
  selector_ = 0;
  clear_has_selector();
}
::google::protobuf::int32 NewSyncRequest::selector() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.Selector)
  return selector_;
}
void NewSyncRequest::set_selector(::google::protobuf::int32 value) {
  set_has_selector();
  selector_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.Selector)
}

// optional string tagMsgKey = 3;
bool NewSyncRequest::has_tagmsgkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncRequest::set_has_tagmsgkey() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncRequest::clear_has_tagmsgkey() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncRequest::clear_tagmsgkey() {
  tagmsgkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tagmsgkey();
}
const ::std::string& NewSyncRequest::tagmsgkey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
  return tagmsgkey_.GetNoArena();
}
void NewSyncRequest::set_tagmsgkey(const ::std::string& value) {
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
#if LANG_CXX11
void NewSyncRequest::set_tagmsgkey(::std::string&& value) {
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
#endif
void NewSyncRequest::set_tagmsgkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
void NewSyncRequest::set_tagmsgkey(const char* value, size_t size) {
  set_has_tagmsgkey();
  tagmsgkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}
::std::string* NewSyncRequest::mutable_tagmsgkey() {
  set_has_tagmsgkey();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
  return tagmsgkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncRequest::release_tagmsgkey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
  clear_has_tagmsgkey();
  return tagmsgkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncRequest::set_allocated_tagmsgkey(::std::string* tagmsgkey) {
  if (tagmsgkey != NULL) {
    set_has_tagmsgkey();
  } else {
    clear_has_tagmsgkey();
  }
  tagmsgkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tagmsgkey);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRequest.tagMsgKey)
}

// optional int32 Scene = 4;
bool NewSyncRequest::has_scene() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NewSyncRequest::set_has_scene() {
  _has_bits_[0] |= 0x00000010u;
}
void NewSyncRequest::clear_has_scene() {
  _has_bits_[0] &= ~0x00000010u;
}
void NewSyncRequest::clear_scene() {
  scene_ = 0;
  clear_has_scene();
}
::google::protobuf::int32 NewSyncRequest::scene() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.Scene)
  return scene_;
}
void NewSyncRequest::set_scene(::google::protobuf::int32 value) {
  set_has_scene();
  scene_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.Scene)
}

// optional string device = 5;
bool NewSyncRequest::has_device() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewSyncRequest::set_has_device() {
  _has_bits_[0] |= 0x00000002u;
}
void NewSyncRequest::clear_has_device() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewSyncRequest::clear_device() {
  device_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device();
}
const ::std::string& NewSyncRequest::device() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.device)
  return device_.GetNoArena();
}
void NewSyncRequest::set_device(const ::std::string& value) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
#if LANG_CXX11
void NewSyncRequest::set_device(::std::string&& value) {
  set_has_device();
  device_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
#endif
void NewSyncRequest::set_device(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
void NewSyncRequest::set_device(const char* value, size_t size) {
  set_has_device();
  device_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}
::std::string* NewSyncRequest::mutable_device() {
  set_has_device();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRequest.device)
  return device_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncRequest::release_device() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRequest.device)
  clear_has_device();
  return device_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncRequest::set_allocated_device(::std::string* device) {
  if (device != NULL) {
    set_has_device();
  } else {
    clear_has_device();
  }
  device_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRequest.device)
}

// optional int32 SyncMsgDigest = 6;
bool NewSyncRequest::has_syncmsgdigest() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NewSyncRequest::set_has_syncmsgdigest() {
  _has_bits_[0] |= 0x00000020u;
}
void NewSyncRequest::clear_has_syncmsgdigest() {
  _has_bits_[0] &= ~0x00000020u;
}
void NewSyncRequest::clear_syncmsgdigest() {
  syncmsgdigest_ = 0;
  clear_has_syncmsgdigest();
}
::google::protobuf::int32 NewSyncRequest::syncmsgdigest() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRequest.SyncMsgDigest)
  return syncmsgdigest_;
}
void NewSyncRequest::set_syncmsgdigest(::google::protobuf::int32 value) {
  set_has_syncmsgdigest();
  syncmsgdigest_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRequest.SyncMsgDigest)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int syncMsgKey__MsgKey__Key_::kTypeFieldNumber;
const int syncMsgKey__MsgKey__Key_::kSynckeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

syncMsgKey__MsgKey__Key_::syncMsgKey__MsgKey__Key_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
}
syncMsgKey__MsgKey__Key_::syncMsgKey__MsgKey__Key_(const syncMsgKey__MsgKey__Key_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&synckey_, &from.synckey_,
    reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&synckey_) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
}

void syncMsgKey__MsgKey__Key_::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&synckey_, 0, reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&synckey_) + sizeof(type_));
}

syncMsgKey__MsgKey__Key_::~syncMsgKey__MsgKey__Key_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  SharedDtor();
}

void syncMsgKey__MsgKey__Key_::SharedDtor() {
}

void syncMsgKey__MsgKey__Key_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* syncMsgKey__MsgKey__Key_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const syncMsgKey__MsgKey__Key_& syncMsgKey__MsgKey__Key_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

syncMsgKey__MsgKey__Key_* syncMsgKey__MsgKey__Key_::New(::google::protobuf::Arena* arena) const {
  syncMsgKey__MsgKey__Key_* n = new syncMsgKey__MsgKey__Key_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void syncMsgKey__MsgKey__Key_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&synckey_, 0, reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&synckey_) + sizeof(type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool syncMsgKey__MsgKey__Key_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 synckey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_synckey();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &synckey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  return false;
#undef DO_
}

void syncMsgKey__MsgKey__Key_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional int64 synckey = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->synckey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
}

::google::protobuf::uint8* syncMsgKey__MsgKey__Key_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional int64 synckey = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->synckey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  return target;
}

size_t syncMsgKey__MsgKey__Key_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 synckey = 2;
    if (has_synckey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->synckey());
    }

    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void syncMsgKey__MsgKey__Key_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  GOOGLE_DCHECK_NE(&from, this);
  const syncMsgKey__MsgKey__Key_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const syncMsgKey__MsgKey__Key_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
    MergeFrom(*source);
  }
}

void syncMsgKey__MsgKey__Key_::MergeFrom(const syncMsgKey__MsgKey__Key_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      synckey_ = from.synckey_;
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void syncMsgKey__MsgKey__Key_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void syncMsgKey__MsgKey__Key_::CopyFrom(const syncMsgKey__MsgKey__Key_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool syncMsgKey__MsgKey__Key_::IsInitialized() const {
  return true;
}

void syncMsgKey__MsgKey__Key_::Swap(syncMsgKey__MsgKey__Key_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void syncMsgKey__MsgKey__Key_::InternalSwap(syncMsgKey__MsgKey__Key_* other) {
  std::swap(synckey_, other->synckey_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata syncMsgKey__MsgKey__Key_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// syncMsgKey__MsgKey__Key_

// optional int32 type = 1;
bool syncMsgKey__MsgKey__Key_::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void syncMsgKey__MsgKey__Key_::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void syncMsgKey__MsgKey__Key_::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void syncMsgKey__MsgKey__Key_::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 syncMsgKey__MsgKey__Key_::type() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.type)
  return type_;
}
void syncMsgKey__MsgKey__Key_::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.type)
}

// optional int64 synckey = 2;
bool syncMsgKey__MsgKey__Key_::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void syncMsgKey__MsgKey__Key_::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
void syncMsgKey__MsgKey__Key_::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void syncMsgKey__MsgKey__Key_::clear_synckey() {
  synckey_ = GOOGLE_LONGLONG(0);
  clear_has_synckey();
}
::google::protobuf::int64 syncMsgKey__MsgKey__Key_::synckey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.synckey)
  return synckey_;
}
void syncMsgKey__MsgKey__Key_::set_synckey(::google::protobuf::int64 value) {
  set_has_synckey();
  synckey_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_.synckey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int syncMsgKey__MsgKey_::kSizeFieldNumber;
const int syncMsgKey__MsgKey_::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

syncMsgKey__MsgKey_::syncMsgKey__MsgKey_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
}
syncMsgKey__MsgKey_::syncMsgKey__MsgKey_(const syncMsgKey__MsgKey_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      key_(from.key_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
}

void syncMsgKey__MsgKey_::SharedCtor() {
  _cached_size_ = 0;
  size_ = 0;
}

syncMsgKey__MsgKey_::~syncMsgKey__MsgKey_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  SharedDtor();
}

void syncMsgKey__MsgKey_::SharedDtor() {
}

void syncMsgKey__MsgKey_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* syncMsgKey__MsgKey_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const syncMsgKey__MsgKey_& syncMsgKey__MsgKey_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

syncMsgKey__MsgKey_* syncMsgKey__MsgKey_::New(::google::protobuf::Arena* arena) const {
  syncMsgKey__MsgKey_* n = new syncMsgKey__MsgKey_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void syncMsgKey__MsgKey_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  key_.Clear();
  size_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool syncMsgKey__MsgKey_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_ key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  return false;
#undef DO_
}

void syncMsgKey__MsgKey_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 size = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->size(), output);
  }

  // repeated .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_ key = 2;
  for (unsigned int i = 0, n = this->key_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->key(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
}

::google::protobuf::uint8* syncMsgKey__MsgKey_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 size = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->size(), target);
  }

  // repeated .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_ key = 2;
  for (unsigned int i = 0, n = this->key_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->key(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  return target;
}

size_t syncMsgKey__MsgKey_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_ key = 2;
  {
    unsigned int count = this->key_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->key(i));
    }
  }

  // optional int32 size = 1;
  if (has_size()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void syncMsgKey__MsgKey_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  GOOGLE_DCHECK_NE(&from, this);
  const syncMsgKey__MsgKey_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const syncMsgKey__MsgKey_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
    MergeFrom(*source);
  }
}

void syncMsgKey__MsgKey_::MergeFrom(const syncMsgKey__MsgKey_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  key_.MergeFrom(from.key_);
  if (from.has_size()) {
    set_size(from.size());
  }
}

void syncMsgKey__MsgKey_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void syncMsgKey__MsgKey_::CopyFrom(const syncMsgKey__MsgKey_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool syncMsgKey__MsgKey_::IsInitialized() const {
  return true;
}

void syncMsgKey__MsgKey_::Swap(syncMsgKey__MsgKey_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void syncMsgKey__MsgKey_::InternalSwap(syncMsgKey__MsgKey_* other) {
  key_.InternalSwap(&other->key_);
  std::swap(size_, other->size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata syncMsgKey__MsgKey_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// syncMsgKey__MsgKey_

// optional int32 size = 1;
bool syncMsgKey__MsgKey_::has_size() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void syncMsgKey__MsgKey_::set_has_size() {
  _has_bits_[0] |= 0x00000001u;
}
void syncMsgKey__MsgKey_::clear_has_size() {
  _has_bits_[0] &= ~0x00000001u;
}
void syncMsgKey__MsgKey_::clear_size() {
  size_ = 0;
  clear_has_size();
}
::google::protobuf::int32 syncMsgKey__MsgKey_::size() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.size)
  return size_;
}
void syncMsgKey__MsgKey_::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.size)
}

// repeated .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.Key_ key = 2;
int syncMsgKey__MsgKey_::key_size() const {
  return key_.size();
}
void syncMsgKey__MsgKey_::clear_key() {
  key_.Clear();
}
const ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_& syncMsgKey__MsgKey_::key(int index) const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_.Get(index);
}
::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_* syncMsgKey__MsgKey_::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_.Mutable(index);
}
::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_* syncMsgKey__MsgKey_::add_key() {
  // @@protoc_insertion_point(field_add:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_ >*
syncMsgKey__MsgKey_::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return &key_;
}
const ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey__Key_ >&
syncMsgKey__MsgKey_::key() const {
  // @@protoc_insertion_point(field_list:com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_.key)
  return key_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int syncMsgKey_::kLenFieldNumber;
const int syncMsgKey_::kMsgkeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

syncMsgKey_::syncMsgKey_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.syncMsgKey_)
}
syncMsgKey_::syncMsgKey_(const syncMsgKey_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_msgkey()) {
    msgkey_ = new ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_(*from.msgkey_);
  } else {
    msgkey_ = NULL;
  }
  len_ = from.len_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.syncMsgKey_)
}

void syncMsgKey_::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&msgkey_, 0, reinterpret_cast<char*>(&len_) -
    reinterpret_cast<char*>(&msgkey_) + sizeof(len_));
}

syncMsgKey_::~syncMsgKey_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.syncMsgKey_)
  SharedDtor();
}

void syncMsgKey_::SharedDtor() {
  if (this != internal_default_instance()) {
    delete msgkey_;
  }
}

void syncMsgKey_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* syncMsgKey_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const syncMsgKey_& syncMsgKey_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

syncMsgKey_* syncMsgKey_::New(::google::protobuf::Arena* arena) const {
  syncMsgKey_* n = new syncMsgKey_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void syncMsgKey_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  if (has_msgkey()) {
    GOOGLE_DCHECK(msgkey_ != NULL);
    msgkey_->::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_::Clear();
  }
  len_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool syncMsgKey_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_ msgkey = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_msgkey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.syncMsgKey_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.syncMsgKey_)
  return false;
#undef DO_
}

void syncMsgKey_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 len = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->len(), output);
  }

  // optional .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_ msgkey = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->msgkey_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.syncMsgKey_)
}

::google::protobuf::uint8* syncMsgKey_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 len = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->len(), target);
  }

  // optional .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_ msgkey = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->msgkey_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.syncMsgKey_)
  return target;
}

size_t syncMsgKey_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_ msgkey = 2;
    if (has_msgkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->msgkey_);
    }

    // optional int32 len = 1;
    if (has_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->len());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void syncMsgKey_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  GOOGLE_DCHECK_NE(&from, this);
  const syncMsgKey_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const syncMsgKey_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.syncMsgKey_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.syncMsgKey_)
    MergeFrom(*source);
  }
}

void syncMsgKey_::MergeFrom(const syncMsgKey_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_msgkey()->::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_::MergeFrom(from.msgkey());
    }
    if (cached_has_bits & 0x00000002u) {
      len_ = from.len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void syncMsgKey_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void syncMsgKey_::CopyFrom(const syncMsgKey_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.syncMsgKey_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool syncMsgKey_::IsInitialized() const {
  return true;
}

void syncMsgKey_::Swap(syncMsgKey_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void syncMsgKey_::InternalSwap(syncMsgKey_* other) {
  std::swap(msgkey_, other->msgkey_);
  std::swap(len_, other->len_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata syncMsgKey_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// syncMsgKey_

// optional int32 len = 1;
bool syncMsgKey_::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void syncMsgKey_::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
void syncMsgKey_::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
void syncMsgKey_::clear_len() {
  len_ = 0;
  clear_has_len();
}
::google::protobuf::int32 syncMsgKey_::len() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.len)
  return len_;
}
void syncMsgKey_::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.syncMsgKey_.len)
}

// optional .com.tencent.mars.microchat.proto.syncMsgKey_.MsgKey_ msgkey = 2;
bool syncMsgKey_::has_msgkey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void syncMsgKey_::set_has_msgkey() {
  _has_bits_[0] |= 0x00000001u;
}
void syncMsgKey_::clear_has_msgkey() {
  _has_bits_[0] &= ~0x00000001u;
}
void syncMsgKey_::clear_msgkey() {
  if (msgkey_ != NULL) msgkey_->::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_::Clear();
  clear_has_msgkey();
}
const ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_& syncMsgKey_::msgkey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
  return msgkey_ != NULL ? *msgkey_
                         : *::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_::internal_default_instance();
}
::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* syncMsgKey_::mutable_msgkey() {
  set_has_msgkey();
  if (msgkey_ == NULL) {
    msgkey_ = new ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
  return msgkey_;
}
::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* syncMsgKey_::release_msgkey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
  clear_has_msgkey();
  ::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* temp = msgkey_;
  msgkey_ = NULL;
  return temp;
}
void syncMsgKey_::set_allocated_msgkey(::com::tencent::mars::microchat::proto::syncMsgKey__MsgKey_* msgkey) {
  delete msgkey_;
  msgkey_ = msgkey;
  if (msgkey) {
    set_has_msgkey();
  } else {
    clear_has_msgkey();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.syncMsgKey_.msgkey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncRespMsg__NewMsgContent__wxid_::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncRespMsg__NewMsgContent__wxid_::NewSyncRespMsg__NewMsgContent__wxid_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
}
NewSyncRespMsg__NewMsgContent__wxid_::NewSyncRespMsg__NewMsgContent__wxid_(const NewSyncRespMsg__NewMsgContent__wxid_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_id()) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
}

void NewSyncRespMsg__NewMsgContent__wxid_::SharedCtor() {
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NewSyncRespMsg__NewMsgContent__wxid_::~NewSyncRespMsg__NewMsgContent__wxid_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  SharedDtor();
}

void NewSyncRespMsg__NewMsgContent__wxid_::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewSyncRespMsg__NewMsgContent__wxid_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncRespMsg__NewMsgContent__wxid_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncRespMsg__NewMsgContent__wxid_& NewSyncRespMsg__NewMsgContent__wxid_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent__wxid_::New(::google::protobuf::Arena* arena) const {
  NewSyncRespMsg__NewMsgContent__wxid_* n = new NewSyncRespMsg__NewMsgContent__wxid_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncRespMsg__NewMsgContent__wxid_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  if (has_id()) {
    GOOGLE_DCHECK(!id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*id_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncRespMsg__NewMsgContent__wxid_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  return false;
#undef DO_
}

void NewSyncRespMsg__NewMsgContent__wxid_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
}

::google::protobuf::uint8* NewSyncRespMsg__NewMsgContent__wxid_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  return target;
}

size_t NewSyncRespMsg__NewMsgContent__wxid_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncRespMsg__NewMsgContent__wxid_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncRespMsg__NewMsgContent__wxid_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncRespMsg__NewMsgContent__wxid_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
    MergeFrom(*source);
  }
}

void NewSyncRespMsg__NewMsgContent__wxid_::MergeFrom(const NewSyncRespMsg__NewMsgContent__wxid_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    set_has_id();
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void NewSyncRespMsg__NewMsgContent__wxid_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncRespMsg__NewMsgContent__wxid_::CopyFrom(const NewSyncRespMsg__NewMsgContent__wxid_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncRespMsg__NewMsgContent__wxid_::IsInitialized() const {
  return true;
}

void NewSyncRespMsg__NewMsgContent__wxid_::Swap(NewSyncRespMsg__NewMsgContent__wxid_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncRespMsg__NewMsgContent__wxid_::InternalSwap(NewSyncRespMsg__NewMsgContent__wxid_* other) {
  id_.Swap(&other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncRespMsg__NewMsgContent__wxid_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncRespMsg__NewMsgContent__wxid_

// optional string id = 1;
bool NewSyncRespMsg__NewMsgContent__wxid_::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncRespMsg__NewMsgContent__wxid_::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncRespMsg__NewMsgContent__wxid_::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncRespMsg__NewMsgContent__wxid_::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_id();
}
const ::std::string& NewSyncRespMsg__NewMsgContent__wxid_::id() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
  return id_.GetNoArena();
}
void NewSyncRespMsg__NewMsgContent__wxid_::set_id(const ::std::string& value) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
#if LANG_CXX11
void NewSyncRespMsg__NewMsgContent__wxid_::set_id(::std::string&& value) {
  set_has_id();
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
#endif
void NewSyncRespMsg__NewMsgContent__wxid_::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
void NewSyncRespMsg__NewMsgContent__wxid_::set_id(const char* value, size_t size) {
  set_has_id();
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}
::std::string* NewSyncRespMsg__NewMsgContent__wxid_::mutable_id() {
  set_has_id();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncRespMsg__NewMsgContent__wxid_::release_id() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
  clear_has_id();
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncRespMsg__NewMsgContent__wxid_::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    set_has_id();
  } else {
    clear_has_id();
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncRespMsg__NewMsgContent__rawContent_::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncRespMsg__NewMsgContent__rawContent_::NewSyncRespMsg__NewMsgContent__rawContent_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
}
NewSyncRespMsg__NewMsgContent__rawContent_::NewSyncRespMsg__NewMsgContent__rawContent_(const NewSyncRespMsg__NewMsgContent__rawContent_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
}

void NewSyncRespMsg__NewMsgContent__rawContent_::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NewSyncRespMsg__NewMsgContent__rawContent_::~NewSyncRespMsg__NewMsgContent__rawContent_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  SharedDtor();
}

void NewSyncRespMsg__NewMsgContent__rawContent_::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewSyncRespMsg__NewMsgContent__rawContent_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncRespMsg__NewMsgContent__rawContent_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncRespMsg__NewMsgContent__rawContent_& NewSyncRespMsg__NewMsgContent__rawContent_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncRespMsg__NewMsgContent__rawContent_* NewSyncRespMsg__NewMsgContent__rawContent_::New(::google::protobuf::Arena* arena) const {
  NewSyncRespMsg__NewMsgContent__rawContent_* n = new NewSyncRespMsg__NewMsgContent__rawContent_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncRespMsg__NewMsgContent__rawContent_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  if (has_content()) {
    GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncRespMsg__NewMsgContent__rawContent_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string content = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  return false;
#undef DO_
}

void NewSyncRespMsg__NewMsgContent__rawContent_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
}

::google::protobuf::uint8* NewSyncRespMsg__NewMsgContent__rawContent_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string content = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  return target;
}

size_t NewSyncRespMsg__NewMsgContent__rawContent_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string content = 1;
  if (has_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncRespMsg__NewMsgContent__rawContent_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncRespMsg__NewMsgContent__rawContent_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncRespMsg__NewMsgContent__rawContent_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
    MergeFrom(*source);
  }
}

void NewSyncRespMsg__NewMsgContent__rawContent_::MergeFrom(const NewSyncRespMsg__NewMsgContent__rawContent_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_content()) {
    set_has_content();
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void NewSyncRespMsg__NewMsgContent__rawContent_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncRespMsg__NewMsgContent__rawContent_::CopyFrom(const NewSyncRespMsg__NewMsgContent__rawContent_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncRespMsg__NewMsgContent__rawContent_::IsInitialized() const {
  return true;
}

void NewSyncRespMsg__NewMsgContent__rawContent_::Swap(NewSyncRespMsg__NewMsgContent__rawContent_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncRespMsg__NewMsgContent__rawContent_::InternalSwap(NewSyncRespMsg__NewMsgContent__rawContent_* other) {
  content_.Swap(&other->content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncRespMsg__NewMsgContent__rawContent_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncRespMsg__NewMsgContent__rawContent_

// optional string content = 1;
bool NewSyncRespMsg__NewMsgContent__rawContent_::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncRespMsg__NewMsgContent__rawContent_::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncRespMsg__NewMsgContent__rawContent_::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncRespMsg__NewMsgContent__rawContent_::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& NewSyncRespMsg__NewMsgContent__rawContent_::content() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
  return content_.GetNoArena();
}
void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
#if LANG_CXX11
void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
#endif
void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
void NewSyncRespMsg__NewMsgContent__rawContent_::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}
::std::string* NewSyncRespMsg__NewMsgContent__rawContent_::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncRespMsg__NewMsgContent__rawContent_::release_content() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncRespMsg__NewMsgContent__rawContent_::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncRespMsg__NewMsgContent_::kServeridFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kFromFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kToFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kTypeFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kRawcontentFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kStatusFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kTag7FieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kTag8FieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kCreateTimeFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kAnticlientFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kXmlContentFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kSvrIdFieldNumber;
const int NewSyncRespMsg__NewMsgContent_::kMsgKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncRespMsg__NewMsgContent_::NewSyncRespMsg__NewMsgContent_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
}
NewSyncRespMsg__NewMsgContent_::NewSyncRespMsg__NewMsgContent_(const NewSyncRespMsg__NewMsgContent_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag8()) {
    tag8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag8_);
  }
  anticlient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_anticlient()) {
    anticlient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anticlient_);
  }
  xmlcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_xmlcontent()) {
    xmlcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xmlcontent_);
  }
  if (from.has_from()) {
    from_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_rawcontent()) {
    rawcontent_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_(*from.rawcontent_);
  } else {
    rawcontent_ = NULL;
  }
  ::memcpy(&serverid_, &from.serverid_,
    reinterpret_cast<char*>(&msgkey_) -
    reinterpret_cast<char*>(&serverid_) + sizeof(msgkey_));
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
}

void NewSyncRespMsg__NewMsgContent_::SharedCtor() {
  _cached_size_ = 0;
  tag8_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anticlient_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xmlcontent_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&from_, 0, reinterpret_cast<char*>(&msgkey_) -
    reinterpret_cast<char*>(&from_) + sizeof(msgkey_));
}

NewSyncRespMsg__NewMsgContent_::~NewSyncRespMsg__NewMsgContent_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  SharedDtor();
}

void NewSyncRespMsg__NewMsgContent_::SharedDtor() {
  tag8_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  anticlient_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xmlcontent_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete from_;
  }
  if (this != internal_default_instance()) {
    delete to_;
  }
  if (this != internal_default_instance()) {
    delete rawcontent_;
  }
}

void NewSyncRespMsg__NewMsgContent_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncRespMsg__NewMsgContent_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncRespMsg__NewMsgContent_& NewSyncRespMsg__NewMsgContent_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncRespMsg__NewMsgContent_* NewSyncRespMsg__NewMsgContent_::New(::google::protobuf::Arena* arena) const {
  NewSyncRespMsg__NewMsgContent_* n = new NewSyncRespMsg__NewMsgContent_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncRespMsg__NewMsgContent_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_tag8()) {
      GOOGLE_DCHECK(!tag8_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag8_.UnsafeRawStringPointer())->clear();
    }
    if (has_anticlient()) {
      GOOGLE_DCHECK(!anticlient_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*anticlient_.UnsafeRawStringPointer())->clear();
    }
    if (has_xmlcontent()) {
      GOOGLE_DCHECK(!xmlcontent_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*xmlcontent_.UnsafeRawStringPointer())->clear();
    }
    if (has_from()) {
      GOOGLE_DCHECK(from_ != NULL);
      from_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::Clear();
    }
    if (has_to()) {
      GOOGLE_DCHECK(to_ != NULL);
      to_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::Clear();
    }
    if (has_rawcontent()) {
      GOOGLE_DCHECK(rawcontent_ != NULL);
      rawcontent_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&serverid_, 0, reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&serverid_) + sizeof(type_));
  }
  if (_has_bits_[8 / 32] & 7936u) {
    ::memset(&status_, 0, reinterpret_cast<char*>(&msgkey_) -
      reinterpret_cast<char*>(&status_) + sizeof(msgkey_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncRespMsg__NewMsgContent_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_ rawcontent = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rawcontent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_tag7();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag8()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag8().data(), this->tag8().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 createTime = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_createtime();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &createtime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string anticlient = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_anticlient()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->anticlient().data(), this->anticlient().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string xmlContent = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xmlcontent()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->xmlcontent().data(), this->xmlcontent().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 svrId = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_svrid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &svrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 msgKey = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_msgkey();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &msgkey_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  return false;
#undef DO_
}

void NewSyncRespMsg__NewMsgContent_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 serverid = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serverid(), output);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ from = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->from_, output);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ to = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->to_, output);
  }

  // optional int32 type = 4;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->type(), output);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_ rawcontent = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->rawcontent_, output);
  }

  // optional int32 status = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->status(), output);
  }

  // optional int32 tag7 = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->tag7(), output);
  }

  // optional string tag8 = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag8().data(), this->tag8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->tag8(), output);
  }

  // optional int32 createTime = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->createtime(), output);
  }

  // optional string anticlient = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anticlient().data(), this->anticlient().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->anticlient(), output);
  }

  // optional string xmlContent = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xmlcontent().data(), this->xmlcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->xmlcontent(), output);
  }

  // optional int64 svrId = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(12, this->svrid(), output);
  }

  // optional int32 msgKey = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->msgkey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
}

::google::protobuf::uint8* NewSyncRespMsg__NewMsgContent_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int64 serverid = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serverid(), target);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ from = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->from_, deterministic, target);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ to = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->to_, deterministic, target);
  }

  // optional int32 type = 4;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->type(), target);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_ rawcontent = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->rawcontent_, deterministic, target);
  }

  // optional int32 status = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->status(), target);
  }

  // optional int32 tag7 = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->tag7(), target);
  }

  // optional string tag8 = 8;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag8().data(), this->tag8().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->tag8(), target);
  }

  // optional int32 createTime = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->createtime(), target);
  }

  // optional string anticlient = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->anticlient().data(), this->anticlient().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->anticlient(), target);
  }

  // optional string xmlContent = 11;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->xmlcontent().data(), this->xmlcontent().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->xmlcontent(), target);
  }

  // optional int64 svrId = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(12, this->svrid(), target);
  }

  // optional int32 msgKey = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->msgkey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  return target;
}

size_t NewSyncRespMsg__NewMsgContent_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string tag8 = 8;
    if (has_tag8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag8());
    }

    // optional string anticlient = 10;
    if (has_anticlient()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->anticlient());
    }

    // optional string xmlContent = 11;
    if (has_xmlcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->xmlcontent());
    }

    // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ from = 2;
    if (has_from()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->from_);
    }

    // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ to = 3;
    if (has_to()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->to_);
    }

    // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_ rawcontent = 5;
    if (has_rawcontent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rawcontent_);
    }

    // optional int64 serverid = 1;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serverid());
    }

    // optional int32 type = 4;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional int32 status = 6;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->status());
    }

    // optional int32 tag7 = 7;
    if (has_tag7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag7());
    }

    // optional int32 createTime = 9;
    if (has_createtime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->createtime());
    }

    // optional int64 svrId = 12;
    if (has_svrid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->svrid());
    }

    // optional int32 msgKey = 13;
    if (has_msgkey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->msgkey());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncRespMsg__NewMsgContent_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncRespMsg__NewMsgContent_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncRespMsg__NewMsgContent_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
    MergeFrom(*source);
  }
}

void NewSyncRespMsg__NewMsgContent_::MergeFrom(const NewSyncRespMsg__NewMsgContent_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tag8();
      tag8_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag8_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_anticlient();
      anticlient_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.anticlient_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_xmlcontent();
      xmlcontent_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xmlcontent_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_from()->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::MergeFrom(from.from());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_to()->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::MergeFrom(from.to());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_rawcontent()->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_::MergeFrom(from.rawcontent());
    }
    if (cached_has_bits & 0x00000040u) {
      serverid_ = from.serverid_;
    }
    if (cached_has_bits & 0x00000080u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      status_ = from.status_;
    }
    if (cached_has_bits & 0x00000200u) {
      tag7_ = from.tag7_;
    }
    if (cached_has_bits & 0x00000400u) {
      createtime_ = from.createtime_;
    }
    if (cached_has_bits & 0x00000800u) {
      svrid_ = from.svrid_;
    }
    if (cached_has_bits & 0x00001000u) {
      msgkey_ = from.msgkey_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewSyncRespMsg__NewMsgContent_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncRespMsg__NewMsgContent_::CopyFrom(const NewSyncRespMsg__NewMsgContent_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncRespMsg__NewMsgContent_::IsInitialized() const {
  return true;
}

void NewSyncRespMsg__NewMsgContent_::Swap(NewSyncRespMsg__NewMsgContent_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncRespMsg__NewMsgContent_::InternalSwap(NewSyncRespMsg__NewMsgContent_* other) {
  tag8_.Swap(&other->tag8_);
  anticlient_.Swap(&other->anticlient_);
  xmlcontent_.Swap(&other->xmlcontent_);
  std::swap(from_, other->from_);
  std::swap(to_, other->to_);
  std::swap(rawcontent_, other->rawcontent_);
  std::swap(serverid_, other->serverid_);
  std::swap(type_, other->type_);
  std::swap(status_, other->status_);
  std::swap(tag7_, other->tag7_);
  std::swap(createtime_, other->createtime_);
  std::swap(svrid_, other->svrid_);
  std::swap(msgkey_, other->msgkey_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncRespMsg__NewMsgContent_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncRespMsg__NewMsgContent_

// optional int64 serverid = 1;
bool NewSyncRespMsg__NewMsgContent_::has_serverid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_serverid() {
  _has_bits_[0] |= 0x00000040u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000040u;
}
void NewSyncRespMsg__NewMsgContent_::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
::google::protobuf::int64 NewSyncRespMsg__NewMsgContent_::serverid() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.serverid)
  return serverid_;
}
void NewSyncRespMsg__NewMsgContent_::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.serverid)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ from = 2;
bool NewSyncRespMsg__NewMsgContent_::has_from() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_from() {
  _has_bits_[0] |= 0x00000008u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_from() {
  _has_bits_[0] &= ~0x00000008u;
}
void NewSyncRespMsg__NewMsgContent_::clear_from() {
  if (from_ != NULL) from_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::Clear();
  clear_has_from();
}
const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_& NewSyncRespMsg__NewMsgContent_::from() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
  return from_ != NULL ? *from_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::internal_default_instance();
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::mutable_from() {
  set_has_from();
  if (from_ == NULL) {
    from_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
  return from_;
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::release_from() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
  clear_has_from();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* temp = from_;
  from_ = NULL;
  return temp;
}
void NewSyncRespMsg__NewMsgContent_::set_allocated_from(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* from) {
  delete from_;
  from_ = from;
  if (from) {
    set_has_from();
  } else {
    clear_has_from();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.from)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.wxid_ to = 3;
bool NewSyncRespMsg__NewMsgContent_::has_to() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_to() {
  _has_bits_[0] |= 0x00000010u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_to() {
  _has_bits_[0] &= ~0x00000010u;
}
void NewSyncRespMsg__NewMsgContent_::clear_to() {
  if (to_ != NULL) to_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::Clear();
  clear_has_to();
}
const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_& NewSyncRespMsg__NewMsgContent_::to() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
  return to_ != NULL ? *to_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_::internal_default_instance();
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::mutable_to() {
  set_has_to();
  if (to_ == NULL) {
    to_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
  return to_;
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* NewSyncRespMsg__NewMsgContent_::release_to() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
  clear_has_to();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* temp = to_;
  to_ = NULL;
  return temp;
}
void NewSyncRespMsg__NewMsgContent_::set_allocated_to(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__wxid_* to) {
  delete to_;
  to_ = to;
  if (to) {
    set_has_to();
  } else {
    clear_has_to();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.to)
}

// optional int32 type = 4;
bool NewSyncRespMsg__NewMsgContent_::has_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_type() {
  _has_bits_[0] |= 0x00000080u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_type() {
  _has_bits_[0] &= ~0x00000080u;
}
void NewSyncRespMsg__NewMsgContent_::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::type() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.type)
  return type_;
}
void NewSyncRespMsg__NewMsgContent_::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.type)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawContent_ rawcontent = 5;
bool NewSyncRespMsg__NewMsgContent_::has_rawcontent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_rawcontent() {
  _has_bits_[0] |= 0x00000020u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_rawcontent() {
  _has_bits_[0] &= ~0x00000020u;
}
void NewSyncRespMsg__NewMsgContent_::clear_rawcontent() {
  if (rawcontent_ != NULL) rawcontent_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_::Clear();
  clear_has_rawcontent();
}
const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_& NewSyncRespMsg__NewMsgContent_::rawcontent() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
  return rawcontent_ != NULL ? *rawcontent_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_::internal_default_instance();
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* NewSyncRespMsg__NewMsgContent_::mutable_rawcontent() {
  set_has_rawcontent();
  if (rawcontent_ == NULL) {
    rawcontent_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
  return rawcontent_;
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* NewSyncRespMsg__NewMsgContent_::release_rawcontent() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
  clear_has_rawcontent();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* temp = rawcontent_;
  rawcontent_ = NULL;
  return temp;
}
void NewSyncRespMsg__NewMsgContent_::set_allocated_rawcontent(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent__rawContent_* rawcontent) {
  delete rawcontent_;
  rawcontent_ = rawcontent;
  if (rawcontent) {
    set_has_rawcontent();
  } else {
    clear_has_rawcontent();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.rawcontent)
}

// optional int32 status = 6;
bool NewSyncRespMsg__NewMsgContent_::has_status() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_status() {
  _has_bits_[0] |= 0x00000100u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_status() {
  _has_bits_[0] &= ~0x00000100u;
}
void NewSyncRespMsg__NewMsgContent_::clear_status() {
  status_ = 0;
  clear_has_status();
}
::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::status() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.status)
  return status_;
}
void NewSyncRespMsg__NewMsgContent_::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.status)
}

// optional int32 tag7 = 7;
bool NewSyncRespMsg__NewMsgContent_::has_tag7() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_tag7() {
  _has_bits_[0] |= 0x00000200u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000200u;
}
void NewSyncRespMsg__NewMsgContent_::clear_tag7() {
  tag7_ = 0;
  clear_has_tag7();
}
::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::tag7() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag7)
  return tag7_;
}
void NewSyncRespMsg__NewMsgContent_::set_tag7(::google::protobuf::int32 value) {
  set_has_tag7();
  tag7_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag7)
}

// optional string tag8 = 8;
bool NewSyncRespMsg__NewMsgContent_::has_tag8() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_tag8() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncRespMsg__NewMsgContent_::clear_tag8() {
  tag8_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag8();
}
const ::std::string& NewSyncRespMsg__NewMsgContent_::tag8() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
  return tag8_.GetNoArena();
}
void NewSyncRespMsg__NewMsgContent_::set_tag8(const ::std::string& value) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
#if LANG_CXX11
void NewSyncRespMsg__NewMsgContent_::set_tag8(::std::string&& value) {
  set_has_tag8();
  tag8_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
#endif
void NewSyncRespMsg__NewMsgContent_::set_tag8(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
void NewSyncRespMsg__NewMsgContent_::set_tag8(const char* value, size_t size) {
  set_has_tag8();
  tag8_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}
::std::string* NewSyncRespMsg__NewMsgContent_::mutable_tag8() {
  set_has_tag8();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
  return tag8_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncRespMsg__NewMsgContent_::release_tag8() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
  clear_has_tag8();
  return tag8_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncRespMsg__NewMsgContent_::set_allocated_tag8(::std::string* tag8) {
  if (tag8 != NULL) {
    set_has_tag8();
  } else {
    clear_has_tag8();
  }
  tag8_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag8);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.tag8)
}

// optional int32 createTime = 9;
bool NewSyncRespMsg__NewMsgContent_::has_createtime() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_createtime() {
  _has_bits_[0] |= 0x00000400u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_createtime() {
  _has_bits_[0] &= ~0x00000400u;
}
void NewSyncRespMsg__NewMsgContent_::clear_createtime() {
  createtime_ = 0;
  clear_has_createtime();
}
::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::createtime() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.createTime)
  return createtime_;
}
void NewSyncRespMsg__NewMsgContent_::set_createtime(::google::protobuf::int32 value) {
  set_has_createtime();
  createtime_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.createTime)
}

// optional string anticlient = 10;
bool NewSyncRespMsg__NewMsgContent_::has_anticlient() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_anticlient() {
  _has_bits_[0] |= 0x00000002u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_anticlient() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewSyncRespMsg__NewMsgContent_::clear_anticlient() {
  anticlient_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_anticlient();
}
const ::std::string& NewSyncRespMsg__NewMsgContent_::anticlient() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
  return anticlient_.GetNoArena();
}
void NewSyncRespMsg__NewMsgContent_::set_anticlient(const ::std::string& value) {
  set_has_anticlient();
  anticlient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
#if LANG_CXX11
void NewSyncRespMsg__NewMsgContent_::set_anticlient(::std::string&& value) {
  set_has_anticlient();
  anticlient_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
#endif
void NewSyncRespMsg__NewMsgContent_::set_anticlient(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_anticlient();
  anticlient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
void NewSyncRespMsg__NewMsgContent_::set_anticlient(const char* value, size_t size) {
  set_has_anticlient();
  anticlient_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}
::std::string* NewSyncRespMsg__NewMsgContent_::mutable_anticlient() {
  set_has_anticlient();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
  return anticlient_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncRespMsg__NewMsgContent_::release_anticlient() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
  clear_has_anticlient();
  return anticlient_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncRespMsg__NewMsgContent_::set_allocated_anticlient(::std::string* anticlient) {
  if (anticlient != NULL) {
    set_has_anticlient();
  } else {
    clear_has_anticlient();
  }
  anticlient_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), anticlient);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.anticlient)
}

// optional string xmlContent = 11;
bool NewSyncRespMsg__NewMsgContent_::has_xmlcontent() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_xmlcontent() {
  _has_bits_[0] |= 0x00000004u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_xmlcontent() {
  _has_bits_[0] &= ~0x00000004u;
}
void NewSyncRespMsg__NewMsgContent_::clear_xmlcontent() {
  xmlcontent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_xmlcontent();
}
const ::std::string& NewSyncRespMsg__NewMsgContent_::xmlcontent() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
  return xmlcontent_.GetNoArena();
}
void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(const ::std::string& value) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
#if LANG_CXX11
void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(::std::string&& value) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
#endif
void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
void NewSyncRespMsg__NewMsgContent_::set_xmlcontent(const char* value, size_t size) {
  set_has_xmlcontent();
  xmlcontent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}
::std::string* NewSyncRespMsg__NewMsgContent_::mutable_xmlcontent() {
  set_has_xmlcontent();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
  return xmlcontent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncRespMsg__NewMsgContent_::release_xmlcontent() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
  clear_has_xmlcontent();
  return xmlcontent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncRespMsg__NewMsgContent_::set_allocated_xmlcontent(::std::string* xmlcontent) {
  if (xmlcontent != NULL) {
    set_has_xmlcontent();
  } else {
    clear_has_xmlcontent();
  }
  xmlcontent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xmlcontent);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.xmlContent)
}

// optional int64 svrId = 12;
bool NewSyncRespMsg__NewMsgContent_::has_svrid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_svrid() {
  _has_bits_[0] |= 0x00000800u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_svrid() {
  _has_bits_[0] &= ~0x00000800u;
}
void NewSyncRespMsg__NewMsgContent_::clear_svrid() {
  svrid_ = GOOGLE_LONGLONG(0);
  clear_has_svrid();
}
::google::protobuf::int64 NewSyncRespMsg__NewMsgContent_::svrid() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.svrId)
  return svrid_;
}
void NewSyncRespMsg__NewMsgContent_::set_svrid(::google::protobuf::int64 value) {
  set_has_svrid();
  svrid_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.svrId)
}

// optional int32 msgKey = 13;
bool NewSyncRespMsg__NewMsgContent_::has_msgkey() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void NewSyncRespMsg__NewMsgContent_::set_has_msgkey() {
  _has_bits_[0] |= 0x00001000u;
}
void NewSyncRespMsg__NewMsgContent_::clear_has_msgkey() {
  _has_bits_[0] &= ~0x00001000u;
}
void NewSyncRespMsg__NewMsgContent_::clear_msgkey() {
  msgkey_ = 0;
  clear_has_msgkey();
}
::google::protobuf::int32 NewSyncRespMsg__NewMsgContent_::msgkey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.msgKey)
  return msgkey_;
}
void NewSyncRespMsg__NewMsgContent_::set_msgkey(::google::protobuf::int32 value) {
  set_has_msgkey();
  msgkey_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_.msgKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncRespMsg_::kSizeFieldNumber;
const int NewSyncRespMsg_::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncRespMsg_::NewSyncRespMsg_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
}
NewSyncRespMsg_::NewSyncRespMsg_(const NewSyncRespMsg_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_content()) {
    content_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_(*from.content_);
  } else {
    content_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
}

void NewSyncRespMsg_::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&content_, 0, reinterpret_cast<char*>(&size_) -
    reinterpret_cast<char*>(&content_) + sizeof(size_));
}

NewSyncRespMsg_::~NewSyncRespMsg_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  SharedDtor();
}

void NewSyncRespMsg_::SharedDtor() {
  if (this != internal_default_instance()) {
    delete content_;
  }
}

void NewSyncRespMsg_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncRespMsg_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncRespMsg_& NewSyncRespMsg_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncRespMsg_* NewSyncRespMsg_::New(::google::protobuf::Arena* arena) const {
  NewSyncRespMsg_* n = new NewSyncRespMsg_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncRespMsg_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  if (has_content()) {
    GOOGLE_DCHECK(content_ != NULL);
    content_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_::Clear();
  }
  size_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncRespMsg_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 size = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_ content = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  return false;
#undef DO_
}

void NewSyncRespMsg_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 size = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->size(), output);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_ content = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->content_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
}

::google::protobuf::uint8* NewSyncRespMsg_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 size = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->size(), target);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_ content = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->content_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  return target;
}

size_t NewSyncRespMsg_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_ content = 2;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->content_);
    }

    // optional int32 size = 1;
    if (has_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->size());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncRespMsg_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncRespMsg_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncRespMsg_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
    MergeFrom(*source);
  }
}

void NewSyncRespMsg_::MergeFrom(const NewSyncRespMsg_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_content()->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_::MergeFrom(from.content());
    }
    if (cached_has_bits & 0x00000002u) {
      size_ = from.size_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewSyncRespMsg_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncRespMsg_::CopyFrom(const NewSyncRespMsg_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncRespMsg_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncRespMsg_::IsInitialized() const {
  return true;
}

void NewSyncRespMsg_::Swap(NewSyncRespMsg_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncRespMsg_::InternalSwap(NewSyncRespMsg_* other) {
  std::swap(content_, other->content_);
  std::swap(size_, other->size_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncRespMsg_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncRespMsg_

// optional int32 size = 1;
bool NewSyncRespMsg_::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewSyncRespMsg_::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
void NewSyncRespMsg_::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewSyncRespMsg_::clear_size() {
  size_ = 0;
  clear_has_size();
}
::google::protobuf::int32 NewSyncRespMsg_::size() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.size)
  return size_;
}
void NewSyncRespMsg_::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncRespMsg_.size)
}

// optional .com.tencent.mars.microchat.proto.NewSyncRespMsg_.NewMsgContent_ content = 2;
bool NewSyncRespMsg_::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncRespMsg_::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncRespMsg_::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncRespMsg_::clear_content() {
  if (content_ != NULL) content_->::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_::Clear();
  clear_has_content();
}
const ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_& NewSyncRespMsg_::content() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
  return content_ != NULL ? *content_
                         : *::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_::internal_default_instance();
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* NewSyncRespMsg_::mutable_content() {
  set_has_content();
  if (content_ == NULL) {
    content_ = new ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
  return content_;
}
::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* NewSyncRespMsg_::release_content() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
  clear_has_content();
  ::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* temp = content_;
  content_ = NULL;
  return temp;
}
void NewSyncRespMsg_::set_allocated_content(::com::tencent::mars::microchat::proto::NewSyncRespMsg__NewMsgContent_* content) {
  delete content_;
  content_ = content;
  if (content) {
    set_has_content();
  } else {
    clear_has_content();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncRespMsg_.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncMsg__NewMsg_::kTypeFieldNumber;
const int NewSyncMsg__NewMsg_::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncMsg__NewMsg_::NewSyncMsg__NewMsg_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
}
NewSyncMsg__NewMsg_::NewSyncMsg__NewMsg_(const NewSyncMsg__NewMsg_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
}

void NewSyncMsg__NewMsg_::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

NewSyncMsg__NewMsg_::~NewSyncMsg__NewMsg_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  SharedDtor();
}

void NewSyncMsg__NewMsg_::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewSyncMsg__NewMsg_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncMsg__NewMsg_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncMsg__NewMsg_& NewSyncMsg__NewMsg_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncMsg__NewMsg_* NewSyncMsg__NewMsg_::New(::google::protobuf::Arena* arena) const {
  NewSyncMsg__NewMsg_* n = new NewSyncMsg__NewMsg_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncMsg__NewMsg_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  if (has_msg()) {
    GOOGLE_DCHECK(!msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_.UnsafeRawStringPointer())->clear();
  }
  type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncMsg__NewMsg_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  return false;
#undef DO_
}

void NewSyncMsg__NewMsg_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
}

::google::protobuf::uint8* NewSyncMsg__NewMsg_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  return target;
}

size_t NewSyncMsg__NewMsg_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncMsg__NewMsg_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncMsg__NewMsg_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncMsg__NewMsg_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
    MergeFrom(*source);
  }
}

void NewSyncMsg__NewMsg_::MergeFrom(const NewSyncMsg__NewMsg_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      type_ = from.type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewSyncMsg__NewMsg_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncMsg__NewMsg_::CopyFrom(const NewSyncMsg__NewMsg_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncMsg__NewMsg_::IsInitialized() const {
  return true;
}

void NewSyncMsg__NewMsg_::Swap(NewSyncMsg__NewMsg_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncMsg__NewMsg_::InternalSwap(NewSyncMsg__NewMsg_* other) {
  msg_.Swap(&other->msg_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncMsg__NewMsg_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncMsg__NewMsg_

// optional int32 type = 1;
bool NewSyncMsg__NewMsg_::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewSyncMsg__NewMsg_::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void NewSyncMsg__NewMsg_::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewSyncMsg__NewMsg_::clear_type() {
  type_ = 0;
  clear_has_type();
}
::google::protobuf::int32 NewSyncMsg__NewMsg_::type() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.type)
  return type_;
}
void NewSyncMsg__NewMsg_::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.type)
}

// optional string msg = 2;
bool NewSyncMsg__NewMsg_::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncMsg__NewMsg_::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncMsg__NewMsg_::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncMsg__NewMsg_::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& NewSyncMsg__NewMsg_::msg() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
  return msg_.GetNoArena();
}
void NewSyncMsg__NewMsg_::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
#if LANG_CXX11
void NewSyncMsg__NewMsg_::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
#endif
void NewSyncMsg__NewMsg_::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
void NewSyncMsg__NewMsg_::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}
::std::string* NewSyncMsg__NewMsg_::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncMsg__NewMsg_::release_msg() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncMsg__NewMsg_::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncMsg_::kCntFieldNumber;
const int NewSyncMsg_::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncMsg_::NewSyncMsg_()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncMsg_)
}
NewSyncMsg_::NewSyncMsg_(const NewSyncMsg_& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      msg_(from.msg_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cnt_ = from.cnt_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncMsg_)
}

void NewSyncMsg_::SharedCtor() {
  _cached_size_ = 0;
  cnt_ = 0;
}

NewSyncMsg_::~NewSyncMsg_() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncMsg_)
  SharedDtor();
}

void NewSyncMsg_::SharedDtor() {
}

void NewSyncMsg_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncMsg_::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncMsg_& NewSyncMsg_::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncMsg_* NewSyncMsg_::New(::google::protobuf::Arena* arena) const {
  NewSyncMsg_* n = new NewSyncMsg_;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncMsg_::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  msg_.Clear();
  cnt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncMsg_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 cnt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_cnt();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cnt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_ msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncMsg_)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncMsg_)
  return false;
#undef DO_
}

void NewSyncMsg_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cnt = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->cnt(), output);
  }

  // repeated .com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_ msg = 2;
  for (unsigned int i = 0, n = this->msg_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->msg(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncMsg_)
}

::google::protobuf::uint8* NewSyncMsg_::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 cnt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->cnt(), target);
  }

  // repeated .com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_ msg = 2;
  for (unsigned int i = 0, n = this->msg_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->msg(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncMsg_)
  return target;
}

size_t NewSyncMsg_::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_ msg = 2;
  {
    unsigned int count = this->msg_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msg(i));
    }
  }

  // optional int32 cnt = 1;
  if (has_cnt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cnt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncMsg_::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncMsg_* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncMsg_>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncMsg_)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncMsg_)
    MergeFrom(*source);
  }
}

void NewSyncMsg_::MergeFrom(const NewSyncMsg_& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msg_.MergeFrom(from.msg_);
  if (from.has_cnt()) {
    set_cnt(from.cnt());
  }
}

void NewSyncMsg_::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncMsg_::CopyFrom(const NewSyncMsg_& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncMsg_)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncMsg_::IsInitialized() const {
  return true;
}

void NewSyncMsg_::Swap(NewSyncMsg_* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncMsg_::InternalSwap(NewSyncMsg_* other) {
  msg_.InternalSwap(&other->msg_);
  std::swap(cnt_, other->cnt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncMsg_::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncMsg_

// optional int32 cnt = 1;
bool NewSyncMsg_::has_cnt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncMsg_::set_has_cnt() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncMsg_::clear_has_cnt() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncMsg_::clear_cnt() {
  cnt_ = 0;
  clear_has_cnt();
}
::google::protobuf::int32 NewSyncMsg_::cnt() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.cnt)
  return cnt_;
}
void NewSyncMsg_::set_cnt(::google::protobuf::int32 value) {
  set_has_cnt();
  cnt_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncMsg_.cnt)
}

// repeated .com.tencent.mars.microchat.proto.NewSyncMsg_.NewMsg_ msg = 2;
int NewSyncMsg_::msg_size() const {
  return msg_.size();
}
void NewSyncMsg_::clear_msg() {
  msg_.Clear();
}
const ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_& NewSyncMsg_::msg(int index) const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_.Get(index);
}
::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_* NewSyncMsg_::mutable_msg(int index) {
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_.Mutable(index);
}
::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_* NewSyncMsg_::add_msg() {
  // @@protoc_insertion_point(field_add:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_.Add();
}
::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_ >*
NewSyncMsg_::mutable_msg() {
  // @@protoc_insertion_point(field_mutable_list:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return &msg_;
}
const ::google::protobuf::RepeatedPtrField< ::com::tencent::mars::microchat::proto::NewSyncMsg__NewMsg_ >&
NewSyncMsg_::msg() const {
  // @@protoc_insertion_point(field_list:com.tencent.mars.microchat.proto.NewSyncMsg_.msg)
  return msg_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewSyncResp::kTag1FieldNumber;
const int NewSyncResp::kNewmsgFieldNumber;
const int NewSyncResp::kTag3FieldNumber;
const int NewSyncResp::kStrSyncKeyFieldNumber;
const int NewSyncResp::kTag5FieldNumber;
const int NewSyncResp::kTag6FieldNumber;
const int NewSyncResp::kUtcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewSyncResp::NewSyncResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.NewSyncResp)
}
NewSyncResp::NewSyncResp(const NewSyncResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strsynckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strsynckey()) {
    strsynckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsynckey_);
  }
  if (from.has_newmsg()) {
    newmsg_ = new ::com::tencent::mars::microchat::proto::NewSyncMsg_(*from.newmsg_);
  } else {
    newmsg_ = NULL;
  }
  ::memcpy(&tag1_, &from.tag1_,
    reinterpret_cast<char*>(&utc_) -
    reinterpret_cast<char*>(&tag1_) + sizeof(utc_));
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.NewSyncResp)
}

void NewSyncResp::SharedCtor() {
  _cached_size_ = 0;
  strsynckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&newmsg_, 0, reinterpret_cast<char*>(&utc_) -
    reinterpret_cast<char*>(&newmsg_) + sizeof(utc_));
}

NewSyncResp::~NewSyncResp() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.NewSyncResp)
  SharedDtor();
}

void NewSyncResp::SharedDtor() {
  strsynckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete newmsg_;
  }
}

void NewSyncResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewSyncResp::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NewSyncResp& NewSyncResp::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewSyncResp* NewSyncResp::New(::google::protobuf::Arena* arena) const {
  NewSyncResp* n = new NewSyncResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewSyncResp::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.NewSyncResp)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_strsynckey()) {
      GOOGLE_DCHECK(!strsynckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*strsynckey_.UnsafeRawStringPointer())->clear();
    }
    if (has_newmsg()) {
      GOOGLE_DCHECK(newmsg_ != NULL);
      newmsg_->::com::tencent::mars::microchat::proto::NewSyncMsg_::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 124u) {
    ::memset(&tag1_, 0, reinterpret_cast<char*>(&utc_) -
      reinterpret_cast<char*>(&tag1_) + sizeof(utc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewSyncResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.NewSyncResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 tag1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_tag1();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.tencent.mars.microchat.proto.NewSyncMsg_ newmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_newmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_tag3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string strSyncKey = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strsynckey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strsynckey().data(), this->strsynckey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_tag5();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_tag6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 Utc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_utc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &utc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.NewSyncResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.NewSyncResp)
  return false;
#undef DO_
}

void NewSyncResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.NewSyncResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tag1 = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tag1(), output);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncMsg_ newmsg = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->newmsg_, output);
  }

  // optional int32 tag3 = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tag3(), output);
  }

  // optional string strSyncKey = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strsynckey().data(), this->strsynckey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->strsynckey(), output);
  }

  // optional int32 tag5 = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->tag5(), output);
  }

  // optional int32 tag6 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->tag6(), output);
  }

  // optional int32 Utc = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->utc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.NewSyncResp)
}

::google::protobuf::uint8* NewSyncResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.NewSyncResp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 tag1 = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tag1(), target);
  }

  // optional .com.tencent.mars.microchat.proto.NewSyncMsg_ newmsg = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->newmsg_, deterministic, target);
  }

  // optional int32 tag3 = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tag3(), target);
  }

  // optional string strSyncKey = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strsynckey().data(), this->strsynckey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->strsynckey(), target);
  }

  // optional int32 tag5 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->tag5(), target);
  }

  // optional int32 tag6 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->tag6(), target);
  }

  // optional int32 Utc = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->utc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.NewSyncResp)
  return target;
}

size_t NewSyncResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.NewSyncResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string strSyncKey = 4;
    if (has_strsynckey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strsynckey());
    }

    // optional .com.tencent.mars.microchat.proto.NewSyncMsg_ newmsg = 2;
    if (has_newmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->newmsg_);
    }

    // optional int32 tag1 = 1;
    if (has_tag1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag1());
    }

    // optional int32 tag3 = 3;
    if (has_tag3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag3());
    }

    // optional int32 tag5 = 5;
    if (has_tag5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag5());
    }

    // optional int32 tag6 = 6;
    if (has_tag6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag6());
    }

    // optional int32 Utc = 7;
    if (has_utc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->utc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewSyncResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.NewSyncResp)
  GOOGLE_DCHECK_NE(&from, this);
  const NewSyncResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewSyncResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.NewSyncResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.NewSyncResp)
    MergeFrom(*source);
  }
}

void NewSyncResp::MergeFrom(const NewSyncResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.NewSyncResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_strsynckey();
      strsynckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strsynckey_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_newmsg()->::com::tencent::mars::microchat::proto::NewSyncMsg_::MergeFrom(from.newmsg());
    }
    if (cached_has_bits & 0x00000004u) {
      tag1_ = from.tag1_;
    }
    if (cached_has_bits & 0x00000008u) {
      tag3_ = from.tag3_;
    }
    if (cached_has_bits & 0x00000010u) {
      tag5_ = from.tag5_;
    }
    if (cached_has_bits & 0x00000020u) {
      tag6_ = from.tag6_;
    }
    if (cached_has_bits & 0x00000040u) {
      utc_ = from.utc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void NewSyncResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.NewSyncResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewSyncResp::CopyFrom(const NewSyncResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.NewSyncResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewSyncResp::IsInitialized() const {
  return true;
}

void NewSyncResp::Swap(NewSyncResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewSyncResp::InternalSwap(NewSyncResp* other) {
  strsynckey_.Swap(&other->strsynckey_);
  std::swap(newmsg_, other->newmsg_);
  std::swap(tag1_, other->tag1_);
  std::swap(tag3_, other->tag3_);
  std::swap(tag5_, other->tag5_);
  std::swap(tag6_, other->tag6_);
  std::swap(utc_, other->utc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewSyncResp::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewSyncResp

// optional int32 tag1 = 1;
bool NewSyncResp::has_tag1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NewSyncResp::set_has_tag1() {
  _has_bits_[0] |= 0x00000004u;
}
void NewSyncResp::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000004u;
}
void NewSyncResp::clear_tag1() {
  tag1_ = 0;
  clear_has_tag1();
}
::google::protobuf::int32 NewSyncResp::tag1() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag1)
  return tag1_;
}
void NewSyncResp::set_tag1(::google::protobuf::int32 value) {
  set_has_tag1();
  tag1_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag1)
}

// optional .com.tencent.mars.microchat.proto.NewSyncMsg_ newmsg = 2;
bool NewSyncResp::has_newmsg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewSyncResp::set_has_newmsg() {
  _has_bits_[0] |= 0x00000002u;
}
void NewSyncResp::clear_has_newmsg() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewSyncResp::clear_newmsg() {
  if (newmsg_ != NULL) newmsg_->::com::tencent::mars::microchat::proto::NewSyncMsg_::Clear();
  clear_has_newmsg();
}
const ::com::tencent::mars::microchat::proto::NewSyncMsg_& NewSyncResp::newmsg() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
  return newmsg_ != NULL ? *newmsg_
                         : *::com::tencent::mars::microchat::proto::NewSyncMsg_::internal_default_instance();
}
::com::tencent::mars::microchat::proto::NewSyncMsg_* NewSyncResp::mutable_newmsg() {
  set_has_newmsg();
  if (newmsg_ == NULL) {
    newmsg_ = new ::com::tencent::mars::microchat::proto::NewSyncMsg_;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
  return newmsg_;
}
::com::tencent::mars::microchat::proto::NewSyncMsg_* NewSyncResp::release_newmsg() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
  clear_has_newmsg();
  ::com::tencent::mars::microchat::proto::NewSyncMsg_* temp = newmsg_;
  newmsg_ = NULL;
  return temp;
}
void NewSyncResp::set_allocated_newmsg(::com::tencent::mars::microchat::proto::NewSyncMsg_* newmsg) {
  delete newmsg_;
  newmsg_ = newmsg;
  if (newmsg) {
    set_has_newmsg();
  } else {
    clear_has_newmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncResp.newmsg)
}

// optional int32 tag3 = 3;
bool NewSyncResp::has_tag3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NewSyncResp::set_has_tag3() {
  _has_bits_[0] |= 0x00000008u;
}
void NewSyncResp::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000008u;
}
void NewSyncResp::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
::google::protobuf::int32 NewSyncResp::tag3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag3)
  return tag3_;
}
void NewSyncResp::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag3)
}

// optional string strSyncKey = 4;
bool NewSyncResp::has_strsynckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewSyncResp::set_has_strsynckey() {
  _has_bits_[0] |= 0x00000001u;
}
void NewSyncResp::clear_has_strsynckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewSyncResp::clear_strsynckey() {
  strsynckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strsynckey();
}
const ::std::string& NewSyncResp::strsynckey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
  return strsynckey_.GetNoArena();
}
void NewSyncResp::set_strsynckey(const ::std::string& value) {
  set_has_strsynckey();
  strsynckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
#if LANG_CXX11
void NewSyncResp::set_strsynckey(::std::string&& value) {
  set_has_strsynckey();
  strsynckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
#endif
void NewSyncResp::set_strsynckey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strsynckey();
  strsynckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
void NewSyncResp::set_strsynckey(const char* value, size_t size) {
  set_has_strsynckey();
  strsynckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}
::std::string* NewSyncResp::mutable_strsynckey() {
  set_has_strsynckey();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
  return strsynckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewSyncResp::release_strsynckey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
  clear_has_strsynckey();
  return strsynckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewSyncResp::set_allocated_strsynckey(::std::string* strsynckey) {
  if (strsynckey != NULL) {
    set_has_strsynckey();
  } else {
    clear_has_strsynckey();
  }
  strsynckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strsynckey);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.NewSyncResp.strSyncKey)
}

// optional int32 tag5 = 5;
bool NewSyncResp::has_tag5() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void NewSyncResp::set_has_tag5() {
  _has_bits_[0] |= 0x00000010u;
}
void NewSyncResp::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000010u;
}
void NewSyncResp::clear_tag5() {
  tag5_ = 0;
  clear_has_tag5();
}
::google::protobuf::int32 NewSyncResp::tag5() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag5)
  return tag5_;
}
void NewSyncResp::set_tag5(::google::protobuf::int32 value) {
  set_has_tag5();
  tag5_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag5)
}

// optional int32 tag6 = 6;
bool NewSyncResp::has_tag6() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NewSyncResp::set_has_tag6() {
  _has_bits_[0] |= 0x00000020u;
}
void NewSyncResp::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000020u;
}
void NewSyncResp::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
::google::protobuf::int32 NewSyncResp::tag6() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.tag6)
  return tag6_;
}
void NewSyncResp::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.tag6)
}

// optional int32 Utc = 7;
bool NewSyncResp::has_utc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void NewSyncResp::set_has_utc() {
  _has_bits_[0] |= 0x00000040u;
}
void NewSyncResp::clear_has_utc() {
  _has_bits_[0] &= ~0x00000040u;
}
void NewSyncResp::clear_utc() {
  utc_ = 0;
  clear_has_utc();
}
::google::protobuf::int32 NewSyncResp::utc() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.NewSyncResp.Utc)
  return utc_;
}
void NewSyncResp::set_utc(::google::protobuf::int32 value) {
  set_has_utc();
  utc_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.NewSyncResp.Utc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int commonMsg::kLenFieldNumber;
const int commonMsg::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

commonMsg::commonMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_newsync_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.commonMsg)
}
commonMsg::commonMsg(const commonMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_msg()) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  len_ = from.len_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.commonMsg)
}

void commonMsg::SharedCtor() {
  _cached_size_ = 0;
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  len_ = 0;
}

commonMsg::~commonMsg() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.commonMsg)
  SharedDtor();
}

void commonMsg::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void commonMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* commonMsg::descriptor() {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const commonMsg& commonMsg::default_instance() {
  protobuf_newsync_2eproto::InitDefaults();
  return *internal_default_instance();
}

commonMsg* commonMsg::New(::google::protobuf::Arena* arena) const {
  commonMsg* n = new commonMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void commonMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.commonMsg)
  if (has_msg()) {
    GOOGLE_DCHECK(!msg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*msg_.UnsafeRawStringPointer())->clear();
  }
  len_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool commonMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.commonMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 len = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_len();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &len_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->msg().data(), this->msg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.commonMsg.msg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.commonMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.commonMsg)
  return false;
#undef DO_
}

void commonMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.commonMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 len = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->len(), output);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.commonMsg.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->msg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.commonMsg)
}

::google::protobuf::uint8* commonMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.commonMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 len = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->len(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->msg().data(), this->msg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.commonMsg.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->msg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.commonMsg)
  return target;
}

size_t commonMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.commonMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string msg = 2;
    if (has_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->msg());
    }

    // optional int32 len = 1;
    if (has_len()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->len());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void commonMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.commonMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const commonMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const commonMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.commonMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.commonMsg)
    MergeFrom(*source);
  }
}

void commonMsg::MergeFrom(const commonMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.commonMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_msg();
      msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      len_ = from.len_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void commonMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.commonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void commonMsg::CopyFrom(const commonMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.commonMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool commonMsg::IsInitialized() const {
  return true;
}

void commonMsg::Swap(commonMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void commonMsg::InternalSwap(commonMsg* other) {
  msg_.Swap(&other->msg_);
  std::swap(len_, other->len_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata commonMsg::GetMetadata() const {
  protobuf_newsync_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_newsync_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// commonMsg

// optional int32 len = 1;
bool commonMsg::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void commonMsg::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
void commonMsg::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
void commonMsg::clear_len() {
  len_ = 0;
  clear_has_len();
}
::google::protobuf::int32 commonMsg::len() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.commonMsg.len)
  return len_;
}
void commonMsg::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.commonMsg.len)
}

// optional string msg = 2;
bool commonMsg::has_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void commonMsg::set_has_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void commonMsg::clear_has_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void commonMsg::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_msg();
}
const ::std::string& commonMsg::msg() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.commonMsg.msg)
  return msg_.GetNoArena();
}
void commonMsg::set_msg(const ::std::string& value) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.commonMsg.msg)
}
#if LANG_CXX11
void commonMsg::set_msg(::std::string&& value) {
  set_has_msg();
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.commonMsg.msg)
}
#endif
void commonMsg::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.commonMsg.msg)
}
void commonMsg::set_msg(const char* value, size_t size) {
  set_has_msg();
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.commonMsg.msg)
}
::std::string* commonMsg::mutable_msg() {
  set_has_msg();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.commonMsg.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* commonMsg::release_msg() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.commonMsg.msg)
  clear_has_msg();
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void commonMsg::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    set_has_msg();
  } else {
    clear_has_msg();
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.commonMsg.msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace microchat
}  // namespace mars
}  // namespace tencent
}  // namespace com

// @@protoc_insertion_point(global_scope)
