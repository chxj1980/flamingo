// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VerifyUser.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "VerifyUser.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace tencent {
namespace mars {
namespace microchat {
namespace proto {
class VerifyUserRequest_LoginInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyUserRequest_LoginInfo> {
} _VerifyUserRequest_LoginInfo_default_instance_;
class VerifyUserRequest__UserNameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyUserRequest__UserName> {
} _VerifyUserRequest__UserName_default_instance_;
class VerifyUserRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyUserRequest> {
} _VerifyUserRequest_default_instance_;
class VerifyUserResponse__Result__ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyUserResponse__Result__Result> {
} _VerifyUserResponse__Result__Result_default_instance_;
class VerifyUserResponse__ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyUserResponse__Result> {
} _VerifyUserResponse__Result_default_instance_;
class VerifyUserResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<VerifyUserResponse> {
} _VerifyUserResponse_default_instance_;

namespace protobuf_VerifyUser_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, aeskey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, uin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, clientver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, androidver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest_LoginInfo, unknown3_),
  0,
  3,
  1,
  4,
  2,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, tag1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, tag2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, tag3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, tag4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, tag5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, tag8_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest__UserName, tag9_),
  0,
  1,
  2,
  5,
  3,
  6,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, tag2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, tag3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, tag6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserRequest, tag7_),
  2,
  4,
  5,
  3,
  0,
  6,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse__Result__Result, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse__Result__Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse__Result__Result, strresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse__Result, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse__Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse__Result, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse__Result, result_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerifyUserResponse, tag1_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 11, sizeof(VerifyUserRequest_LoginInfo)},
  { 17, 29, sizeof(VerifyUserRequest__UserName)},
  { 36, 48, sizeof(VerifyUserRequest)},
  { 55, 61, sizeof(VerifyUserResponse__Result__Result)},
  { 62, 69, sizeof(VerifyUserResponse__Result)},
  { 71, 77, sizeof(VerifyUserResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyUserRequest_LoginInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyUserRequest__UserName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyUserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyUserResponse__Result__Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyUserResponse__Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_VerifyUserResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "VerifyUser.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _VerifyUserRequest_LoginInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _VerifyUserRequest__UserName_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _VerifyUserRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _VerifyUserResponse__Result__Result_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _VerifyUserResponse__Result_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _VerifyUserResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _VerifyUserRequest_LoginInfo_default_instance_.DefaultConstruct();
  _VerifyUserRequest__UserName_default_instance_.DefaultConstruct();
  _VerifyUserRequest_default_instance_.DefaultConstruct();
  _VerifyUserResponse__Result__Result_default_instance_.DefaultConstruct();
  _VerifyUserResponse__Result_default_instance_.DefaultConstruct();
  _VerifyUserResponse_default_instance_.DefaultConstruct();
  _VerifyUserRequest_default_instance_.get_mutable()->login_ = const_cast< ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo*>(
      ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo::internal_default_instance());
  _VerifyUserRequest_default_instance_.get_mutable()->name_ = const_cast< ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName*>(
      ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName::internal_default_instance());
  _VerifyUserResponse__Result_default_instance_.get_mutable()->result_ = const_cast< ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result*>(
      ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result::internal_default_instance());
  _VerifyUserResponse_default_instance_.get_mutable()->tag1_ = const_cast< ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result*>(
      ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020VerifyUser.proto\022 com.tencent.mars.mic"
      "rochat.proto\"\327\003\n\021VerifyUserRequest\022L\n\005lo"
      "gin\030\001 \002(\0132=.com.tencent.mars.microchat.p"
      "roto.VerifyUserRequest.LoginInfo\022\014\n\004tag2"
      "\030\002 \001(\005\022\014\n\004tag3\030\003 \001(\005\022K\n\004name\030\004 \002(\0132=.com"
      ".tencent.mars.microchat.proto.VerifyUser"
      "Request._UserName\022\017\n\007content\030\005 \001(\t\022\014\n\004ta"
      "g6\030\006 \001(\005\022\014\n\004tag7\030\007 \001(\t\032o\n\tLoginInfo\022\016\n\006a"
      "esKey\030\001 \002(\t\022\013\n\003uin\030\002 \002(\005\022\014\n\004guid\030\003 \002(\t\022\021"
      "\n\tclientVer\030\004 \002(\005\022\022\n\nandroidVer\030\005 \002(\t\022\020\n"
      "\010unknown3\030\006 \002(\005\032m\n\t_UserName\022\014\n\004tag1\030\001 \001"
      "(\t\022\014\n\004tag2\030\002 \001(\t\022\014\n\004tag3\030\003 \001(\t\022\014\n\004tag4\030\004"
      " \001(\005\022\014\n\004tag5\030\005 \001(\t\022\014\n\004tag8\030\010 \001(\005\022\014\n\004tag9"
      "\030\t \001(\t\"\356\001\n\022VerifyUserResponse\022J\n\004tag1\030\001 "
      "\001(\0132<.com.tencent.mars.microchat.proto.V"
      "erifyUserResponse._Result\032\213\001\n\007_Result\022\014\n"
      "\004code\030\001 \001(\005\022T\n\006result\030\002 \001(\0132D.com.tencen"
      "t.mars.microchat.proto.VerifyUserRespons"
      "e._Result._Result\032\034\n\007_Result\022\021\n\tstrResul"
      "t\030\001 \001(\t"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 767);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "VerifyUser.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_VerifyUser_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUserRequest_LoginInfo::kAesKeyFieldNumber;
const int VerifyUserRequest_LoginInfo::kUinFieldNumber;
const int VerifyUserRequest_LoginInfo::kGuidFieldNumber;
const int VerifyUserRequest_LoginInfo::kClientVerFieldNumber;
const int VerifyUserRequest_LoginInfo::kAndroidVerFieldNumber;
const int VerifyUserRequest_LoginInfo::kUnknown3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUserRequest_LoginInfo::VerifyUserRequest_LoginInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VerifyUser_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
}
VerifyUserRequest_LoginInfo::VerifyUserRequest_LoginInfo(const VerifyUserRequest_LoginInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_aeskey()) {
    aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
  }
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid()) {
    guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
  }
  androidver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_androidver()) {
    androidver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidver_);
  }
  ::memcpy(&uin_, &from.uin_,
    reinterpret_cast<char*>(&unknown3_) -
    reinterpret_cast<char*>(&uin_) + sizeof(unknown3_));
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
}

void VerifyUserRequest_LoginInfo::SharedCtor() {
  _cached_size_ = 0;
  aeskey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uin_, 0, reinterpret_cast<char*>(&unknown3_) -
    reinterpret_cast<char*>(&uin_) + sizeof(unknown3_));
}

VerifyUserRequest_LoginInfo::~VerifyUserRequest_LoginInfo() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  SharedDtor();
}

void VerifyUserRequest_LoginInfo::SharedDtor() {
  aeskey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  androidver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyUserRequest_LoginInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyUserRequest_LoginInfo::descriptor() {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyUserRequest_LoginInfo& VerifyUserRequest_LoginInfo::default_instance() {
  protobuf_VerifyUser_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyUserRequest_LoginInfo* VerifyUserRequest_LoginInfo::New(::google::protobuf::Arena* arena) const {
  VerifyUserRequest_LoginInfo* n = new VerifyUserRequest_LoginInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyUserRequest_LoginInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_aeskey()) {
      GOOGLE_DCHECK(!aeskey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*aeskey_.UnsafeRawStringPointer())->clear();
    }
    if (has_guid()) {
      GOOGLE_DCHECK(!guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_androidver()) {
      GOOGLE_DCHECK(!androidver_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*androidver_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&uin_, 0, reinterpret_cast<char*>(&unknown3_) -
      reinterpret_cast<char*>(&uin_) + sizeof(unknown3_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyUserRequest_LoginInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string aesKey = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aeskey()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->aeskey().data(), this->aeskey().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 uin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_uin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string guid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_guid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->guid().data(), this->guid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 clientVer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_clientver();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientver_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string androidVer = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_androidver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->androidver().data(), this->androidver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 unknown3 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_unknown3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unknown3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  return false;
#undef DO_
}

void VerifyUserRequest_LoginInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string aesKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aeskey().data(), this->aeskey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->aeskey(), output);
  }

  // required int32 uin = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->uin(), output);
  }

  // required string guid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->guid(), output);
  }

  // required int32 clientVer = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->clientver(), output);
  }

  // required string androidVer = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidver().data(), this->androidver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->androidver(), output);
  }

  // required int32 unknown3 = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->unknown3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
}

::google::protobuf::uint8* VerifyUserRequest_LoginInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string aesKey = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->aeskey().data(), this->aeskey().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->aeskey(), target);
  }

  // required int32 uin = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->uin(), target);
  }

  // required string guid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->guid().data(), this->guid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->guid(), target);
  }

  // required int32 clientVer = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->clientver(), target);
  }

  // required string androidVer = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->androidver().data(), this->androidver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->androidver(), target);
  }

  // required int32 unknown3 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->unknown3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  return target;
}

size_t VerifyUserRequest_LoginInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  size_t total_size = 0;

  if (has_aeskey()) {
    // required string aesKey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aeskey());
  }

  if (has_guid()) {
    // required string guid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());
  }

  if (has_androidver()) {
    // required string androidVer = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->androidver());
  }

  if (has_uin()) {
    // required int32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uin());
  }

  if (has_clientver()) {
    // required int32 clientVer = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientver());
  }

  if (has_unknown3()) {
    // required int32 unknown3 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unknown3());
  }

  return total_size;
}
size_t VerifyUserRequest_LoginInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000003f) ^ 0x0000003f) == 0) {  // All required fields are present.
    // required string aesKey = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aeskey());

    // required string guid = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->guid());

    // required string androidVer = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->androidver());

    // required int32 uin = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->uin());

    // required int32 clientVer = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientver());

    // required int32 unknown3 = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unknown3());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyUserRequest_LoginInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUserRequest_LoginInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyUserRequest_LoginInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
    MergeFrom(*source);
  }
}

void VerifyUserRequest_LoginInfo::MergeFrom(const VerifyUserRequest_LoginInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_aeskey();
      aeskey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aeskey_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_guid();
      guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_androidver();
      androidver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.androidver_);
    }
    if (cached_has_bits & 0x00000008u) {
      uin_ = from.uin_;
    }
    if (cached_has_bits & 0x00000010u) {
      clientver_ = from.clientver_;
    }
    if (cached_has_bits & 0x00000020u) {
      unknown3_ = from.unknown3_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyUserRequest_LoginInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUserRequest_LoginInfo::CopyFrom(const VerifyUserRequest_LoginInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUserRequest_LoginInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003f) != 0x0000003f) return false;
  return true;
}

void VerifyUserRequest_LoginInfo::Swap(VerifyUserRequest_LoginInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUserRequest_LoginInfo::InternalSwap(VerifyUserRequest_LoginInfo* other) {
  aeskey_.Swap(&other->aeskey_);
  guid_.Swap(&other->guid_);
  androidver_.Swap(&other->androidver_);
  std::swap(uin_, other->uin_);
  std::swap(clientver_, other->clientver_);
  std::swap(unknown3_, other->unknown3_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyUserRequest_LoginInfo::GetMetadata() const {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyUserRequest_LoginInfo

// required string aesKey = 1;
bool VerifyUserRequest_LoginInfo::has_aeskey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyUserRequest_LoginInfo::set_has_aeskey() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyUserRequest_LoginInfo::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyUserRequest_LoginInfo::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
const ::std::string& VerifyUserRequest_LoginInfo::aeskey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
  return aeskey_.GetNoArena();
}
void VerifyUserRequest_LoginInfo::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
#if LANG_CXX11
void VerifyUserRequest_LoginInfo::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
#endif
void VerifyUserRequest_LoginInfo::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
void VerifyUserRequest_LoginInfo::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
::std::string* VerifyUserRequest_LoginInfo::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest_LoginInfo::release_aeskey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest_LoginInfo::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}

// required int32 uin = 2;
bool VerifyUserRequest_LoginInfo::has_uin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyUserRequest_LoginInfo::set_has_uin() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyUserRequest_LoginInfo::clear_has_uin() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyUserRequest_LoginInfo::clear_uin() {
  uin_ = 0;
  clear_has_uin();
}
::google::protobuf::int32 VerifyUserRequest_LoginInfo::uin() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.uin)
  return uin_;
}
void VerifyUserRequest_LoginInfo::set_uin(::google::protobuf::int32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.uin)
}

// required string guid = 3;
bool VerifyUserRequest_LoginInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyUserRequest_LoginInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyUserRequest_LoginInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyUserRequest_LoginInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
const ::std::string& VerifyUserRequest_LoginInfo::guid() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
  return guid_.GetNoArena();
}
void VerifyUserRequest_LoginInfo::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
#if LANG_CXX11
void VerifyUserRequest_LoginInfo::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
#endif
void VerifyUserRequest_LoginInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
void VerifyUserRequest_LoginInfo::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
::std::string* VerifyUserRequest_LoginInfo::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest_LoginInfo::release_guid() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest_LoginInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}

// required int32 clientVer = 4;
bool VerifyUserRequest_LoginInfo::has_clientver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyUserRequest_LoginInfo::set_has_clientver() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyUserRequest_LoginInfo::clear_has_clientver() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyUserRequest_LoginInfo::clear_clientver() {
  clientver_ = 0;
  clear_has_clientver();
}
::google::protobuf::int32 VerifyUserRequest_LoginInfo::clientver() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.clientVer)
  return clientver_;
}
void VerifyUserRequest_LoginInfo::set_clientver(::google::protobuf::int32 value) {
  set_has_clientver();
  clientver_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.clientVer)
}

// required string androidVer = 5;
bool VerifyUserRequest_LoginInfo::has_androidver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyUserRequest_LoginInfo::set_has_androidver() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyUserRequest_LoginInfo::clear_has_androidver() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyUserRequest_LoginInfo::clear_androidver() {
  androidver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidver();
}
const ::std::string& VerifyUserRequest_LoginInfo::androidver() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
  return androidver_.GetNoArena();
}
void VerifyUserRequest_LoginInfo::set_androidver(const ::std::string& value) {
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
#if LANG_CXX11
void VerifyUserRequest_LoginInfo::set_androidver(::std::string&& value) {
  set_has_androidver();
  androidver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
#endif
void VerifyUserRequest_LoginInfo::set_androidver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
void VerifyUserRequest_LoginInfo::set_androidver(const char* value, size_t size) {
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
::std::string* VerifyUserRequest_LoginInfo::mutable_androidver() {
  set_has_androidver();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
  return androidver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest_LoginInfo::release_androidver() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
  clear_has_androidver();
  return androidver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest_LoginInfo::set_allocated_androidver(::std::string* androidver) {
  if (androidver != NULL) {
    set_has_androidver();
  } else {
    clear_has_androidver();
  }
  androidver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidver);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}

// required int32 unknown3 = 6;
bool VerifyUserRequest_LoginInfo::has_unknown3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void VerifyUserRequest_LoginInfo::set_has_unknown3() {
  _has_bits_[0] |= 0x00000020u;
}
void VerifyUserRequest_LoginInfo::clear_has_unknown3() {
  _has_bits_[0] &= ~0x00000020u;
}
void VerifyUserRequest_LoginInfo::clear_unknown3() {
  unknown3_ = 0;
  clear_has_unknown3();
}
::google::protobuf::int32 VerifyUserRequest_LoginInfo::unknown3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.unknown3)
  return unknown3_;
}
void VerifyUserRequest_LoginInfo::set_unknown3(::google::protobuf::int32 value) {
  set_has_unknown3();
  unknown3_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.unknown3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUserRequest__UserName::kTag1FieldNumber;
const int VerifyUserRequest__UserName::kTag2FieldNumber;
const int VerifyUserRequest__UserName::kTag3FieldNumber;
const int VerifyUserRequest__UserName::kTag4FieldNumber;
const int VerifyUserRequest__UserName::kTag5FieldNumber;
const int VerifyUserRequest__UserName::kTag8FieldNumber;
const int VerifyUserRequest__UserName::kTag9FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUserRequest__UserName::VerifyUserRequest__UserName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VerifyUser_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
}
VerifyUserRequest__UserName::VerifyUserRequest__UserName(const VerifyUserRequest__UserName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag1()) {
    tag1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag1_);
  }
  tag2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag2()) {
    tag2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag2_);
  }
  tag3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag3()) {
    tag3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag3_);
  }
  tag5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag5()) {
    tag5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag5_);
  }
  tag9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag9()) {
    tag9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag9_);
  }
  ::memcpy(&tag4_, &from.tag4_,
    reinterpret_cast<char*>(&tag8_) -
    reinterpret_cast<char*>(&tag4_) + sizeof(tag8_));
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
}

void VerifyUserRequest__UserName::SharedCtor() {
  _cached_size_ = 0;
  tag1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag9_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&tag4_, 0, reinterpret_cast<char*>(&tag8_) -
    reinterpret_cast<char*>(&tag4_) + sizeof(tag8_));
}

VerifyUserRequest__UserName::~VerifyUserRequest__UserName() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  SharedDtor();
}

void VerifyUserRequest__UserName::SharedDtor() {
  tag1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag9_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyUserRequest__UserName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyUserRequest__UserName::descriptor() {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyUserRequest__UserName& VerifyUserRequest__UserName::default_instance() {
  protobuf_VerifyUser_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyUserRequest__UserName* VerifyUserRequest__UserName::New(::google::protobuf::Arena* arena) const {
  VerifyUserRequest__UserName* n = new VerifyUserRequest__UserName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyUserRequest__UserName::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_tag1()) {
      GOOGLE_DCHECK(!tag1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag1_.UnsafeRawStringPointer())->clear();
    }
    if (has_tag2()) {
      GOOGLE_DCHECK(!tag2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag2_.UnsafeRawStringPointer())->clear();
    }
    if (has_tag3()) {
      GOOGLE_DCHECK(!tag3_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag3_.UnsafeRawStringPointer())->clear();
    }
    if (has_tag5()) {
      GOOGLE_DCHECK(!tag5_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag5_.UnsafeRawStringPointer())->clear();
    }
    if (has_tag9()) {
      GOOGLE_DCHECK(!tag9_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag9_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 96u) {
    ::memset(&tag4_, 0, reinterpret_cast<char*>(&tag8_) -
      reinterpret_cast<char*>(&tag4_) + sizeof(tag8_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyUserRequest__UserName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tag1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag1().data(), this->tag1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag2().data(), this->tag2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag3().data(), this->tag3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_tag4();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag5().data(), this->tag5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag8 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_tag8();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag9 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag9()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag9().data(), this->tag9().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  return false;
#undef DO_
}

void VerifyUserRequest__UserName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag1().data(), this->tag1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag1(), output);
  }

  // optional string tag2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag2().data(), this->tag2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag2(), output);
  }

  // optional string tag3 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag3().data(), this->tag3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->tag3(), output);
  }

  // optional int32 tag4 = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->tag4(), output);
  }

  // optional string tag5 = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag5().data(), this->tag5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->tag5(), output);
  }

  // optional int32 tag8 = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->tag8(), output);
  }

  // optional string tag9 = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag9().data(), this->tag9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->tag9(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
}

::google::protobuf::uint8* VerifyUserRequest__UserName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag1().data(), this->tag1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag1(), target);
  }

  // optional string tag2 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag2().data(), this->tag2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag2(), target);
  }

  // optional string tag3 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag3().data(), this->tag3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->tag3(), target);
  }

  // optional int32 tag4 = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->tag4(), target);
  }

  // optional string tag5 = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag5().data(), this->tag5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->tag5(), target);
  }

  // optional int32 tag8 = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->tag8(), target);
  }

  // optional string tag9 = 9;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag9().data(), this->tag9().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->tag9(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  return target;
}

size_t VerifyUserRequest__UserName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string tag1 = 1;
    if (has_tag1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag1());
    }

    // optional string tag2 = 2;
    if (has_tag2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag2());
    }

    // optional string tag3 = 3;
    if (has_tag3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag3());
    }

    // optional string tag5 = 5;
    if (has_tag5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag5());
    }

    // optional string tag9 = 9;
    if (has_tag9()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag9());
    }

    // optional int32 tag4 = 4;
    if (has_tag4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag4());
    }

    // optional int32 tag8 = 8;
    if (has_tag8()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag8());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyUserRequest__UserName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUserRequest__UserName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyUserRequest__UserName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
    MergeFrom(*source);
  }
}

void VerifyUserRequest__UserName::MergeFrom(const VerifyUserRequest__UserName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tag1();
      tag1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag1_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tag2();
      tag2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag2_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_tag3();
      tag3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag3_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_tag5();
      tag5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag5_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_tag9();
      tag9_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag9_);
    }
    if (cached_has_bits & 0x00000020u) {
      tag4_ = from.tag4_;
    }
    if (cached_has_bits & 0x00000040u) {
      tag8_ = from.tag8_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyUserRequest__UserName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUserRequest__UserName::CopyFrom(const VerifyUserRequest__UserName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUserRequest__UserName::IsInitialized() const {
  return true;
}

void VerifyUserRequest__UserName::Swap(VerifyUserRequest__UserName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUserRequest__UserName::InternalSwap(VerifyUserRequest__UserName* other) {
  tag1_.Swap(&other->tag1_);
  tag2_.Swap(&other->tag2_);
  tag3_.Swap(&other->tag3_);
  tag5_.Swap(&other->tag5_);
  tag9_.Swap(&other->tag9_);
  std::swap(tag4_, other->tag4_);
  std::swap(tag8_, other->tag8_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyUserRequest__UserName::GetMetadata() const {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyUserRequest__UserName

// optional string tag1 = 1;
bool VerifyUserRequest__UserName::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyUserRequest__UserName::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyUserRequest__UserName::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyUserRequest__UserName::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
const ::std::string& VerifyUserRequest__UserName::tag1() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
  return tag1_.GetNoArena();
}
void VerifyUserRequest__UserName::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
#if LANG_CXX11
void VerifyUserRequest__UserName::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
#endif
void VerifyUserRequest__UserName::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
void VerifyUserRequest__UserName::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
::std::string* VerifyUserRequest__UserName::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest__UserName::release_tag1() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest__UserName::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}

// optional string tag2 = 2;
bool VerifyUserRequest__UserName::has_tag2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyUserRequest__UserName::set_has_tag2() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyUserRequest__UserName::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyUserRequest__UserName::clear_tag2() {
  tag2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag2();
}
const ::std::string& VerifyUserRequest__UserName::tag2() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
  return tag2_.GetNoArena();
}
void VerifyUserRequest__UserName::set_tag2(const ::std::string& value) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
#if LANG_CXX11
void VerifyUserRequest__UserName::set_tag2(::std::string&& value) {
  set_has_tag2();
  tag2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
#endif
void VerifyUserRequest__UserName::set_tag2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
void VerifyUserRequest__UserName::set_tag2(const char* value, size_t size) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
::std::string* VerifyUserRequest__UserName::mutable_tag2() {
  set_has_tag2();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
  return tag2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest__UserName::release_tag2() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
  clear_has_tag2();
  return tag2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest__UserName::set_allocated_tag2(::std::string* tag2) {
  if (tag2 != NULL) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  tag2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag2);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}

// optional string tag3 = 3;
bool VerifyUserRequest__UserName::has_tag3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyUserRequest__UserName::set_has_tag3() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyUserRequest__UserName::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyUserRequest__UserName::clear_tag3() {
  tag3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag3();
}
const ::std::string& VerifyUserRequest__UserName::tag3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
  return tag3_.GetNoArena();
}
void VerifyUserRequest__UserName::set_tag3(const ::std::string& value) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
#if LANG_CXX11
void VerifyUserRequest__UserName::set_tag3(::std::string&& value) {
  set_has_tag3();
  tag3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
#endif
void VerifyUserRequest__UserName::set_tag3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
void VerifyUserRequest__UserName::set_tag3(const char* value, size_t size) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
::std::string* VerifyUserRequest__UserName::mutable_tag3() {
  set_has_tag3();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
  return tag3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest__UserName::release_tag3() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
  clear_has_tag3();
  return tag3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest__UserName::set_allocated_tag3(::std::string* tag3) {
  if (tag3 != NULL) {
    set_has_tag3();
  } else {
    clear_has_tag3();
  }
  tag3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag3);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}

// optional int32 tag4 = 4;
bool VerifyUserRequest__UserName::has_tag4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void VerifyUserRequest__UserName::set_has_tag4() {
  _has_bits_[0] |= 0x00000020u;
}
void VerifyUserRequest__UserName::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000020u;
}
void VerifyUserRequest__UserName::clear_tag4() {
  tag4_ = 0;
  clear_has_tag4();
}
::google::protobuf::int32 VerifyUserRequest__UserName::tag4() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag4)
  return tag4_;
}
void VerifyUserRequest__UserName::set_tag4(::google::protobuf::int32 value) {
  set_has_tag4();
  tag4_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag4)
}

// optional string tag5 = 5;
bool VerifyUserRequest__UserName::has_tag5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyUserRequest__UserName::set_has_tag5() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyUserRequest__UserName::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyUserRequest__UserName::clear_tag5() {
  tag5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag5();
}
const ::std::string& VerifyUserRequest__UserName::tag5() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
  return tag5_.GetNoArena();
}
void VerifyUserRequest__UserName::set_tag5(const ::std::string& value) {
  set_has_tag5();
  tag5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
#if LANG_CXX11
void VerifyUserRequest__UserName::set_tag5(::std::string&& value) {
  set_has_tag5();
  tag5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
#endif
void VerifyUserRequest__UserName::set_tag5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag5();
  tag5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
void VerifyUserRequest__UserName::set_tag5(const char* value, size_t size) {
  set_has_tag5();
  tag5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
::std::string* VerifyUserRequest__UserName::mutable_tag5() {
  set_has_tag5();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
  return tag5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest__UserName::release_tag5() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
  clear_has_tag5();
  return tag5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest__UserName::set_allocated_tag5(::std::string* tag5) {
  if (tag5 != NULL) {
    set_has_tag5();
  } else {
    clear_has_tag5();
  }
  tag5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag5);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}

// optional int32 tag8 = 8;
bool VerifyUserRequest__UserName::has_tag8() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void VerifyUserRequest__UserName::set_has_tag8() {
  _has_bits_[0] |= 0x00000040u;
}
void VerifyUserRequest__UserName::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000040u;
}
void VerifyUserRequest__UserName::clear_tag8() {
  tag8_ = 0;
  clear_has_tag8();
}
::google::protobuf::int32 VerifyUserRequest__UserName::tag8() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag8)
  return tag8_;
}
void VerifyUserRequest__UserName::set_tag8(::google::protobuf::int32 value) {
  set_has_tag8();
  tag8_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag8)
}

// optional string tag9 = 9;
bool VerifyUserRequest__UserName::has_tag9() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyUserRequest__UserName::set_has_tag9() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyUserRequest__UserName::clear_has_tag9() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyUserRequest__UserName::clear_tag9() {
  tag9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag9();
}
const ::std::string& VerifyUserRequest__UserName::tag9() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
  return tag9_.GetNoArena();
}
void VerifyUserRequest__UserName::set_tag9(const ::std::string& value) {
  set_has_tag9();
  tag9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
#if LANG_CXX11
void VerifyUserRequest__UserName::set_tag9(::std::string&& value) {
  set_has_tag9();
  tag9_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
#endif
void VerifyUserRequest__UserName::set_tag9(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag9();
  tag9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
void VerifyUserRequest__UserName::set_tag9(const char* value, size_t size) {
  set_has_tag9();
  tag9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
::std::string* VerifyUserRequest__UserName::mutable_tag9() {
  set_has_tag9();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
  return tag9_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest__UserName::release_tag9() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
  clear_has_tag9();
  return tag9_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest__UserName::set_allocated_tag9(::std::string* tag9) {
  if (tag9 != NULL) {
    set_has_tag9();
  } else {
    clear_has_tag9();
  }
  tag9_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag9);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUserRequest::kLoginFieldNumber;
const int VerifyUserRequest::kTag2FieldNumber;
const int VerifyUserRequest::kTag3FieldNumber;
const int VerifyUserRequest::kNameFieldNumber;
const int VerifyUserRequest::kContentFieldNumber;
const int VerifyUserRequest::kTag6FieldNumber;
const int VerifyUserRequest::kTag7FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUserRequest::VerifyUserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VerifyUser_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.VerifyUserRequest)
}
VerifyUserRequest::VerifyUserRequest(const VerifyUserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  tag7_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag7()) {
    tag7_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag7_);
  }
  if (from.has_login()) {
    login_ = new ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo(*from.login_);
  } else {
    login_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName(*from.name_);
  } else {
    name_ = NULL;
  }
  ::memcpy(&tag2_, &from.tag2_,
    reinterpret_cast<char*>(&tag6_) -
    reinterpret_cast<char*>(&tag2_) + sizeof(tag6_));
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.VerifyUserRequest)
}

void VerifyUserRequest::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag7_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&login_, 0, reinterpret_cast<char*>(&tag6_) -
    reinterpret_cast<char*>(&login_) + sizeof(tag6_));
}

VerifyUserRequest::~VerifyUserRequest() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.VerifyUserRequest)
  SharedDtor();
}

void VerifyUserRequest::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag7_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete login_;
  }
  if (this != internal_default_instance()) {
    delete name_;
  }
}

void VerifyUserRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyUserRequest::descriptor() {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyUserRequest& VerifyUserRequest::default_instance() {
  protobuf_VerifyUser_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyUserRequest* VerifyUserRequest::New(::google::protobuf::Arena* arena) const {
  VerifyUserRequest* n = new VerifyUserRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_content()) {
      GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*content_.UnsafeRawStringPointer())->clear();
    }
    if (has_tag7()) {
      GOOGLE_DCHECK(!tag7_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag7_.UnsafeRawStringPointer())->clear();
    }
    if (has_login()) {
      GOOGLE_DCHECK(login_ != NULL);
      login_->::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo::Clear();
    }
    if (has_name()) {
      GOOGLE_DCHECK(name_ != NULL);
      name_->::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&tag2_, 0, reinterpret_cast<char*>(&tag6_) -
      reinterpret_cast<char*>(&tag2_) + sizeof(tag6_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyUserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_tag2();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_tag3();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string content = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 tag6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_tag6();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tag6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag7()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag7().data(), this->tag7().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserRequest.tag7");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.VerifyUserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.VerifyUserRequest)
  return false;
#undef DO_
}

void VerifyUserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->login_, output);
  }

  // optional int32 tag2 = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->tag2(), output);
  }

  // optional int32 tag3 = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->tag3(), output);
  }

  // required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->name_, output);
  }

  // optional string content = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->content(), output);
  }

  // optional int32 tag6 = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->tag6(), output);
  }

  // optional string tag7 = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag7().data(), this->tag7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.tag7");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->tag7(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.VerifyUserRequest)
}

::google::protobuf::uint8* VerifyUserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->login_, deterministic, target);
  }

  // optional int32 tag2 = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->tag2(), target);
  }

  // optional int32 tag3 = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->tag3(), target);
  }

  // required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->name_, deterministic, target);
  }

  // optional string content = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->content(), target);
  }

  // optional int32 tag6 = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->tag6(), target);
  }

  // optional string tag7 = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag7().data(), this->tag7().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserRequest.tag7");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->tag7(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.VerifyUserRequest)
  return target;
}

size_t VerifyUserRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  size_t total_size = 0;

  if (has_login()) {
    // required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->login_);
  }

  if (has_name()) {
    // required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);
  }

  return total_size;
}
size_t VerifyUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000c) ^ 0x0000000c) == 0) {  // All required fields are present.
    // required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->login_);

    // required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->name_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string content = 5;
    if (has_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->content());
    }

    // optional string tag7 = 7;
    if (has_tag7()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag7());
    }

  }
  if (_has_bits_[0 / 32] & 112u) {
    // optional int32 tag2 = 2;
    if (has_tag2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag2());
    }

    // optional int32 tag3 = 3;
    if (has_tag3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag3());
    }

    // optional int32 tag6 = 6;
    if (has_tag6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->tag6());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyUserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyUserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.VerifyUserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.VerifyUserRequest)
    MergeFrom(*source);
  }
}

void VerifyUserRequest::MergeFrom(const VerifyUserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tag7();
      tag7_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag7_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_login()->::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo::MergeFrom(from.login());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_name()->::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName::MergeFrom(from.name());
    }
    if (cached_has_bits & 0x00000010u) {
      tag2_ = from.tag2_;
    }
    if (cached_has_bits & 0x00000020u) {
      tag3_ = from.tag3_;
    }
    if (cached_has_bits & 0x00000040u) {
      tag6_ = from.tag6_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyUserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUserRequest::CopyFrom(const VerifyUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUserRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000c) != 0x0000000c) return false;
  if (has_login()) {
    if (!this->login_->IsInitialized()) return false;
  }
  return true;
}

void VerifyUserRequest::Swap(VerifyUserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUserRequest::InternalSwap(VerifyUserRequest* other) {
  content_.Swap(&other->content_);
  tag7_.Swap(&other->tag7_);
  std::swap(login_, other->login_);
  std::swap(name_, other->name_);
  std::swap(tag2_, other->tag2_);
  std::swap(tag3_, other->tag3_);
  std::swap(tag6_, other->tag6_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyUserRequest::GetMetadata() const {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyUserRequest

// required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
bool VerifyUserRequest::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void VerifyUserRequest::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
void VerifyUserRequest::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
void VerifyUserRequest::clear_login() {
  if (login_ != NULL) login_->::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo::Clear();
  clear_has_login();
}
const ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo& VerifyUserRequest::login() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
  return login_ != NULL ? *login_
                         : *::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo::internal_default_instance();
}
::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* VerifyUserRequest::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
  return login_;
}
::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* VerifyUserRequest::release_login() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
  clear_has_login();
  ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
void VerifyUserRequest::set_allocated_login(::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
}

// optional int32 tag2 = 2;
bool VerifyUserRequest::has_tag2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void VerifyUserRequest::set_has_tag2() {
  _has_bits_[0] |= 0x00000010u;
}
void VerifyUserRequest::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000010u;
}
void VerifyUserRequest::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
::google::protobuf::int32 VerifyUserRequest::tag2() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag2)
  return tag2_;
}
void VerifyUserRequest::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag2)
}

// optional int32 tag3 = 3;
bool VerifyUserRequest::has_tag3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void VerifyUserRequest::set_has_tag3() {
  _has_bits_[0] |= 0x00000020u;
}
void VerifyUserRequest::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000020u;
}
void VerifyUserRequest::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
::google::protobuf::int32 VerifyUserRequest::tag3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag3)
  return tag3_;
}
void VerifyUserRequest::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag3)
}

// required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
bool VerifyUserRequest::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void VerifyUserRequest::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
void VerifyUserRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void VerifyUserRequest::clear_name() {
  if (name_ != NULL) name_->::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName::Clear();
  clear_has_name();
}
const ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName& VerifyUserRequest::name() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
  return name_ != NULL ? *name_
                         : *::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName::internal_default_instance();
}
::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* VerifyUserRequest::mutable_name() {
  set_has_name();
  if (name_ == NULL) {
    name_ = new ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
  return name_;
}
::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* VerifyUserRequest::release_name() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
  clear_has_name();
  ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* temp = name_;
  name_ = NULL;
  return temp;
}
void VerifyUserRequest::set_allocated_name(::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
}

// optional string content = 5;
bool VerifyUserRequest::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyUserRequest::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyUserRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyUserRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& VerifyUserRequest::content() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
  return content_.GetNoArena();
}
void VerifyUserRequest::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
#if LANG_CXX11
void VerifyUserRequest::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
#endif
void VerifyUserRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
void VerifyUserRequest::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
::std::string* VerifyUserRequest::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest::release_content() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}

// optional int32 tag6 = 6;
bool VerifyUserRequest::has_tag6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void VerifyUserRequest::set_has_tag6() {
  _has_bits_[0] |= 0x00000040u;
}
void VerifyUserRequest::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000040u;
}
void VerifyUserRequest::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
::google::protobuf::int32 VerifyUserRequest::tag6() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag6)
  return tag6_;
}
void VerifyUserRequest::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag6)
}

// optional string tag7 = 7;
bool VerifyUserRequest::has_tag7() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyUserRequest::set_has_tag7() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyUserRequest::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyUserRequest::clear_tag7() {
  tag7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag7();
}
const ::std::string& VerifyUserRequest::tag7() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
  return tag7_.GetNoArena();
}
void VerifyUserRequest::set_tag7(const ::std::string& value) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
#if LANG_CXX11
void VerifyUserRequest::set_tag7(::std::string&& value) {
  set_has_tag7();
  tag7_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
#endif
void VerifyUserRequest::set_tag7(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
void VerifyUserRequest::set_tag7(const char* value, size_t size) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
::std::string* VerifyUserRequest::mutable_tag7() {
  set_has_tag7();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
  return tag7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserRequest::release_tag7() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
  clear_has_tag7();
  return tag7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserRequest::set_allocated_tag7(::std::string* tag7) {
  if (tag7 != NULL) {
    set_has_tag7();
  } else {
    clear_has_tag7();
  }
  tag7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag7);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUserResponse__Result__Result::kStrResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUserResponse__Result__Result::VerifyUserResponse__Result__Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VerifyUser_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
}
VerifyUserResponse__Result__Result::VerifyUserResponse__Result__Result(const VerifyUserResponse__Result__Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strresult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_strresult()) {
    strresult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strresult_);
  }
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
}

void VerifyUserResponse__Result__Result::SharedCtor() {
  _cached_size_ = 0;
  strresult_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

VerifyUserResponse__Result__Result::~VerifyUserResponse__Result__Result() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  SharedDtor();
}

void VerifyUserResponse__Result__Result::SharedDtor() {
  strresult_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VerifyUserResponse__Result__Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyUserResponse__Result__Result::descriptor() {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyUserResponse__Result__Result& VerifyUserResponse__Result__Result::default_instance() {
  protobuf_VerifyUser_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyUserResponse__Result__Result* VerifyUserResponse__Result__Result::New(::google::protobuf::Arena* arena) const {
  VerifyUserResponse__Result__Result* n = new VerifyUserResponse__Result__Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyUserResponse__Result__Result::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  if (has_strresult()) {
    GOOGLE_DCHECK(!strresult_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*strresult_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyUserResponse__Result__Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string strResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strresult()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strresult().data(), this->strresult().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  return false;
#undef DO_
}

void VerifyUserResponse__Result__Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string strResult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strresult().data(), this->strresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->strresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
}

::google::protobuf::uint8* VerifyUserResponse__Result__Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string strResult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strresult().data(), this->strresult().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->strresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  return target;
}

size_t VerifyUserResponse__Result__Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string strResult = 1;
  if (has_strresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->strresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyUserResponse__Result__Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUserResponse__Result__Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyUserResponse__Result__Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
    MergeFrom(*source);
  }
}

void VerifyUserResponse__Result__Result::MergeFrom(const VerifyUserResponse__Result__Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_strresult()) {
    set_has_strresult();
    strresult_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.strresult_);
  }
}

void VerifyUserResponse__Result__Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUserResponse__Result__Result::CopyFrom(const VerifyUserResponse__Result__Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUserResponse__Result__Result::IsInitialized() const {
  return true;
}

void VerifyUserResponse__Result__Result::Swap(VerifyUserResponse__Result__Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUserResponse__Result__Result::InternalSwap(VerifyUserResponse__Result__Result* other) {
  strresult_.Swap(&other->strresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyUserResponse__Result__Result::GetMetadata() const {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyUserResponse__Result__Result

// optional string strResult = 1;
bool VerifyUserResponse__Result__Result::has_strresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyUserResponse__Result__Result::set_has_strresult() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyUserResponse__Result__Result::clear_has_strresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyUserResponse__Result__Result::clear_strresult() {
  strresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strresult();
}
const ::std::string& VerifyUserResponse__Result__Result::strresult() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
  return strresult_.GetNoArena();
}
void VerifyUserResponse__Result__Result::set_strresult(const ::std::string& value) {
  set_has_strresult();
  strresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
#if LANG_CXX11
void VerifyUserResponse__Result__Result::set_strresult(::std::string&& value) {
  set_has_strresult();
  strresult_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
#endif
void VerifyUserResponse__Result__Result::set_strresult(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strresult();
  strresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
void VerifyUserResponse__Result__Result::set_strresult(const char* value, size_t size) {
  set_has_strresult();
  strresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
::std::string* VerifyUserResponse__Result__Result::mutable_strresult() {
  set_has_strresult();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
  return strresult_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* VerifyUserResponse__Result__Result::release_strresult() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
  clear_has_strresult();
  return strresult_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void VerifyUserResponse__Result__Result::set_allocated_strresult(::std::string* strresult) {
  if (strresult != NULL) {
    set_has_strresult();
  } else {
    clear_has_strresult();
  }
  strresult_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strresult);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUserResponse__Result::kCodeFieldNumber;
const int VerifyUserResponse__Result::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUserResponse__Result::VerifyUserResponse__Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VerifyUser_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
}
VerifyUserResponse__Result::VerifyUserResponse__Result(const VerifyUserResponse__Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result(*from.result_);
  } else {
    result_ = NULL;
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
}

void VerifyUserResponse__Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&result_, 0, reinterpret_cast<char*>(&code_) -
    reinterpret_cast<char*>(&result_) + sizeof(code_));
}

VerifyUserResponse__Result::~VerifyUserResponse__Result() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  SharedDtor();
}

void VerifyUserResponse__Result::SharedDtor() {
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void VerifyUserResponse__Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyUserResponse__Result::descriptor() {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyUserResponse__Result& VerifyUserResponse__Result::default_instance() {
  protobuf_VerifyUser_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyUserResponse__Result* VerifyUserResponse__Result::New(::google::protobuf::Arena* arena) const {
  VerifyUserResponse__Result* n = new VerifyUserResponse__Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyUserResponse__Result::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  if (has_result()) {
    GOOGLE_DCHECK(result_ != NULL);
    result_->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result::Clear();
  }
  code_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyUserResponse__Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  return false;
#undef DO_
}

void VerifyUserResponse__Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result result = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->result_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
}

::google::protobuf::uint8* VerifyUserResponse__Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 code = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result result = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->result_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  return target;
}

size_t VerifyUserResponse__Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->result_);
    }

    // optional int32 code = 1;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyUserResponse__Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUserResponse__Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyUserResponse__Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
    MergeFrom(*source);
  }
}

void VerifyUserResponse__Result::MergeFrom(const VerifyUserResponse__Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_result()->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result::MergeFrom(from.result());
    }
    if (cached_has_bits & 0x00000002u) {
      code_ = from.code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VerifyUserResponse__Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUserResponse__Result::CopyFrom(const VerifyUserResponse__Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUserResponse__Result::IsInitialized() const {
  return true;
}

void VerifyUserResponse__Result::Swap(VerifyUserResponse__Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUserResponse__Result::InternalSwap(VerifyUserResponse__Result* other) {
  std::swap(result_, other->result_);
  std::swap(code_, other->code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyUserResponse__Result::GetMetadata() const {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyUserResponse__Result

// optional int32 code = 1;
bool VerifyUserResponse__Result::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void VerifyUserResponse__Result::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
void VerifyUserResponse__Result::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void VerifyUserResponse__Result::clear_code() {
  code_ = 0;
  clear_has_code();
}
::google::protobuf::int32 VerifyUserResponse__Result::code() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.code)
  return code_;
}
void VerifyUserResponse__Result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.code)
}

// optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result result = 2;
bool VerifyUserResponse__Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyUserResponse__Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyUserResponse__Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyUserResponse__Result::clear_result() {
  if (result_ != NULL) result_->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result::Clear();
  clear_has_result();
}
const ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result& VerifyUserResponse__Result::result() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
  return result_ != NULL ? *result_
                         : *::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result::internal_default_instance();
}
::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* VerifyUserResponse__Result::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
  return result_;
}
::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* VerifyUserResponse__Result::release_result() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
  clear_has_result();
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* temp = result_;
  result_ = NULL;
  return temp;
}
void VerifyUserResponse__Result::set_allocated_result(::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VerifyUserResponse::kTag1FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VerifyUserResponse::VerifyUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_VerifyUser_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:com.tencent.mars.microchat.proto.VerifyUserResponse)
}
VerifyUserResponse::VerifyUserResponse(const VerifyUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tag1()) {
    tag1_ = new ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result(*from.tag1_);
  } else {
    tag1_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:com.tencent.mars.microchat.proto.VerifyUserResponse)
}

void VerifyUserResponse::SharedCtor() {
  _cached_size_ = 0;
  tag1_ = NULL;
}

VerifyUserResponse::~VerifyUserResponse() {
  // @@protoc_insertion_point(destructor:com.tencent.mars.microchat.proto.VerifyUserResponse)
  SharedDtor();
}

void VerifyUserResponse::SharedDtor() {
  if (this != internal_default_instance()) {
    delete tag1_;
  }
}

void VerifyUserResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* VerifyUserResponse::descriptor() {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VerifyUserResponse& VerifyUserResponse::default_instance() {
  protobuf_VerifyUser_2eproto::InitDefaults();
  return *internal_default_instance();
}

VerifyUserResponse* VerifyUserResponse::New(::google::protobuf::Arena* arena) const {
  VerifyUserResponse* n = new VerifyUserResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VerifyUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  if (has_tag1()) {
    GOOGLE_DCHECK(tag1_ != NULL);
    tag1_->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool VerifyUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result tag1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tag1()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:com.tencent.mars.microchat.proto.VerifyUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:com.tencent.mars.microchat.proto.VerifyUserResponse)
  return false;
#undef DO_
}

void VerifyUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result tag1 = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->tag1_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:com.tencent.mars.microchat.proto.VerifyUserResponse)
}

::google::protobuf::uint8* VerifyUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result tag1 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->tag1_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.tencent.mars.microchat.proto.VerifyUserResponse)
  return target;
}

size_t VerifyUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result tag1 = 1;
  if (has_tag1()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->tag1_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VerifyUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const VerifyUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const VerifyUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.tencent.mars.microchat.proto.VerifyUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.tencent.mars.microchat.proto.VerifyUserResponse)
    MergeFrom(*source);
  }
}

void VerifyUserResponse::MergeFrom(const VerifyUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tag1()) {
    mutable_tag1()->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result::MergeFrom(from.tag1());
  }
}

void VerifyUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VerifyUserResponse::CopyFrom(const VerifyUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.tencent.mars.microchat.proto.VerifyUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyUserResponse::IsInitialized() const {
  return true;
}

void VerifyUserResponse::Swap(VerifyUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VerifyUserResponse::InternalSwap(VerifyUserResponse* other) {
  std::swap(tag1_, other->tag1_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata VerifyUserResponse::GetMetadata() const {
  protobuf_VerifyUser_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_VerifyUser_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyUserResponse

// optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result tag1 = 1;
bool VerifyUserResponse::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void VerifyUserResponse::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
void VerifyUserResponse::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
void VerifyUserResponse::clear_tag1() {
  if (tag1_ != NULL) tag1_->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result::Clear();
  clear_has_tag1();
}
const ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result& VerifyUserResponse::tag1() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::com::tencent::mars::microchat::proto::VerifyUserResponse__Result::internal_default_instance();
}
::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* VerifyUserResponse::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
  return tag1_;
}
::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* VerifyUserResponse::release_tag1() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
  clear_has_tag1();
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
void VerifyUserResponse::set_allocated_tag1(::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace microchat
}  // namespace mars
}  // namespace tencent
}  // namespace com

// @@protoc_insertion_point(global_scope)
