// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VerifyUser.proto

#ifndef PROTOBUF_VerifyUser_2eproto__INCLUDED
#define PROTOBUF_VerifyUser_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace com {
namespace tencent {
namespace mars {
namespace microchat {
namespace proto {
class VerifyUserRequest;
class VerifyUserRequestDefaultTypeInternal;
extern VerifyUserRequestDefaultTypeInternal _VerifyUserRequest_default_instance_;
class VerifyUserRequest_LoginInfo;
class VerifyUserRequest_LoginInfoDefaultTypeInternal;
extern VerifyUserRequest_LoginInfoDefaultTypeInternal _VerifyUserRequest_LoginInfo_default_instance_;
class VerifyUserRequest__UserName;
class VerifyUserRequest__UserNameDefaultTypeInternal;
extern VerifyUserRequest__UserNameDefaultTypeInternal _VerifyUserRequest__UserName_default_instance_;
class VerifyUserResponse;
class VerifyUserResponseDefaultTypeInternal;
extern VerifyUserResponseDefaultTypeInternal _VerifyUserResponse_default_instance_;
class VerifyUserResponse__Result;
class VerifyUserResponse__ResultDefaultTypeInternal;
extern VerifyUserResponse__ResultDefaultTypeInternal _VerifyUserResponse__Result_default_instance_;
class VerifyUserResponse__Result__Result;
class VerifyUserResponse__Result__ResultDefaultTypeInternal;
extern VerifyUserResponse__Result__ResultDefaultTypeInternal _VerifyUserResponse__Result__Result_default_instance_;
}  // namespace proto
}  // namespace microchat
}  // namespace mars
}  // namespace tencent
}  // namespace com

namespace com {
namespace tencent {
namespace mars {
namespace microchat {
namespace proto {

namespace protobuf_VerifyUser_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_VerifyUser_2eproto

// ===================================================================

class VerifyUserRequest_LoginInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo) */ {
 public:
  VerifyUserRequest_LoginInfo();
  virtual ~VerifyUserRequest_LoginInfo();

  VerifyUserRequest_LoginInfo(const VerifyUserRequest_LoginInfo& from);

  inline VerifyUserRequest_LoginInfo& operator=(const VerifyUserRequest_LoginInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyUserRequest_LoginInfo& default_instance();

  static inline const VerifyUserRequest_LoginInfo* internal_default_instance() {
    return reinterpret_cast<const VerifyUserRequest_LoginInfo*>(
               &_VerifyUserRequest_LoginInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VerifyUserRequest_LoginInfo* other);

  // implements Message ----------------------------------------------

  inline VerifyUserRequest_LoginInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyUserRequest_LoginInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyUserRequest_LoginInfo& from);
  void MergeFrom(const VerifyUserRequest_LoginInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyUserRequest_LoginInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string aesKey = 1;
  bool has_aeskey() const;
  void clear_aeskey();
  static const int kAesKeyFieldNumber = 1;
  const ::std::string& aeskey() const;
  void set_aeskey(const ::std::string& value);
  #if LANG_CXX11
  void set_aeskey(::std::string&& value);
  #endif
  void set_aeskey(const char* value);
  void set_aeskey(const char* value, size_t size);
  ::std::string* mutable_aeskey();
  ::std::string* release_aeskey();
  void set_allocated_aeskey(::std::string* aeskey);

  // required string guid = 3;
  bool has_guid() const;
  void clear_guid();
  static const int kGuidFieldNumber = 3;
  const ::std::string& guid() const;
  void set_guid(const ::std::string& value);
  #if LANG_CXX11
  void set_guid(::std::string&& value);
  #endif
  void set_guid(const char* value);
  void set_guid(const char* value, size_t size);
  ::std::string* mutable_guid();
  ::std::string* release_guid();
  void set_allocated_guid(::std::string* guid);

  // required string androidVer = 5;
  bool has_androidver() const;
  void clear_androidver();
  static const int kAndroidVerFieldNumber = 5;
  const ::std::string& androidver() const;
  void set_androidver(const ::std::string& value);
  #if LANG_CXX11
  void set_androidver(::std::string&& value);
  #endif
  void set_androidver(const char* value);
  void set_androidver(const char* value, size_t size);
  ::std::string* mutable_androidver();
  ::std::string* release_androidver();
  void set_allocated_androidver(::std::string* androidver);

  // required int32 uin = 2;
  bool has_uin() const;
  void clear_uin();
  static const int kUinFieldNumber = 2;
  ::google::protobuf::int32 uin() const;
  void set_uin(::google::protobuf::int32 value);

  // required int32 clientVer = 4;
  bool has_clientver() const;
  void clear_clientver();
  static const int kClientVerFieldNumber = 4;
  ::google::protobuf::int32 clientver() const;
  void set_clientver(::google::protobuf::int32 value);

  // required int32 unknown3 = 6;
  bool has_unknown3() const;
  void clear_unknown3();
  static const int kUnknown3FieldNumber = 6;
  ::google::protobuf::int32 unknown3() const;
  void set_unknown3(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo)
 private:
  void set_has_aeskey();
  void clear_has_aeskey();
  void set_has_uin();
  void clear_has_uin();
  void set_has_guid();
  void clear_has_guid();
  void set_has_clientver();
  void clear_has_clientver();
  void set_has_androidver();
  void clear_has_androidver();
  void set_has_unknown3();
  void clear_has_unknown3();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr aeskey_;
  ::google::protobuf::internal::ArenaStringPtr guid_;
  ::google::protobuf::internal::ArenaStringPtr androidver_;
  ::google::protobuf::int32 uin_;
  ::google::protobuf::int32 clientver_;
  ::google::protobuf::int32 unknown3_;
  friend struct protobuf_VerifyUser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyUserRequest__UserName : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName) */ {
 public:
  VerifyUserRequest__UserName();
  virtual ~VerifyUserRequest__UserName();

  VerifyUserRequest__UserName(const VerifyUserRequest__UserName& from);

  inline VerifyUserRequest__UserName& operator=(const VerifyUserRequest__UserName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyUserRequest__UserName& default_instance();

  static inline const VerifyUserRequest__UserName* internal_default_instance() {
    return reinterpret_cast<const VerifyUserRequest__UserName*>(
               &_VerifyUserRequest__UserName_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(VerifyUserRequest__UserName* other);

  // implements Message ----------------------------------------------

  inline VerifyUserRequest__UserName* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyUserRequest__UserName* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyUserRequest__UserName& from);
  void MergeFrom(const VerifyUserRequest__UserName& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyUserRequest__UserName* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::std::string& tag1() const;
  void set_tag1(const ::std::string& value);
  #if LANG_CXX11
  void set_tag1(::std::string&& value);
  #endif
  void set_tag1(const char* value);
  void set_tag1(const char* value, size_t size);
  ::std::string* mutable_tag1();
  ::std::string* release_tag1();
  void set_allocated_tag1(::std::string* tag1);

  // optional string tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  const ::std::string& tag2() const;
  void set_tag2(const ::std::string& value);
  #if LANG_CXX11
  void set_tag2(::std::string&& value);
  #endif
  void set_tag2(const char* value);
  void set_tag2(const char* value, size_t size);
  ::std::string* mutable_tag2();
  ::std::string* release_tag2();
  void set_allocated_tag2(::std::string* tag2);

  // optional string tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  const ::std::string& tag3() const;
  void set_tag3(const ::std::string& value);
  #if LANG_CXX11
  void set_tag3(::std::string&& value);
  #endif
  void set_tag3(const char* value);
  void set_tag3(const char* value, size_t size);
  ::std::string* mutable_tag3();
  ::std::string* release_tag3();
  void set_allocated_tag3(::std::string* tag3);

  // optional string tag5 = 5;
  bool has_tag5() const;
  void clear_tag5();
  static const int kTag5FieldNumber = 5;
  const ::std::string& tag5() const;
  void set_tag5(const ::std::string& value);
  #if LANG_CXX11
  void set_tag5(::std::string&& value);
  #endif
  void set_tag5(const char* value);
  void set_tag5(const char* value, size_t size);
  ::std::string* mutable_tag5();
  ::std::string* release_tag5();
  void set_allocated_tag5(::std::string* tag5);

  // optional string tag9 = 9;
  bool has_tag9() const;
  void clear_tag9();
  static const int kTag9FieldNumber = 9;
  const ::std::string& tag9() const;
  void set_tag9(const ::std::string& value);
  #if LANG_CXX11
  void set_tag9(::std::string&& value);
  #endif
  void set_tag9(const char* value);
  void set_tag9(const char* value, size_t size);
  ::std::string* mutable_tag9();
  ::std::string* release_tag9();
  void set_allocated_tag9(::std::string* tag9);

  // optional int32 tag4 = 4;
  bool has_tag4() const;
  void clear_tag4();
  static const int kTag4FieldNumber = 4;
  ::google::protobuf::int32 tag4() const;
  void set_tag4(::google::protobuf::int32 value);

  // optional int32 tag8 = 8;
  bool has_tag8() const;
  void clear_tag8();
  static const int kTag8FieldNumber = 8;
  ::google::protobuf::int32 tag8() const;
  void set_tag8(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName)
 private:
  void set_has_tag1();
  void clear_has_tag1();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_tag4();
  void clear_has_tag4();
  void set_has_tag5();
  void clear_has_tag5();
  void set_has_tag8();
  void clear_has_tag8();
  void set_has_tag9();
  void clear_has_tag9();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tag1_;
  ::google::protobuf::internal::ArenaStringPtr tag2_;
  ::google::protobuf::internal::ArenaStringPtr tag3_;
  ::google::protobuf::internal::ArenaStringPtr tag5_;
  ::google::protobuf::internal::ArenaStringPtr tag9_;
  ::google::protobuf::int32 tag4_;
  ::google::protobuf::int32 tag8_;
  friend struct protobuf_VerifyUser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyUserRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.VerifyUserRequest) */ {
 public:
  VerifyUserRequest();
  virtual ~VerifyUserRequest();

  VerifyUserRequest(const VerifyUserRequest& from);

  inline VerifyUserRequest& operator=(const VerifyUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyUserRequest& default_instance();

  static inline const VerifyUserRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyUserRequest*>(
               &_VerifyUserRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(VerifyUserRequest* other);

  // implements Message ----------------------------------------------

  inline VerifyUserRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyUserRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyUserRequest& from);
  void MergeFrom(const VerifyUserRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyUserRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VerifyUserRequest_LoginInfo LoginInfo;
  typedef VerifyUserRequest__UserName _UserName;

  // accessors -------------------------------------------------------

  // optional string content = 5;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 5;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // optional string tag7 = 7;
  bool has_tag7() const;
  void clear_tag7();
  static const int kTag7FieldNumber = 7;
  const ::std::string& tag7() const;
  void set_tag7(const ::std::string& value);
  #if LANG_CXX11
  void set_tag7(::std::string&& value);
  #endif
  void set_tag7(const char* value);
  void set_tag7(const char* value, size_t size);
  ::std::string* mutable_tag7();
  ::std::string* release_tag7();
  void set_allocated_tag7(::std::string* tag7);

  // required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo& login() const;
  ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* mutable_login();
  ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* release_login();
  void set_allocated_login(::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* login);

  // required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 4;
  const ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName& name() const;
  ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* mutable_name();
  ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* release_name();
  void set_allocated_name(::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* name);

  // optional int32 tag2 = 2;
  bool has_tag2() const;
  void clear_tag2();
  static const int kTag2FieldNumber = 2;
  ::google::protobuf::int32 tag2() const;
  void set_tag2(::google::protobuf::int32 value);

  // optional int32 tag3 = 3;
  bool has_tag3() const;
  void clear_tag3();
  static const int kTag3FieldNumber = 3;
  ::google::protobuf::int32 tag3() const;
  void set_tag3(::google::protobuf::int32 value);

  // optional int32 tag6 = 6;
  bool has_tag6() const;
  void clear_tag6();
  static const int kTag6FieldNumber = 6;
  ::google::protobuf::int32 tag6() const;
  void set_tag6(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.VerifyUserRequest)
 private:
  void set_has_login();
  void clear_has_login();
  void set_has_tag2();
  void clear_has_tag2();
  void set_has_tag3();
  void clear_has_tag3();
  void set_has_name();
  void clear_has_name();
  void set_has_content();
  void clear_has_content();
  void set_has_tag6();
  void clear_has_tag6();
  void set_has_tag7();
  void clear_has_tag7();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::internal::ArenaStringPtr tag7_;
  ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* login_;
  ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* name_;
  ::google::protobuf::int32 tag2_;
  ::google::protobuf::int32 tag3_;
  ::google::protobuf::int32 tag6_;
  friend struct protobuf_VerifyUser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyUserResponse__Result__Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result) */ {
 public:
  VerifyUserResponse__Result__Result();
  virtual ~VerifyUserResponse__Result__Result();

  VerifyUserResponse__Result__Result(const VerifyUserResponse__Result__Result& from);

  inline VerifyUserResponse__Result__Result& operator=(const VerifyUserResponse__Result__Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyUserResponse__Result__Result& default_instance();

  static inline const VerifyUserResponse__Result__Result* internal_default_instance() {
    return reinterpret_cast<const VerifyUserResponse__Result__Result*>(
               &_VerifyUserResponse__Result__Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(VerifyUserResponse__Result__Result* other);

  // implements Message ----------------------------------------------

  inline VerifyUserResponse__Result__Result* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyUserResponse__Result__Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyUserResponse__Result__Result& from);
  void MergeFrom(const VerifyUserResponse__Result__Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyUserResponse__Result__Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strResult = 1;
  bool has_strresult() const;
  void clear_strresult();
  static const int kStrResultFieldNumber = 1;
  const ::std::string& strresult() const;
  void set_strresult(const ::std::string& value);
  #if LANG_CXX11
  void set_strresult(::std::string&& value);
  #endif
  void set_strresult(const char* value);
  void set_strresult(const char* value, size_t size);
  ::std::string* mutable_strresult();
  ::std::string* release_strresult();
  void set_allocated_strresult(::std::string* strresult);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result)
 private:
  void set_has_strresult();
  void clear_has_strresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strresult_;
  friend struct protobuf_VerifyUser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyUserResponse__Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.VerifyUserResponse._Result) */ {
 public:
  VerifyUserResponse__Result();
  virtual ~VerifyUserResponse__Result();

  VerifyUserResponse__Result(const VerifyUserResponse__Result& from);

  inline VerifyUserResponse__Result& operator=(const VerifyUserResponse__Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyUserResponse__Result& default_instance();

  static inline const VerifyUserResponse__Result* internal_default_instance() {
    return reinterpret_cast<const VerifyUserResponse__Result*>(
               &_VerifyUserResponse__Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(VerifyUserResponse__Result* other);

  // implements Message ----------------------------------------------

  inline VerifyUserResponse__Result* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyUserResponse__Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyUserResponse__Result& from);
  void MergeFrom(const VerifyUserResponse__Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyUserResponse__Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VerifyUserResponse__Result__Result _Result;

  // accessors -------------------------------------------------------

  // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  const ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result& result() const;
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* mutable_result();
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* release_result();
  void set_allocated_result(::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* result);

  // optional int32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::int32 code() const;
  void set_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.VerifyUserResponse._Result)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* result_;
  ::google::protobuf::int32 code_;
  friend struct protobuf_VerifyUser_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class VerifyUserResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.tencent.mars.microchat.proto.VerifyUserResponse) */ {
 public:
  VerifyUserResponse();
  virtual ~VerifyUserResponse();

  VerifyUserResponse(const VerifyUserResponse& from);

  inline VerifyUserResponse& operator=(const VerifyUserResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const VerifyUserResponse& default_instance();

  static inline const VerifyUserResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyUserResponse*>(
               &_VerifyUserResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(VerifyUserResponse* other);

  // implements Message ----------------------------------------------

  inline VerifyUserResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  VerifyUserResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VerifyUserResponse& from);
  void MergeFrom(const VerifyUserResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VerifyUserResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef VerifyUserResponse__Result _Result;

  // accessors -------------------------------------------------------

  // optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result tag1 = 1;
  bool has_tag1() const;
  void clear_tag1();
  static const int kTag1FieldNumber = 1;
  const ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result& tag1() const;
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* mutable_tag1();
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* release_tag1();
  void set_allocated_tag1(::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* tag1);

  // @@protoc_insertion_point(class_scope:com.tencent.mars.microchat.proto.VerifyUserResponse)
 private:
  void set_has_tag1();
  void clear_has_tag1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* tag1_;
  friend struct protobuf_VerifyUser_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// VerifyUserRequest_LoginInfo

// required string aesKey = 1;
inline bool VerifyUserRequest_LoginInfo::has_aeskey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyUserRequest_LoginInfo::set_has_aeskey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyUserRequest_LoginInfo::clear_has_aeskey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyUserRequest_LoginInfo::clear_aeskey() {
  aeskey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_aeskey();
}
inline const ::std::string& VerifyUserRequest_LoginInfo::aeskey() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
  return aeskey_.GetNoArena();
}
inline void VerifyUserRequest_LoginInfo::set_aeskey(const ::std::string& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
#if LANG_CXX11
inline void VerifyUserRequest_LoginInfo::set_aeskey(::std::string&& value) {
  set_has_aeskey();
  aeskey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
#endif
inline void VerifyUserRequest_LoginInfo::set_aeskey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
inline void VerifyUserRequest_LoginInfo::set_aeskey(const char* value, size_t size) {
  set_has_aeskey();
  aeskey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}
inline ::std::string* VerifyUserRequest_LoginInfo::mutable_aeskey() {
  set_has_aeskey();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
  return aeskey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest_LoginInfo::release_aeskey() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
  clear_has_aeskey();
  return aeskey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest_LoginInfo::set_allocated_aeskey(::std::string* aeskey) {
  if (aeskey != NULL) {
    set_has_aeskey();
  } else {
    clear_has_aeskey();
  }
  aeskey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), aeskey);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.aesKey)
}

// required int32 uin = 2;
inline bool VerifyUserRequest_LoginInfo::has_uin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyUserRequest_LoginInfo::set_has_uin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyUserRequest_LoginInfo::clear_has_uin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyUserRequest_LoginInfo::clear_uin() {
  uin_ = 0;
  clear_has_uin();
}
inline ::google::protobuf::int32 VerifyUserRequest_LoginInfo::uin() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.uin)
  return uin_;
}
inline void VerifyUserRequest_LoginInfo::set_uin(::google::protobuf::int32 value) {
  set_has_uin();
  uin_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.uin)
}

// required string guid = 3;
inline bool VerifyUserRequest_LoginInfo::has_guid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyUserRequest_LoginInfo::set_has_guid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyUserRequest_LoginInfo::clear_has_guid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyUserRequest_LoginInfo::clear_guid() {
  guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid();
}
inline const ::std::string& VerifyUserRequest_LoginInfo::guid() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
  return guid_.GetNoArena();
}
inline void VerifyUserRequest_LoginInfo::set_guid(const ::std::string& value) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
#if LANG_CXX11
inline void VerifyUserRequest_LoginInfo::set_guid(::std::string&& value) {
  set_has_guid();
  guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
#endif
inline void VerifyUserRequest_LoginInfo::set_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
inline void VerifyUserRequest_LoginInfo::set_guid(const char* value, size_t size) {
  set_has_guid();
  guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}
inline ::std::string* VerifyUserRequest_LoginInfo::mutable_guid() {
  set_has_guid();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
  return guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest_LoginInfo::release_guid() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
  clear_has_guid();
  return guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest_LoginInfo::set_allocated_guid(::std::string* guid) {
  if (guid != NULL) {
    set_has_guid();
  } else {
    clear_has_guid();
  }
  guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.guid)
}

// required int32 clientVer = 4;
inline bool VerifyUserRequest_LoginInfo::has_clientver() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyUserRequest_LoginInfo::set_has_clientver() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyUserRequest_LoginInfo::clear_has_clientver() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyUserRequest_LoginInfo::clear_clientver() {
  clientver_ = 0;
  clear_has_clientver();
}
inline ::google::protobuf::int32 VerifyUserRequest_LoginInfo::clientver() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.clientVer)
  return clientver_;
}
inline void VerifyUserRequest_LoginInfo::set_clientver(::google::protobuf::int32 value) {
  set_has_clientver();
  clientver_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.clientVer)
}

// required string androidVer = 5;
inline bool VerifyUserRequest_LoginInfo::has_androidver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyUserRequest_LoginInfo::set_has_androidver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyUserRequest_LoginInfo::clear_has_androidver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyUserRequest_LoginInfo::clear_androidver() {
  androidver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_androidver();
}
inline const ::std::string& VerifyUserRequest_LoginInfo::androidver() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
  return androidver_.GetNoArena();
}
inline void VerifyUserRequest_LoginInfo::set_androidver(const ::std::string& value) {
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
#if LANG_CXX11
inline void VerifyUserRequest_LoginInfo::set_androidver(::std::string&& value) {
  set_has_androidver();
  androidver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
#endif
inline void VerifyUserRequest_LoginInfo::set_androidver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
inline void VerifyUserRequest_LoginInfo::set_androidver(const char* value, size_t size) {
  set_has_androidver();
  androidver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}
inline ::std::string* VerifyUserRequest_LoginInfo::mutable_androidver() {
  set_has_androidver();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
  return androidver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest_LoginInfo::release_androidver() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
  clear_has_androidver();
  return androidver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest_LoginInfo::set_allocated_androidver(::std::string* androidver) {
  if (androidver != NULL) {
    set_has_androidver();
  } else {
    clear_has_androidver();
  }
  androidver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), androidver);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.androidVer)
}

// required int32 unknown3 = 6;
inline bool VerifyUserRequest_LoginInfo::has_unknown3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VerifyUserRequest_LoginInfo::set_has_unknown3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VerifyUserRequest_LoginInfo::clear_has_unknown3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VerifyUserRequest_LoginInfo::clear_unknown3() {
  unknown3_ = 0;
  clear_has_unknown3();
}
inline ::google::protobuf::int32 VerifyUserRequest_LoginInfo::unknown3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.unknown3)
  return unknown3_;
}
inline void VerifyUserRequest_LoginInfo::set_unknown3(::google::protobuf::int32 value) {
  set_has_unknown3();
  unknown3_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo.unknown3)
}

// -------------------------------------------------------------------

// VerifyUserRequest__UserName

// optional string tag1 = 1;
inline bool VerifyUserRequest__UserName::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyUserRequest__UserName::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyUserRequest__UserName::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyUserRequest__UserName::clear_tag1() {
  tag1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag1();
}
inline const ::std::string& VerifyUserRequest__UserName::tag1() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
  return tag1_.GetNoArena();
}
inline void VerifyUserRequest__UserName::set_tag1(const ::std::string& value) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
#if LANG_CXX11
inline void VerifyUserRequest__UserName::set_tag1(::std::string&& value) {
  set_has_tag1();
  tag1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
#endif
inline void VerifyUserRequest__UserName::set_tag1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
inline void VerifyUserRequest__UserName::set_tag1(const char* value, size_t size) {
  set_has_tag1();
  tag1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}
inline ::std::string* VerifyUserRequest__UserName::mutable_tag1() {
  set_has_tag1();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
  return tag1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest__UserName::release_tag1() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
  clear_has_tag1();
  return tag1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest__UserName::set_allocated_tag1(::std::string* tag1) {
  if (tag1 != NULL) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  tag1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag1);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag1)
}

// optional string tag2 = 2;
inline bool VerifyUserRequest__UserName::has_tag2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyUserRequest__UserName::set_has_tag2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyUserRequest__UserName::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyUserRequest__UserName::clear_tag2() {
  tag2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag2();
}
inline const ::std::string& VerifyUserRequest__UserName::tag2() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
  return tag2_.GetNoArena();
}
inline void VerifyUserRequest__UserName::set_tag2(const ::std::string& value) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
#if LANG_CXX11
inline void VerifyUserRequest__UserName::set_tag2(::std::string&& value) {
  set_has_tag2();
  tag2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
#endif
inline void VerifyUserRequest__UserName::set_tag2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
inline void VerifyUserRequest__UserName::set_tag2(const char* value, size_t size) {
  set_has_tag2();
  tag2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}
inline ::std::string* VerifyUserRequest__UserName::mutable_tag2() {
  set_has_tag2();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
  return tag2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest__UserName::release_tag2() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
  clear_has_tag2();
  return tag2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest__UserName::set_allocated_tag2(::std::string* tag2) {
  if (tag2 != NULL) {
    set_has_tag2();
  } else {
    clear_has_tag2();
  }
  tag2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag2);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag2)
}

// optional string tag3 = 3;
inline bool VerifyUserRequest__UserName::has_tag3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyUserRequest__UserName::set_has_tag3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyUserRequest__UserName::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyUserRequest__UserName::clear_tag3() {
  tag3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag3();
}
inline const ::std::string& VerifyUserRequest__UserName::tag3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
  return tag3_.GetNoArena();
}
inline void VerifyUserRequest__UserName::set_tag3(const ::std::string& value) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
#if LANG_CXX11
inline void VerifyUserRequest__UserName::set_tag3(::std::string&& value) {
  set_has_tag3();
  tag3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
#endif
inline void VerifyUserRequest__UserName::set_tag3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
inline void VerifyUserRequest__UserName::set_tag3(const char* value, size_t size) {
  set_has_tag3();
  tag3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}
inline ::std::string* VerifyUserRequest__UserName::mutable_tag3() {
  set_has_tag3();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
  return tag3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest__UserName::release_tag3() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
  clear_has_tag3();
  return tag3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest__UserName::set_allocated_tag3(::std::string* tag3) {
  if (tag3 != NULL) {
    set_has_tag3();
  } else {
    clear_has_tag3();
  }
  tag3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag3);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag3)
}

// optional int32 tag4 = 4;
inline bool VerifyUserRequest__UserName::has_tag4() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VerifyUserRequest__UserName::set_has_tag4() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VerifyUserRequest__UserName::clear_has_tag4() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VerifyUserRequest__UserName::clear_tag4() {
  tag4_ = 0;
  clear_has_tag4();
}
inline ::google::protobuf::int32 VerifyUserRequest__UserName::tag4() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag4)
  return tag4_;
}
inline void VerifyUserRequest__UserName::set_tag4(::google::protobuf::int32 value) {
  set_has_tag4();
  tag4_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag4)
}

// optional string tag5 = 5;
inline bool VerifyUserRequest__UserName::has_tag5() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyUserRequest__UserName::set_has_tag5() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyUserRequest__UserName::clear_has_tag5() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyUserRequest__UserName::clear_tag5() {
  tag5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag5();
}
inline const ::std::string& VerifyUserRequest__UserName::tag5() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
  return tag5_.GetNoArena();
}
inline void VerifyUserRequest__UserName::set_tag5(const ::std::string& value) {
  set_has_tag5();
  tag5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
#if LANG_CXX11
inline void VerifyUserRequest__UserName::set_tag5(::std::string&& value) {
  set_has_tag5();
  tag5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
#endif
inline void VerifyUserRequest__UserName::set_tag5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag5();
  tag5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
inline void VerifyUserRequest__UserName::set_tag5(const char* value, size_t size) {
  set_has_tag5();
  tag5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}
inline ::std::string* VerifyUserRequest__UserName::mutable_tag5() {
  set_has_tag5();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
  return tag5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest__UserName::release_tag5() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
  clear_has_tag5();
  return tag5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest__UserName::set_allocated_tag5(::std::string* tag5) {
  if (tag5 != NULL) {
    set_has_tag5();
  } else {
    clear_has_tag5();
  }
  tag5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag5);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag5)
}

// optional int32 tag8 = 8;
inline bool VerifyUserRequest__UserName::has_tag8() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VerifyUserRequest__UserName::set_has_tag8() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VerifyUserRequest__UserName::clear_has_tag8() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VerifyUserRequest__UserName::clear_tag8() {
  tag8_ = 0;
  clear_has_tag8();
}
inline ::google::protobuf::int32 VerifyUserRequest__UserName::tag8() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag8)
  return tag8_;
}
inline void VerifyUserRequest__UserName::set_tag8(::google::protobuf::int32 value) {
  set_has_tag8();
  tag8_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag8)
}

// optional string tag9 = 9;
inline bool VerifyUserRequest__UserName::has_tag9() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyUserRequest__UserName::set_has_tag9() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyUserRequest__UserName::clear_has_tag9() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyUserRequest__UserName::clear_tag9() {
  tag9_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag9();
}
inline const ::std::string& VerifyUserRequest__UserName::tag9() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
  return tag9_.GetNoArena();
}
inline void VerifyUserRequest__UserName::set_tag9(const ::std::string& value) {
  set_has_tag9();
  tag9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
#if LANG_CXX11
inline void VerifyUserRequest__UserName::set_tag9(::std::string&& value) {
  set_has_tag9();
  tag9_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
#endif
inline void VerifyUserRequest__UserName::set_tag9(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag9();
  tag9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
inline void VerifyUserRequest__UserName::set_tag9(const char* value, size_t size) {
  set_has_tag9();
  tag9_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}
inline ::std::string* VerifyUserRequest__UserName::mutable_tag9() {
  set_has_tag9();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
  return tag9_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest__UserName::release_tag9() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
  clear_has_tag9();
  return tag9_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest__UserName::set_allocated_tag9(::std::string* tag9) {
  if (tag9 != NULL) {
    set_has_tag9();
  } else {
    clear_has_tag9();
  }
  tag9_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag9);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest._UserName.tag9)
}

// -------------------------------------------------------------------

// VerifyUserRequest

// required .com.tencent.mars.microchat.proto.VerifyUserRequest.LoginInfo login = 1;
inline bool VerifyUserRequest::has_login() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void VerifyUserRequest::set_has_login() {
  _has_bits_[0] |= 0x00000004u;
}
inline void VerifyUserRequest::clear_has_login() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void VerifyUserRequest::clear_login() {
  if (login_ != NULL) login_->::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo::Clear();
  clear_has_login();
}
inline const ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo& VerifyUserRequest::login() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
  return login_ != NULL ? *login_
                         : *::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* VerifyUserRequest::mutable_login() {
  set_has_login();
  if (login_ == NULL) {
    login_ = new ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
  return login_;
}
inline ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* VerifyUserRequest::release_login() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
  clear_has_login();
  ::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* temp = login_;
  login_ = NULL;
  return temp;
}
inline void VerifyUserRequest::set_allocated_login(::com::tencent::mars::microchat::proto::VerifyUserRequest_LoginInfo* login) {
  delete login_;
  login_ = login;
  if (login) {
    set_has_login();
  } else {
    clear_has_login();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.login)
}

// optional int32 tag2 = 2;
inline bool VerifyUserRequest::has_tag2() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void VerifyUserRequest::set_has_tag2() {
  _has_bits_[0] |= 0x00000010u;
}
inline void VerifyUserRequest::clear_has_tag2() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void VerifyUserRequest::clear_tag2() {
  tag2_ = 0;
  clear_has_tag2();
}
inline ::google::protobuf::int32 VerifyUserRequest::tag2() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag2)
  return tag2_;
}
inline void VerifyUserRequest::set_tag2(::google::protobuf::int32 value) {
  set_has_tag2();
  tag2_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag2)
}

// optional int32 tag3 = 3;
inline bool VerifyUserRequest::has_tag3() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void VerifyUserRequest::set_has_tag3() {
  _has_bits_[0] |= 0x00000020u;
}
inline void VerifyUserRequest::clear_has_tag3() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void VerifyUserRequest::clear_tag3() {
  tag3_ = 0;
  clear_has_tag3();
}
inline ::google::protobuf::int32 VerifyUserRequest::tag3() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag3)
  return tag3_;
}
inline void VerifyUserRequest::set_tag3(::google::protobuf::int32 value) {
  set_has_tag3();
  tag3_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag3)
}

// required .com.tencent.mars.microchat.proto.VerifyUserRequest._UserName name = 4;
inline bool VerifyUserRequest::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void VerifyUserRequest::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void VerifyUserRequest::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void VerifyUserRequest::clear_name() {
  if (name_ != NULL) name_->::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName::Clear();
  clear_has_name();
}
inline const ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName& VerifyUserRequest::name() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
  return name_ != NULL ? *name_
                         : *::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* VerifyUserRequest::mutable_name() {
  set_has_name();
  if (name_ == NULL) {
    name_ = new ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
  return name_;
}
inline ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* VerifyUserRequest::release_name() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
  clear_has_name();
  ::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* temp = name_;
  name_ = NULL;
  return temp;
}
inline void VerifyUserRequest::set_allocated_name(::com::tencent::mars::microchat::proto::VerifyUserRequest__UserName* name) {
  delete name_;
  name_ = name;
  if (name) {
    set_has_name();
  } else {
    clear_has_name();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.name)
}

// optional string content = 5;
inline bool VerifyUserRequest::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyUserRequest::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyUserRequest::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyUserRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& VerifyUserRequest::content() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
  return content_.GetNoArena();
}
inline void VerifyUserRequest::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
#if LANG_CXX11
inline void VerifyUserRequest::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
#endif
inline void VerifyUserRequest::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
inline void VerifyUserRequest::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}
inline ::std::string* VerifyUserRequest::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest::release_content() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.content)
}

// optional int32 tag6 = 6;
inline bool VerifyUserRequest::has_tag6() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void VerifyUserRequest::set_has_tag6() {
  _has_bits_[0] |= 0x00000040u;
}
inline void VerifyUserRequest::clear_has_tag6() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void VerifyUserRequest::clear_tag6() {
  tag6_ = 0;
  clear_has_tag6();
}
inline ::google::protobuf::int32 VerifyUserRequest::tag6() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag6)
  return tag6_;
}
inline void VerifyUserRequest::set_tag6(::google::protobuf::int32 value) {
  set_has_tag6();
  tag6_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag6)
}

// optional string tag7 = 7;
inline bool VerifyUserRequest::has_tag7() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyUserRequest::set_has_tag7() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyUserRequest::clear_has_tag7() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyUserRequest::clear_tag7() {
  tag7_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag7();
}
inline const ::std::string& VerifyUserRequest::tag7() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
  return tag7_.GetNoArena();
}
inline void VerifyUserRequest::set_tag7(const ::std::string& value) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
#if LANG_CXX11
inline void VerifyUserRequest::set_tag7(::std::string&& value) {
  set_has_tag7();
  tag7_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
#endif
inline void VerifyUserRequest::set_tag7(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
inline void VerifyUserRequest::set_tag7(const char* value, size_t size) {
  set_has_tag7();
  tag7_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}
inline ::std::string* VerifyUserRequest::mutable_tag7() {
  set_has_tag7();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
  return tag7_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserRequest::release_tag7() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
  clear_has_tag7();
  return tag7_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserRequest::set_allocated_tag7(::std::string* tag7) {
  if (tag7 != NULL) {
    set_has_tag7();
  } else {
    clear_has_tag7();
  }
  tag7_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag7);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserRequest.tag7)
}

// -------------------------------------------------------------------

// VerifyUserResponse__Result__Result

// optional string strResult = 1;
inline bool VerifyUserResponse__Result__Result::has_strresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyUserResponse__Result__Result::set_has_strresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyUserResponse__Result__Result::clear_has_strresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyUserResponse__Result__Result::clear_strresult() {
  strresult_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strresult();
}
inline const ::std::string& VerifyUserResponse__Result__Result::strresult() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
  return strresult_.GetNoArena();
}
inline void VerifyUserResponse__Result__Result::set_strresult(const ::std::string& value) {
  set_has_strresult();
  strresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
#if LANG_CXX11
inline void VerifyUserResponse__Result__Result::set_strresult(::std::string&& value) {
  set_has_strresult();
  strresult_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
#endif
inline void VerifyUserResponse__Result__Result::set_strresult(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strresult();
  strresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
inline void VerifyUserResponse__Result__Result::set_strresult(const char* value, size_t size) {
  set_has_strresult();
  strresult_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}
inline ::std::string* VerifyUserResponse__Result__Result::mutable_strresult() {
  set_has_strresult();
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
  return strresult_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VerifyUserResponse__Result__Result::release_strresult() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
  clear_has_strresult();
  return strresult_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VerifyUserResponse__Result__Result::set_allocated_strresult(::std::string* strresult) {
  if (strresult != NULL) {
    set_has_strresult();
  } else {
    clear_has_strresult();
  }
  strresult_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strresult);
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result.strResult)
}

// -------------------------------------------------------------------

// VerifyUserResponse__Result

// optional int32 code = 1;
inline bool VerifyUserResponse__Result::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void VerifyUserResponse__Result::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void VerifyUserResponse__Result::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void VerifyUserResponse__Result::clear_code() {
  code_ = 0;
  clear_has_code();
}
inline ::google::protobuf::int32 VerifyUserResponse__Result::code() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.code)
  return code_;
}
inline void VerifyUserResponse__Result::set_code(::google::protobuf::int32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.code)
}

// optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result._Result result = 2;
inline bool VerifyUserResponse__Result::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyUserResponse__Result::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyUserResponse__Result::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyUserResponse__Result::clear_result() {
  if (result_ != NULL) result_->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result::Clear();
  clear_has_result();
}
inline const ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result& VerifyUserResponse__Result::result() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
  return result_ != NULL ? *result_
                         : *::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* VerifyUserResponse__Result::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
  return result_;
}
inline ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* VerifyUserResponse__Result::release_result() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
  clear_has_result();
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* temp = result_;
  result_ = NULL;
  return temp;
}
inline void VerifyUserResponse__Result::set_allocated_result(::com::tencent::mars::microchat::proto::VerifyUserResponse__Result__Result* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserResponse._Result.result)
}

// -------------------------------------------------------------------

// VerifyUserResponse

// optional .com.tencent.mars.microchat.proto.VerifyUserResponse._Result tag1 = 1;
inline bool VerifyUserResponse::has_tag1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void VerifyUserResponse::set_has_tag1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void VerifyUserResponse::clear_has_tag1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void VerifyUserResponse::clear_tag1() {
  if (tag1_ != NULL) tag1_->::com::tencent::mars::microchat::proto::VerifyUserResponse__Result::Clear();
  clear_has_tag1();
}
inline const ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result& VerifyUserResponse::tag1() const {
  // @@protoc_insertion_point(field_get:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
  return tag1_ != NULL ? *tag1_
                         : *::com::tencent::mars::microchat::proto::VerifyUserResponse__Result::internal_default_instance();
}
inline ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* VerifyUserResponse::mutable_tag1() {
  set_has_tag1();
  if (tag1_ == NULL) {
    tag1_ = new ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result;
  }
  // @@protoc_insertion_point(field_mutable:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
  return tag1_;
}
inline ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* VerifyUserResponse::release_tag1() {
  // @@protoc_insertion_point(field_release:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
  clear_has_tag1();
  ::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* temp = tag1_;
  tag1_ = NULL;
  return temp;
}
inline void VerifyUserResponse::set_allocated_tag1(::com::tencent::mars::microchat::proto::VerifyUserResponse__Result* tag1) {
  delete tag1_;
  tag1_ = tag1;
  if (tag1) {
    set_has_tag1();
  } else {
    clear_has_tag1();
  }
  // @@protoc_insertion_point(field_set_allocated:com.tencent.mars.microchat.proto.VerifyUserResponse.tag1)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace proto
}  // namespace microchat
}  // namespace mars
}  // namespace tencent
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_VerifyUser_2eproto__INCLUDED
